//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: fsync mmap
 */
static int test_fsync_mmap_pf0_0_0(void) {
  int r = fsync(10);
  expect_result("r", r, 0);
  return xerrno(r);
}
static int test_fsync_mmap_pf0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_fsync_mmap_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_fsync_mmap_pf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_fsync_mmap_pf0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_fsync_mmap_pf0_0_final(void) {
  unlink("__i0");
}
static void setup_fsync_mmap_pf0_0_procfinal(void) {
  
}

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pf0_1_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_fsync_mmap_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pf0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_fsync_mmap_pf0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_fsync_mmap_pf0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_4_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_fsync_mmap_pf0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_fsync_mmap_pf0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
static void setup_fsync_mmap_pf0_5_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_fsync_mmap_pf0_5_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_5_common
static void setup_fsync_mmap_pf0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_fsync_mmap_pf0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_5_final
// static void setup_fsync_mmap_pf0_6_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pf0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_fsync_mmap_pf0_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_fsync_mmap_pf0_7_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_fsync_mmap_pf0_7_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pf0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_fsync_mmap_pf0_2_proc0
// static void setup_fsync_mmap_pf0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_8_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pf0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pf0_3_proc0
// static void setup_fsync_mmap_pf0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_9_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pf0_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_10_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_11_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_12_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_fsync_mmap_pf0_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_5_final
// static void setup_fsync_mmap_pf0_13_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pf0_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_14_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_15_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_13_common
static void setup_fsync_mmap_pf0_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_5_final
// static void setup_fsync_mmap_pf0_16_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_pf0_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_17_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pf0_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_fsync_mmap_pf0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pf0_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pf0_18_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pf0_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pf0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_19_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pf0_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pf0_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_21_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_22_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pf0_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_22_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_23_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_23_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pf0_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_23_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_24_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_24_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pf0_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pf0_23_proc0
// static void setup_fsync_mmap_pf0_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_25_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_25_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
static void setup_fsync_mmap_pf0_25_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pf0_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
static void setup_fsync_mmap_pf0_25_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_fsync_mmap_pf0_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_26_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_26_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_26_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_26_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_27_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_27_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_27_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_27_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_28_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_28_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_28_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_28_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_29_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_29_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_29_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_29_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_30_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_30_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_30_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_31_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_31_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_31_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_31_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_32_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_32_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_32_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_33_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_33_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pf0_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_33_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_33_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_34_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_34_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_34_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_34_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_35_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_35_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pf0_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_35_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_35_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_36_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_36_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_36_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_37_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_37_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_37_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_37_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_38_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_38_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_38_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_39_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_39_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_39_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_39_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_40_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_40_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_40_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_41_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_41_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pf0_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_41_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_41_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_42_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_42_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_42_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_42_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_43_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_43_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pf0_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_43_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_43_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_44_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_44_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
static void setup_fsync_mmap_pf0_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pf0_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pf0_44_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pf0_45_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pf0_45_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_pf0_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pf0_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pf0_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pf0_45_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pf0_45_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pec_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_fsync_mmap_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc0
// static void setup_fsync_mmap_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
static void setup_fsync_mmap_pec_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pec_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_fsync_mmap_pec_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_fsync_mmap_pec_1_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_fsync_mmap_pec_1_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
static void setup_fsync_mmap_pec_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_fsync_mmap_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc0
// static void setup_fsync_mmap_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
static void setup_fsync_mmap_pec_2_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_fsync_mmap_pec_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
static void setup_fsync_mmap_pec_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pec_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
static void setup_fsync_mmap_pec_3_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_fsync_mmap_pec_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
static void setup_fsync_mmap_pec_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pec_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
static void setup_fsync_mmap_pec_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pec_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
static void setup_fsync_mmap_pec_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pec_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
static void setup_fsync_mmap_pec_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pec_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pec_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pec_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pec_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_4_proc0
// static void setup_fsync_mmap_pec_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pec_10_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pec_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_5_proc0
// static void setup_fsync_mmap_pec_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pec_11_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pec_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_6_proc0
// static void setup_fsync_mmap_pec_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pec_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pec_12_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pec_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc0
// static void setup_fsync_mmap_pec_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pec_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pec_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pec_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_14_proc0
// static void setup_fsync_mmap_pec_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pec_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pec_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_22_proc0
// static void setup_fsync_mmap_pec_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pec_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_22_proc0
// static void setup_fsync_mmap_pec_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pec_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pec_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pec_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_pec_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pec_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_18_proc0
// static void setup_fsync_mmap_pec_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pec_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pec_20_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_fsync_mmap_pec_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pec_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pec_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pec_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pec_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pec_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pec_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pec_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pec_21_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pec_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pe8_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_fsync_mmap_pe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pe8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pe8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
static void setup_fsync_mmap_pe8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_fsync_mmap_pe8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
static void setup_fsync_mmap_pe8_1_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_fsync_mmap_pe8_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
static void setup_fsync_mmap_pe8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_fsync_mmap_pe8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pe8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pe8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
// static void setup_fsync_mmap_pe8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pe8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pe8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pe8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pe8_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pe8_4_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_fsync_mmap_pe8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pe8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pe8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pe8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pe8_4_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
// static void setup_fsync_mmap_pe8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
static void setup_fsync_mmap_pe8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pe8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pe8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
// static void setup_fsync_mmap_pe8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pe8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pe8_5_proc0
// static void setup_fsync_mmap_pe8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pe8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe8_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe8_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
// static void setup_fsync_mmap_pe8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pe8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pe8_2_proc0
// static void setup_fsync_mmap_pe8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pe8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe0_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pe0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_fsync_mmap_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe0_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe0_0_1
// static void setup_fsync_mmap_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pe0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pe0_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pe0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe0_0_1
// static void setup_fsync_mmap_pe0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pe0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pe0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pe0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pe0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pd8_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pd8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pd8_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pd8_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pd8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pd8_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pd8_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pd8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pd8_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pd8_3_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pd8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pd8_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_1_1
// static void setup_fsync_mmap_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_1_1
// static void setup_fsync_mmap_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_pd8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pd8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_3_1
// static void setup_fsync_mmap_pd8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pd8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_pd8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pd8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pd8_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pd8_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_3_1
// static void setup_fsync_mmap_pd8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pd8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pd8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pd8_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pd8_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pcc_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_fsync_mmap_pcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc0
// static void setup_fsync_mmap_pcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pcc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc0
// static void setup_fsync_mmap_pcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pcc_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pcc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc0
// static void setup_fsync_mmap_pcc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pcc_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_3_proc0
// static void setup_fsync_mmap_pcc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pcc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_4_proc0
// static void setup_fsync_mmap_pcc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pcc_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pcc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_5_proc0
// static void setup_fsync_mmap_pcc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pcc_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pcc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_6_proc0
// static void setup_fsync_mmap_pcc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pcc_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_7_proc0
// static void setup_fsync_mmap_pcc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_8_proc0
// static void setup_fsync_mmap_pcc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_9_proc0
// static void setup_fsync_mmap_pcc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pcc_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_4_proc0
// static void setup_fsync_mmap_pcc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pcc_10_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pcc_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_5_proc0
// static void setup_fsync_mmap_pcc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pcc_11_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pcc_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_6_proc0
// static void setup_fsync_mmap_pcc_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_1_proc1
// static void setup_fsync_mmap_pcc_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pcc_12_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc0
// static void setup_fsync_mmap_pcc_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_14_proc0
// static void setup_fsync_mmap_pcc_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_14_proc0
// static void setup_fsync_mmap_pcc_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_22_proc0
// static void setup_fsync_mmap_pcc_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_22_proc0
// static void setup_fsync_mmap_pcc_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_18_proc0
// static void setup_fsync_mmap_pcc_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_pcc_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pcc_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pec_18_proc0
// static void setup_fsync_mmap_pcc_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pcc_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pcc_20_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_fsync_mmap_pcc_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pcc_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pcc_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pcc_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_pcc_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pcc_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pcc_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pcc_21_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pcc_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_0_proc0
// static void setup_fsync_mmap_pca_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
// static void setup_fsync_mmap_pca_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_proc0
// static void setup_fsync_mmap_pca_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_pca_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
// static void setup_fsync_mmap_pca_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_proc0
// static void setup_fsync_mmap_pca_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_pca_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pe8_2_proc0
// static void setup_fsync_mmap_pca_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
static void setup_fsync_mmap_pca_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pca_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
static void setup_fsync_mmap_pca_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pca_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_3_proc0
// static void setup_fsync_mmap_pca_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_6_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
static void setup_fsync_mmap_pca_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_fsync_mmap_pca_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_7_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pca_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_8_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
static void setup_fsync_mmap_pca_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_pca_9_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
// static void setup_fsync_mmap_pca_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_9_proc0
// static void setup_fsync_mmap_pca_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_pca_10_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_5_proc0
// static void setup_fsync_mmap_pca_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_5_proc0
// static void setup_fsync_mmap_pca_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_5_proc0
// static void setup_fsync_mmap_pca_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_8_proc0
// static void setup_fsync_mmap_pca_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_14_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_5_proc0
// static void setup_fsync_mmap_pca_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
static void setup_fsync_mmap_pca_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pca_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
static void setup_fsync_mmap_pca_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pca_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_5_1
// static void setup_fsync_mmap_pca_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pca_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_21_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_22_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_22_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_5_proc0
// static void setup_fsync_mmap_pca_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_22_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_23_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_22_1
// static void setup_fsync_mmap_pca_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_23_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_23_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_24_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_5_1
// static void setup_fsync_mmap_pca_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pca_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pca_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_25_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_5_1
// static void setup_fsync_mmap_pca_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pca_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pca_16_proc0
// static void setup_fsync_mmap_pca_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pca_25_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pca_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_26_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_26_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pca_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_26_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_27_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pca_27_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_pca_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_pca_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_27_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_28_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_28_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_3_proc0
// static void setup_fsync_mmap_pca_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_28_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_29_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_29_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_pca_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_21_proc0
// static void setup_fsync_mmap_pca_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_29_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_30_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_30_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_5_1
// static void setup_fsync_mmap_pca_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
static void setup_fsync_mmap_pca_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pca_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_30_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_31_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_31_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_pca_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_21_proc0
// static void setup_fsync_mmap_pca_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_31_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_32_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_32_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_pca_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pca_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_32_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pca_33_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pca_33_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_27_1
// static void setup_fsync_mmap_pca_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pca_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pca_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pca_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pca_33_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pc0_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pc0_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_fsync_mmap_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pc0_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pc0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pc0_0_1
// static void setup_fsync_mmap_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pc0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pc0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pc0_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pc0_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pc0_0_1
// static void setup_fsync_mmap_pc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pc0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pc0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pb0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pb0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pb0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pb0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_fsync_mmap_pb0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_5_common
// static void setup_fsync_mmap_pb0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_fsync_mmap_pb0_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_5_final
// static void setup_fsync_mmap_pb0_4_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pb0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pb0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pb0_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
static void setup_fsync_mmap_pb0_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_fsync_mmap_pb0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_fsync_mmap_pb0_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pb0_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pb0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pb0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_7_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pb0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_8_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pb0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_8_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_13_common
// static void setup_fsync_mmap_pb0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
static void setup_fsync_mmap_pb0_9_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pb0_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_5_final
// static void setup_fsync_mmap_pb0_9_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_pb0_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_pb0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_8_proc1
// static void setup_fsync_mmap_pb0_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pb0_10_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_11_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_pb0_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_12_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_pb0_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_13_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_pb0_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
// static void setup_fsync_mmap_pb0_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_14_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_fsync_mmap_pb0_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pb0_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pb0_15_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_pb0_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pb0_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_fsync_mmap_pb0_11_proc1
// static void setup_fsync_mmap_pb0_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_15_proc1
// static void setup_fsync_mmap_pb0_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
// static void setup_fsync_mmap_pb0_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
static void setup_fsync_mmap_pb0_19_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_fsync_mmap_pb0_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pb0_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_fsync_mmap_pb0_12_proc1
// static void setup_fsync_mmap_pb0_20_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_20_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pb0_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_13_proc1
// static void setup_fsync_mmap_pb0_21_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pb0_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pb0_22_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pb0_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_pb0_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_25_common
// static void setup_fsync_mmap_pb0_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pb0_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_14_proc1
// static void setup_fsync_mmap_pb0_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_25_final
// static void setup_fsync_mmap_pb0_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_pac_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
static void setup_fsync_mmap_pac_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pac_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_1_proc0
// static void setup_fsync_mmap_pac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pac_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
static void setup_fsync_mmap_pac_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_fsync_mmap_pac_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pac_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pac_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pac_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
static void setup_fsync_mmap_pac_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pac_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pac_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pac_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_pac_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_pac_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pac_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pac_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_pac_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pac_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_pac_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_pac_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pac_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pac_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
static void setup_fsync_mmap_pac_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pac_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_pac_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pac_10_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pac_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pac_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pac_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_pac_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_pac_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pac_13_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pac_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_pac_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_pac_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_pac_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_pac_15_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_pac_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pac_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pac_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pac_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pac_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pac_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pac_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pac_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pac_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_pac_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_pac_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_pac_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_pac_19_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_pac_19_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_pa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_fsync_mmap_pa8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
static void setup_fsync_mmap_pa8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_pa8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_pa8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pa8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_pa8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pa8_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pa8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_pa8_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_pa8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pa8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pa8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pa8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_pa8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pa8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_7_common
// static void setup_fsync_mmap_pa8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pa8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_pa8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pa8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa8_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_pa8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_pa8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pa8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_pa8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_pa8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa0_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_pa0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_fsync_mmap_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa0_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pa0_0_1
// static void setup_fsync_mmap_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pa0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pa0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_pa0_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_pa0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pa0_0_1
// static void setup_fsync_mmap_pa0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_pa0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_pa0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_pa0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_pa0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p98_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p98_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_p98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p98_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p98_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_p98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p98_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p98_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_p98_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p98_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p98_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p98_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p98_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p98_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p98_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_p98_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p98_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p98_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p98_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p98_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_1_proc0
// static void setup_fsync_mmap_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_1_proc0
// static void setup_fsync_mmap_p8c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_p8c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_p8c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_p8c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_p8c_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_p8c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_p8c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_p8c_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_p8c_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_p8c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_p8c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_p8c_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_p8c_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_p8c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc0
// static void setup_fsync_mmap_p8c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_p8c_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_p8c_10_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_p8c_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_p8c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_p8c_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_p8c_12_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_p8c_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_p8c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_4_proc1
// static void setup_fsync_mmap_p8c_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_p8c_14_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_3_common
// static void setup_fsync_mmap_p8c_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8c_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_2_common
// static void setup_fsync_mmap_p8c_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_p8c_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_p8c_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_2_final
// static void setup_fsync_mmap_p8c_17_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p8c_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8c_18_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8c_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8c_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8c_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p8c_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pec_1_common
// static void setup_fsync_mmap_p8c_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_10_proc0
// static void setup_fsync_mmap_p8c_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_5_proc1
// static void setup_fsync_mmap_p8c_19_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_final
// static void setup_fsync_mmap_p8c_19_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_fsync_mmap_pec_1_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_p8a_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_fsync_mmap_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p8a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
// static void setup_fsync_mmap_p8a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_1_proc0
// static void setup_fsync_mmap_p8a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_p8a_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_27_1
// static void setup_fsync_mmap_p8a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pe8_1_common
// static void setup_fsync_mmap_p8a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_1_proc0
// static void setup_fsync_mmap_p8a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_p8a_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p8a_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pe8_2_common
// static void setup_fsync_mmap_p8a_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_p8a_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_p8a_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
static void setup_fsync_mmap_p8a_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_fsync_mmap_p8a_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_p8a_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
static void setup_fsync_mmap_p8a_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_fsync_mmap_p8a_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pa8_3_proc1
// static void setup_fsync_mmap_p8a_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_7_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8a_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_9_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_10_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p8a_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
static void setup_fsync_mmap_p8a_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_p8a_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_10_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_11_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8a_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_12_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8a_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_13_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8a_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_14_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pac_0_proc0
// static void setup_fsync_mmap_p8a_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_15_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_p8a_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_15_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_16_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p8a_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_16_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_17_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
static void setup_fsync_mmap_p8a_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_fsync_mmap_p8a_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_p8a_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_p8a_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_p8a_17_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_18_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
static void setup_fsync_mmap_p8a_18_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_p8a_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_18_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_19_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_19_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_20_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_p8a_17_common
// static void setup_fsync_mmap_p8a_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p8a_17_proc0
// static void setup_fsync_mmap_p8a_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_p8a_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_fsync_mmap_pe8_1_final
// static void setup_fsync_mmap_p8a_20_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_21_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_21_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_22_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_6_common
// static void setup_fsync_mmap_p8a_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pec_3_final
// static void setup_fsync_mmap_p8a_22_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_23_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_26_proc0
// static void setup_fsync_mmap_p8a_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_23_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_24_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_24_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_24_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_25_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_1_1
// static void setup_fsync_mmap_p8a_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_25_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_25_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_26_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p8a_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_26_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_26_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_27_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p8a_5_1
// static void setup_fsync_mmap_p8a_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_p8a_5_common
// static void setup_fsync_mmap_p8a_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p8a_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p8a_18_proc1
// static void setup_fsync_mmap_p8a_27_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p8a_27_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_28_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_28_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p8a_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_28_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p8a_29_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p8a_29_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_27_1
// static void setup_fsync_mmap_p8a_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pca_7_common
// static void setup_fsync_mmap_p8a_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p8a_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p8a_29_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p80_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
static int test_fsync_mmap_p80_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_fsync_mmap_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p80_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p80_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p80_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p80_0_1
// static void setup_fsync_mmap_p80_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p80_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p80_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p80_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p80_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p80_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_0
// static int test_fsync_mmap_p80_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p80_0_1
// static void setup_fsync_mmap_p80_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p80_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p80_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p80_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p80_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
static int test_fsync_mmap_p70_0_0(void) {
  int r = fsync(10);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_fsync_mmap_p70_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
static void setup_fsync_mmap_p70_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_fsync_mmap_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p70_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_p70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_p70_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_p70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_fsync_mmap_pb0_1_proc1
// static void setup_fsync_mmap_p70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_2_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p70_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p70_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_2_proc1
// static void setup_fsync_mmap_p70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p70_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p70_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_fsync_mmap_pb0_7_proc1
// static void setup_fsync_mmap_p70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_4_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p70_4_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_5_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p70_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p70_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_8_proc1
// static void setup_fsync_mmap_p70_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_5_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_6_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_p70_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_p70_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_fsync_mmap_p70_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_6_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_7_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_p70_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_p70_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_fsync_mmap_p70_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_7_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_8_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_p70_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_p70_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_fsync_mmap_p70_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_8_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p70_9_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p70_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_1_1
// static void setup_fsync_mmap_p70_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
static void setup_fsync_mmap_p70_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_fsync_mmap_p70_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p70_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p70_9_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p6c_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p6c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_p6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_p6c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p6c_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p6c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_0_1
// static void setup_fsync_mmap_p6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
static void setup_fsync_mmap_p6c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_fsync_mmap_p6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p6c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p68_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p68_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_0_1
// static void setup_fsync_mmap_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
static void setup_fsync_mmap_p68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_fsync_mmap_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p68_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p60_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p60_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe0_0_1
// static void setup_fsync_mmap_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p60_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p60_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p60_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p60_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pa0_0_1
// static void setup_fsync_mmap_p60_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p60_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p60_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p60_1_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p60_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p58_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p58_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_p58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p58_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p58_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p58_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_p58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_1_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p58_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p58_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p58_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_1_1
// static void setup_fsync_mmap_p58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p70_1_proc0
// static void setup_fsync_mmap_p58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p58_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p58_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p58_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_3_1
// static void setup_fsync_mmap_p58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p70_1_proc0
// static void setup_fsync_mmap_p58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p58_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p58_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4c_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_p4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p6c_0_proc0
// static void setup_fsync_mmap_p4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p4c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p4c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4c_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_0_1
// static void setup_fsync_mmap_p4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_p6c_1_proc0
// static void setup_fsync_mmap_p4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p4c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p4c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4a_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_p4a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p4a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p68_0_proc0
// static void setup_fsync_mmap_p4a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p4a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p4a_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4a_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_p4a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p4a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p68_0_proc0
// static void setup_fsync_mmap_p4a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p4a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p4a_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4a_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_0_1
// static void setup_fsync_mmap_p4a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p4a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p70_1_proc0
// static void setup_fsync_mmap_p4a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p4a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p4a_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p4a_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p4a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 11, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_2_1
// static void setup_fsync_mmap_p4a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p4a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_p70_1_proc0
// static void setup_fsync_mmap_p4a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p4a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p4a_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p40_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p40_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 11, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pc0_0_1
// static void setup_fsync_mmap_p40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p40_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p40_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p40_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p40_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p80_0_1
// static void setup_fsync_mmap_p40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p40_1_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p40_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p30_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p30_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p30_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_fsync_mmap_pb0_1_proc1
// static void setup_fsync_mmap_p30_1_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p30_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p30_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p30_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p30_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p30_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_2_proc1
// static void setup_fsync_mmap_p30_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p30_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p30_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p30_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p30_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p30_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_fsync_mmap_pb0_7_proc1
// static void setup_fsync_mmap_p30_3_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p30_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p30_4_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p30_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pf0_0_1
// static void setup_fsync_mmap_p30_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_common
// static void setup_fsync_mmap_p30_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p30_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_fsync_mmap_pb0_8_proc1
// static void setup_fsync_mmap_p30_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p30_4_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p2c_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p2c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p2c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p2c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p2c_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p2c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pec_20_1
// static void setup_fsync_mmap_p2c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p2c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p2c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p2c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p2c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p28_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p28_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pe8_4_1
// static void setup_fsync_mmap_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p28_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p20_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p20_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pa0_0_1
// static void setup_fsync_mmap_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p20_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p20_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p18_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_0_1
// static void setup_fsync_mmap_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p18_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p18_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p18_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pd8_2_1
// static void setup_fsync_mmap_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p18_1_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p18_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0c_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p0c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p0c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p0c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_19_proc0
// static void setup_fsync_mmap_p0c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p0c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0c_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pcc_20_1
// static void setup_fsync_mmap_p0c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_fsync_mmap_pf0_19_common
// static void setup_fsync_mmap_p0c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_7_proc1
// static void setup_fsync_mmap_p0c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_fsync_mmap_pf0_20_proc0
// static void setup_fsync_mmap_p0c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_final
// static void setup_fsync_mmap_p0c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_fsync_mmap_pf0_7_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0a_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p0a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p0a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p0a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p0a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p0a_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0a_1_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_27_1
// static void setup_fsync_mmap_p0a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p0a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p0a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pa8_0_proc1
// static void setup_fsync_mmap_p0a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p0a_1_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0a_2_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_26_1
// static void setup_fsync_mmap_p0a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p0a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p0a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p0a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p0a_2_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p0a_3_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p0a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_pca_27_1
// static void setup_fsync_mmap_p0a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_4_common
// static void setup_fsync_mmap_p0a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p0a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_fsync_mmap_pf0_0_proc0
// static void setup_fsync_mmap_p0a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_fsync_mmap_pf0_0_final
// static void setup_fsync_mmap_p0a_3_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

/*
 * calls: fsync mmap
 */
// static int test_fsync_mmap_p00_0_0(void) {
//   int r = fsync(10);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p70_0_0
// static int test_fsync_mmap_p00_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_fsync_mmap_p80_0_1
// static void setup_fsync_mmap_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_fsync_mmap_p70_0_common
// static void setup_fsync_mmap_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_fsync_mmap_pf0_0_proc1
// static void setup_fsync_mmap_p00_0_final(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal
// static void setup_fsync_mmap_p00_0_procfinal(void) {
//   
// }
// ^ See setup_fsync_mmap_pf0_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-fsync_mmap_pf0_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_1",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_2",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_2_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_3",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_3_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_4",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_4_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_5",
    &setup_fsync_mmap_pf0_5_common,
    { { &setup_fsync_mmap_pf0_5_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_6",
    &setup_fsync_mmap_pf0_5_common,
    { { &setup_fsync_mmap_pf0_6_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_7",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pf0_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_8",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_2_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_9",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_3_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_10",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_10_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_11",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_11_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_12",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_12_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_13",
    &setup_fsync_mmap_pf0_13_common,
    { { &setup_fsync_mmap_pf0_13_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_14",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_14_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_15",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_15_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_16",
    &setup_fsync_mmap_pf0_13_common,
    { { &setup_fsync_mmap_pf0_16_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_17",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_17_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_18",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_18_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_19",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_20",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_21",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_21_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_22",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_22_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_23",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_23_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_24",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_23_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_25",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_25_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_26",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_26_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_27",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_27_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_28",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_28_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_29",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_29_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_30",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_30_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_31",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_31_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_32",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_32_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_33",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_33_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_34",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_34_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_35",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_35_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_36",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_36_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_37",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_37_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_38",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_38_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_39",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_39_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_40",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_40_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_41",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_41_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_42",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_42_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_43",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_43_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_44",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_44_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pf0_45",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_45_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_1",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_1_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_2",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_1_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_3",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_3_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_4",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_4_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_5",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_5_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_6",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_6_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_7",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_8",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_8_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_9",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_9_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_10",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_4_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_11",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_5_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_12",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_6_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_13",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_14",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_14_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_15",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_14_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_16",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_22_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_17",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_22_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_18",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_18_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_19",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_18_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_20",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pec_21",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pe8_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_1",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pe8_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_2",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pe8_2_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_3",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pe8_3_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_4",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_5",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pe8_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_6",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pe8_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe8_7",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pe8_2_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe0_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe0_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pe0_2",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_1",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_2",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_3",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_4",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_5",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_6",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_7",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_8",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_9",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_10",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pd8_11",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_1",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_1_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_2",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_1_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_3",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_3_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_4",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_4_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_5",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_5_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_6",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pec_6_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_7",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_8",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_8_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_9",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_9_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_10",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_4_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_11",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_5_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_12",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pec_6_proc0 }, { &setup_fsync_mmap_pec_1_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_13",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_7_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_14",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_14_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_15",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_14_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_16",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_22_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_17",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_22_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_18",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pec_18_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_19",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pec_18_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_20",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pcc_21",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pe8_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_1",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pe8_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_2",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pe8_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_3",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pe8_2_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_4",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_4_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_5",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_6",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pe8_3_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_7",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pca_7_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_8",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_8_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_9",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pca_9_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_10",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pca_9_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_11",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_12",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_13",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_14",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_8_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_15",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_16",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_17",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_18",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_19",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_20",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_21",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_21_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_22",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_5_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_22_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_23",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_22_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_24",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_25",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pca_16_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_26",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_26_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_27",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_26_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_28",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pe8_3_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_29",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_21_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_30",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pca_30_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_31",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_21_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_32",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pca_33",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pc0_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pc0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pc0_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pc0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pc0_2",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pc0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_1",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_1_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_2",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_2_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_3",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_3_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_4",
    &setup_fsync_mmap_pf0_5_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_4_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_5",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_6",
    &setup_fsync_mmap_pb0_6_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_6_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_7",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_7_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_8",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_8_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_9",
    &setup_fsync_mmap_pf0_13_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pb0_9_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_5_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_10",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pca_26_proc0 }, { &setup_fsync_mmap_pb0_8_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_11",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_11_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_12",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_12_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_13",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_13_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_14",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_14_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_15",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pb0_15_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_16",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_17",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_11_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_18",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_15_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_19",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_19_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_20",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_12_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_21",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_13_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pb0_22",
    &setup_fsync_mmap_pf0_25_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pb0_14_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_25_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pac_0_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_1",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pac_1_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_2",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pac_1_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_3",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_4",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_5",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_6",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_7",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pac_0_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_8",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_9",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_10",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_11",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_12",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_13",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_14",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_15",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_16",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_17",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_18",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pac_19",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pa8_0_proc0 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_1",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pa8_1_proc0 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_2",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pca_26_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_3",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_4",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_5",
    &setup_fsync_mmap_pf0_7_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa8_6",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa0_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pa0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa0_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pa0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_pa0_2",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pa0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_1",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_2",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_3",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_4",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p98_5",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pac_0_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_1",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pac_1_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_2",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pac_1_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_3",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_4",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_5",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_6",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_7",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_8",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pac_0_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_9",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_10",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_4_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_11",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_12",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_13",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_14",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_4_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_15",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_16",
    &setup_fsync_mmap_pec_3_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_17",
    &setup_fsync_mmap_pec_2_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_2_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_18",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8c_19",
    &setup_fsync_mmap_pec_1_common,
    { { &setup_fsync_mmap_pac_10_proc0 }, { &setup_fsync_mmap_pac_5_proc1 } },
    &setup_fsync_mmap_pec_1_procfinal,
    &setup_fsync_mmap_pec_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pa8_0_proc1 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_1",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pca_26_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_2",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pa8_1_proc0 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_3",
    &setup_fsync_mmap_pe8_1_common,
    { { &setup_fsync_mmap_pa8_1_proc0 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_4",
    &setup_fsync_mmap_pe8_2_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_5",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_6",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pa8_3_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_7",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_8",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pac_0_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_9",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_10",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_p8a_10_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_11",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pac_0_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_12",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pac_0_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_13",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pac_0_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_14",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pac_0_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_15",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pca_26_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_16",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pa8_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_17",
    &setup_fsync_mmap_p8a_17_common,
    { { &setup_fsync_mmap_p8a_17_proc0 }, { &setup_fsync_mmap_pca_26_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_18",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_19",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_20",
    &setup_fsync_mmap_p8a_17_common,
    { { &setup_fsync_mmap_p8a_17_proc0 }, { &setup_fsync_mmap_pca_26_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pe8_1_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_21",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_22",
    &setup_fsync_mmap_p8a_6_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pec_3_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_23",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pca_26_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_24",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_25",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_26",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_27",
    &setup_fsync_mmap_p8a_5_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_p8a_18_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p8a_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_28",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p8a_29",
    &setup_fsync_mmap_pca_7_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p80_0",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p80_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p80_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_19_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p80_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p80_2",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_20_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_pf0_0_0, 0, "fsync" },
      { &test_fsync_mmap_p80_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_1",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_2",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pb0_1_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_3",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pb0_2_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_4",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pb0_7_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_5",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pb0_8_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_6",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_6_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_7",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_7_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_8",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_8_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p70_9",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_9_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p6c_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_p6c_0_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p6c_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_p6c_1_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p68_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_p68_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p60_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p60_1",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pa0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p58_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p58_1",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p58_2",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p58_3",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_p70_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4c_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_p6c_0_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4c_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_p6c_1_proc0 }, { &setup_fsync_mmap_pf0_7_proc1 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4a_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_p68_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4a_1",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_p68_0_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4a_2",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_p70_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p4a_3",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_p70_1_proc0 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p40_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pc0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p40_1",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_p80_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p30_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p30_1",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pb0_1_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p30_2",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pb0_2_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p30_3",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pb0_7_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p30_4",
    &setup_fsync_mmap_pf0_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pb0_8_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p2c_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc1 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p2c_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc1 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pec_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p28_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pe8_4_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p20_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pa0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p18_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p18_1",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pd8_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0c_0",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc1 }, { &setup_fsync_mmap_pf0_19_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0c_1",
    &setup_fsync_mmap_pf0_19_common,
    { { &setup_fsync_mmap_pf0_7_proc1 }, { &setup_fsync_mmap_pf0_20_proc0 } },
    &setup_fsync_mmap_pf0_7_procfinal,
    &setup_fsync_mmap_pf0_7_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pcc_20_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0a_0",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0a_1",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pa8_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0a_2",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_26_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p0a_3",
    &setup_fsync_mmap_pf0_4_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc0 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_final,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_pca_27_1, 1, "mmap" } },
    &cleanup },
  { "fs-fsync_mmap_p00_0",
    &setup_fsync_mmap_p70_0_common,
    { { &setup_fsync_mmap_pf0_0_proc1 }, { &setup_fsync_mmap_pf0_0_proc1 } },
    &setup_fsync_mmap_pf0_0_procfinal,
    &setup_fsync_mmap_pf0_0_procfinal,
    { { &test_fsync_mmap_p70_0_0, 0, "fsync" },
      { &test_fsync_mmap_p80_0_1, 1, "mmap" } },
    &cleanup },
//+++ common
  {}
};
