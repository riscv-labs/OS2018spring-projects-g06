//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_pf8_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static int test_mmap_mprotect_pf8_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  int r = mprotect(va, 4096, PROT_READ);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_mmap_mprotect_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
static void setup_mmap_mprotect_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 1, 0);
}
static void setup_mmap_mprotect_pf8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_mprotect_pf8_0_final(void) {
  
}
static void setup_mmap_mprotect_pf8_0_procfinal(void) {
  
}

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_mprotect_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pf8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_mprotect_pf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
static void setup_mmap_mprotect_pf8_2_final(void) {
  unlink("__i0");
}
// static void setup_mmap_mprotect_pf8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_pf8_3_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_mprotect_pf8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_2_proc0
// static void setup_mmap_mprotect_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
static int test_mmap_mprotect_pf8_4_1(void) {
  int* va = (int*) 0x12345601000UL;
  int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_mmap_mprotect_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_4_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_2_proc0
// static void setup_mmap_mprotect_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
static void setup_mmap_mprotect_pf8_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_mprotect_pf8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
static void setup_mmap_mprotect_pf8_7_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_mprotect_pf8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_2_proc0
// static void setup_mmap_mprotect_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pf8_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_mprotect_pf8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pf8_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_mprotect_pf8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_4_proc0
// static void setup_mmap_mprotect_pf8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_14_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_1_proc0
// static void setup_mmap_mprotect_pf8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_15_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_4_proc0
// static void setup_mmap_mprotect_pf8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_16_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_1_proc0
// static void setup_mmap_mprotect_pf8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_17_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_4_proc0
// static void setup_mmap_mprotect_pf8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_18_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_10_proc0
// static void setup_mmap_mprotect_pf8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
static void setup_mmap_mprotect_pf8_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pf8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_22_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pf8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
static void setup_mmap_mprotect_pf8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_26_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_28_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_9_proc0
// static void setup_mmap_mprotect_pf8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_7_proc0
// static void setup_mmap_mprotect_pf8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_30_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_11_proc0
// static void setup_mmap_mprotect_pf8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_9_proc0
// static void setup_mmap_mprotect_pf8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_7_proc0
// static void setup_mmap_mprotect_pf8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_11_proc0
// static void setup_mmap_mprotect_pf8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_20_proc0
// static void setup_mmap_mprotect_pf8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_21_proc0
// static void setup_mmap_mprotect_pf8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_37_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_24_proc0
// static void setup_mmap_mprotect_pf8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_23_proc0
// static void setup_mmap_mprotect_pf8_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_20_proc0
// static void setup_mmap_mprotect_pf8_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_23_proc0
// static void setup_mmap_mprotect_pf8_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_21_proc0
// static void setup_mmap_mprotect_pf8_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_43_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_43_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_24_proc0
// static void setup_mmap_mprotect_pf8_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_43_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_44_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_44_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_32_proc0
// static void setup_mmap_mprotect_pf8_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_45_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_45_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_9_proc0
// static void setup_mmap_mprotect_pf8_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_46_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pf8_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_47_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_47_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_20_proc0
// static void setup_mmap_mprotect_pf8_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_48_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_48_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_21_proc0
// static void setup_mmap_mprotect_pf8_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_48_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_49_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pf8_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_50_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_50_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_32_proc0
// static void setup_mmap_mprotect_pf8_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_50_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_51_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_51_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_23_proc0
// static void setup_mmap_mprotect_pf8_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_51_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_51_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_52_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_52_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_53_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_53_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_27_proc0
// static void setup_mmap_mprotect_pf8_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_53_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_54_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_54_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_28_proc0
// static void setup_mmap_mprotect_pf8_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_54_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_54_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_55_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_55_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_52_proc0
// static void setup_mmap_mprotect_pf8_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_55_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_56_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_56_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_27_proc0
// static void setup_mmap_mprotect_pf8_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_56_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_56_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_57_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_57_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_22_proc0
// static void setup_mmap_mprotect_pf8_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_57_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_57_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_58_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_58_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_28_proc0
// static void setup_mmap_mprotect_pf8_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_58_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_58_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_59_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_59_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_22_proc0
// static void setup_mmap_mprotect_pf8_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_59_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_60_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_60_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_52_proc0
// static void setup_mmap_mprotect_pf8_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_60_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_61_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_61_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_62_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_62_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_1_proc0
// static void setup_mmap_mprotect_pf8_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_62_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_62_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_63_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_63_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_10_proc0
// static void setup_mmap_mprotect_pf8_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_63_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_64_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_64_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_65_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pf8_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_65_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_65_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_66_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pf8_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_66_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_66_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_67_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_67_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_28_proc0
// static void setup_mmap_mprotect_pf8_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_67_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_67_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_68_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_68_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_27_proc0
// static void setup_mmap_mprotect_pf8_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_68_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_68_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_69_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_69_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_69_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_22_proc0
// static void setup_mmap_mprotect_pf8_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_69_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_69_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_70_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_70_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_52_proc0
// static void setup_mmap_mprotect_pf8_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_71_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
static int test_mmap_mprotect_pf8_71_1(void) {
  int* va = (int*) 0x12345600000UL;
  int r = mprotect(va, 4096, PROT_READ);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_mmap_mprotect_pf8_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_71_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_72_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_72_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pf8_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_72_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_72_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_73_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
static int test_mmap_mprotect_pf8_73_1(void) {
  int* va = (int*) 0x12345600000UL;
  int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_mmap_mprotect_pf8_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_73_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pf8_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_73_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_74_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_74_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pf8_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_74_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pf8_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_74_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_74_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_75_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_75_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_10_proc0
// static void setup_mmap_mprotect_pf8_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_75_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_75_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_76_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pf8_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_76_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_77_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_77_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_77_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_78_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
static void setup_mmap_mprotect_pf8_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_78_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_78_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_79_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_79_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_61_proc0
// static void setup_mmap_mprotect_pf8_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_79_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_79_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_80_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_80_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pf8_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_80_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_81_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_81_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_64_proc0
// static void setup_mmap_mprotect_pf8_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_81_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_81_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_82_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pf8_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_82_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_82_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_83_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pf8_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_83_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_84_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_84_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_25_proc0
// static void setup_mmap_mprotect_pf8_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_84_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_85_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_85_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_86_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_13_common
static void setup_mmap_mprotect_pf8_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pf8_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_86_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_86_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_87_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_87_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_61_proc0
// static void setup_mmap_mprotect_pf8_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_87_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_88_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pf8_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pf8_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_88_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_88_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_89_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_13_common
static void setup_mmap_mprotect_pf8_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pf8_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_89_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_89_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_90_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_90_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_77_proc0
// static void setup_mmap_mprotect_pf8_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_90_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_90_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_91_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_91_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_66_proc0
// static void setup_mmap_mprotect_pf8_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_91_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_92_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_92_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_82_proc0
// static void setup_mmap_mprotect_pf8_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_92_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_92_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_93_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_93_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pf8_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_93_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_0_proc0
// static void setup_mmap_mprotect_pf8_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_93_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_93_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_94_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_94_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pf8_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
static void setup_mmap_mprotect_pf8_94_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pf8_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_94_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_94_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_95_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_95_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_25_proc0
// static void setup_mmap_mprotect_pf8_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_95_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_95_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_96_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_96_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_96_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_85_proc0
// static void setup_mmap_mprotect_pf8_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_96_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_96_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_97_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_97_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_97_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_64_proc0
// static void setup_mmap_mprotect_pf8_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_97_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_97_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_98_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_13_common
static void setup_mmap_mprotect_pf8_98_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pf8_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_98_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_98_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_99_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_99_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_82_proc0
// static void setup_mmap_mprotect_pf8_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_99_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_99_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_100_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_100_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_100_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_0_proc0
// static void setup_mmap_mprotect_pf8_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_100_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_100_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_101_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_101_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_101_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_5_proc0
// static void setup_mmap_mprotect_pf8_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_101_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_101_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_102_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_102_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_102_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_66_proc0
// static void setup_mmap_mprotect_pf8_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_102_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_103_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_103_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_103_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_77_proc0
// static void setup_mmap_mprotect_pf8_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_103_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_103_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_104_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_104_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_104_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_88_proc0
// static void setup_mmap_mprotect_pf8_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_104_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_104_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_105_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pf8_105_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_13_common
// static void setup_mmap_mprotect_pf8_105_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pf8_89_proc0
// static void setup_mmap_mprotect_pf8_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_105_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_105_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_106_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_106_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_64_proc0
// static void setup_mmap_mprotect_pf8_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_106_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_106_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_107_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_107_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_25_proc0
// static void setup_mmap_mprotect_pf8_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_107_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_107_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_108_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_108_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pf8_65_proc0
// static void setup_mmap_mprotect_pf8_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_108_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_108_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_109_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_109_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_109_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_13_common
// static void setup_mmap_mprotect_pf8_109_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_86_proc0
// static void setup_mmap_mprotect_pf8_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_109_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_109_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_110_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_110_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_110_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_110_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_5_proc0
// static void setup_mmap_mprotect_pf8_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_110_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_110_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_111_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_111_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_66_proc0
// static void setup_mmap_mprotect_pf8_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_111_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_112_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_112_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_82_proc0
// static void setup_mmap_mprotect_pf8_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_112_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_112_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_113_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_113_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_61_proc0
// static void setup_mmap_mprotect_pf8_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_113_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_113_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_114_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_7_common
// static void setup_mmap_mprotect_pf8_114_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_78_proc0
// static void setup_mmap_mprotect_pf8_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_114_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_mprotect_pf8_7_final
// static void setup_mmap_mprotect_pf8_114_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_115_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pf8_115_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_88_proc0
// static void setup_mmap_mprotect_pf8_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_115_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_115_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_116_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_116_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_77_proc0
// static void setup_mmap_mprotect_pf8_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_116_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_116_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_117_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pf8_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_117_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_0_proc0
// static void setup_mmap_mprotect_pf8_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_117_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_117_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_118_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_118_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pf8_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pf8_118_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pf8_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_118_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pf8_118_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pf8_119_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_3_0
// static int test_mmap_mprotect_pf8_119_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pf8_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pf8_119_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pf8_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pf8_119_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pf8_119_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pe0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
static int test_mmap_mprotect_pe0_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  int r = mprotect(va, 4096, PROT_READ);
  expect_result("r", r, -1);
  expect_errno(12);
  return xerrno(r);
}
// static void setup_mmap_mprotect_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pe0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pe0_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pe0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pe0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pe0_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pe0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pe0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pe0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pe0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pe0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pe0_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pe0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pe0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pe0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pe0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pe0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pe0_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pe0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pe0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pe0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pe0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pe0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pd0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pd0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_5_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
static void setup_mmap_mprotect_pd0_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pd0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_pd0_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_mprotect_pd0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
static void setup_mmap_mprotect_pd0_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
static void setup_mmap_mprotect_pd0_7_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_mprotect_pd0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_pd0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_pd0_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pd0_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_7_proc1
// static void setup_mmap_mprotect_pd0_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pd0_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_pd0_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_mprotect_pd0_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_pd0_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_mmap_mprotect_pd0_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
static void setup_mmap_mprotect_pd0_14_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pd0_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pd0_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
static void setup_mmap_mprotect_pd0_15_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pd0_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_pd0_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pd0_14_proc1
// static void setup_mmap_mprotect_pd0_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pd0_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pd0_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_15_proc1
// static void setup_mmap_mprotect_pd0_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_20_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_22_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_23_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_24_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pd0_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_24_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_25_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pd0_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_26_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pd0_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_26_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pd0_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pd0_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pd0_27_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pd0_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pd0_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pd0_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pd0_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pd0_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pc0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
static int test_mmap_mprotect_pc0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  int r = mprotect(va, 4096, PROT_READ);
  expect_result("r", r, -1);
  expect_errno(12);
  return xerrno(r);
}
// static void setup_mmap_mprotect_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pc0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pc0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pc0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pc0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pc0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pc0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pc0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pc0_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_pc0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_pc0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pc0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_0
// static int test_mmap_mprotect_pc0_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pc0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pc0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pc0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pc0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pc0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_pbc_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_mprotect_pbc_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_pbc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_mprotect_pbc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
static void setup_mmap_mprotect_pbc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_mprotect_pbc_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_mmap_mprotect_pbc_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pbc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pbc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_mprotect_pbc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pbc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
static void setup_mmap_mprotect_pbc_2_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_mprotect_pbc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pbc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_pbc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pbc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pbc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_pbc_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pbc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pbc_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pbc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_pbc_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pbc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pbc_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_mprotect_pbc_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_mprotect_pbc_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pbc_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_mprotect_pbc_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pbc_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_pbc_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pbc_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pbc_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pbc_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pbc_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pbc_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pbc_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_mprotect_pbc_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pbc_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pbc_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_mprotect_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_mprotect_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb8_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pbc_0_proc0
// static void setup_mmap_mprotect_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_pb8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pb4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_pb4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pb4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pb4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pb4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_pb4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pb4_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pb4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pb4_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
static void setup_mmap_mprotect_pb4_5_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pb4_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_0_proc1
// static void setup_mmap_mprotect_pb4_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_pb4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_1_proc1
// static void setup_mmap_mprotect_pb4_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pb4_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pb4_2_proc1
// static void setup_mmap_mprotect_pb4_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_5_proc1
// static void setup_mmap_mprotect_pb4_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_pb4_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_3_proc1
// static void setup_mmap_mprotect_pb4_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_pb4_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb4_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb4_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pb4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb4_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pb4_4_proc1
// static void setup_mmap_mprotect_pb4_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb4_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pb0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pbc_0_0
// static int test_mmap_mprotect_pb0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_pb0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_pb0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_pae_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_mprotect_pae_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_11_common
static void setup_mmap_mprotect_pae_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x28000);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_mprotect_pae_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pae_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_mprotect_pae_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i2", 0x1000);
}
// static void setup_mmap_mprotect_pae_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
static void setup_mmap_mprotect_pae_5_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_mmap_mprotect_pae_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_mprotect_pae_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_7_proc0
// static void setup_mmap_mprotect_pae_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_8_proc0
// static void setup_mmap_mprotect_pae_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_pae_11_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_mprotect_pae_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_7_proc0
// static void setup_mmap_mprotect_pae_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_7_proc0
// static void setup_mmap_mprotect_pae_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_8_proc0
// static void setup_mmap_mprotect_pae_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_8_proc0
// static void setup_mmap_mprotect_pae_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_6_proc0
// static void setup_mmap_mprotect_pae_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_mprotect_pae_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_16_proc0
// static void setup_mmap_mprotect_pae_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_6_proc0
// static void setup_mmap_mprotect_pae_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_16_proc0
// static void setup_mmap_mprotect_pae_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_6_proc0
// static void setup_mmap_mprotect_pae_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_16_proc0
// static void setup_mmap_mprotect_pae_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_25_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_27_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_28_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_31_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_33_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_31_proc0
// static void setup_mmap_mprotect_pae_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_34_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_23_proc0
// static void setup_mmap_mprotect_pae_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_35_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_25_proc0
// static void setup_mmap_mprotect_pae_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_36_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_22_proc0
// static void setup_mmap_mprotect_pae_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_37_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_24_proc0
// static void setup_mmap_mprotect_pae_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_38_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_27_proc0
// static void setup_mmap_mprotect_pae_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_39_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_28_proc0
// static void setup_mmap_mprotect_pae_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_40_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_29_proc0
// static void setup_mmap_mprotect_pae_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_41_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_30_proc0
// static void setup_mmap_mprotect_pae_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_42_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_43_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_43_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_44_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_44_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_32_proc0
// static void setup_mmap_mprotect_pae_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_44_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_45_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_45_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_33_proc0
// static void setup_mmap_mprotect_pae_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_45_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_46_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_46_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_23_proc0
// static void setup_mmap_mprotect_pae_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_46_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_47_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_47_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_43_proc0
// static void setup_mmap_mprotect_pae_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_47_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_48_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_48_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_24_proc0
// static void setup_mmap_mprotect_pae_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_48_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_49_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_49_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_25_proc0
// static void setup_mmap_mprotect_pae_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_49_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_50_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_50_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_22_proc0
// static void setup_mmap_mprotect_pae_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_50_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_50_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_51_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_51_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_27_proc0
// static void setup_mmap_mprotect_pae_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_51_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_51_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_52_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_52_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_28_proc0
// static void setup_mmap_mprotect_pae_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_52_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_52_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_53_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_53_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_22_proc0
// static void setup_mmap_mprotect_pae_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_53_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_53_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_54_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_54_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_23_proc0
// static void setup_mmap_mprotect_pae_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_54_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_54_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_55_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_55_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_25_proc0
// static void setup_mmap_mprotect_pae_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_55_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_56_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_56_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_27_proc0
// static void setup_mmap_mprotect_pae_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_56_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_56_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_57_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_57_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_24_proc0
// static void setup_mmap_mprotect_pae_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_57_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_57_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_58_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_58_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_28_proc0
// static void setup_mmap_mprotect_pae_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_58_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_58_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_59_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_59_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_29_proc0
// static void setup_mmap_mprotect_pae_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_59_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_60_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_60_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_30_proc0
// static void setup_mmap_mprotect_pae_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_60_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_60_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_61_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_61_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_32_proc0
// static void setup_mmap_mprotect_pae_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_61_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_61_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_62_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_62_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_31_proc0
// static void setup_mmap_mprotect_pae_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_62_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_62_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_63_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_63_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_33_proc0
// static void setup_mmap_mprotect_pae_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_63_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_63_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_64_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_64_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_29_proc0
// static void setup_mmap_mprotect_pae_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_64_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_65_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_65_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_30_proc0
// static void setup_mmap_mprotect_pae_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_65_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_65_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_66_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_66_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_32_proc0
// static void setup_mmap_mprotect_pae_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_66_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_66_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_67_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_67_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_31_proc0
// static void setup_mmap_mprotect_pae_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_67_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_67_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_68_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_68_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_43_proc0
// static void setup_mmap_mprotect_pae_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_68_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_68_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_69_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_69_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_69_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_33_proc0
// static void setup_mmap_mprotect_pae_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_69_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_69_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_70_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_71_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_71_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_72_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_72_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_72_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_73_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_73_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_74_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_74_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_74_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_75_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_75_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_75_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_76_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_76_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_73_proc0
// static void setup_mmap_mprotect_pae_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_76_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_77_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_77_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_74_proc0
// static void setup_mmap_mprotect_pae_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_77_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_77_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_78_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_78_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_72_proc0
// static void setup_mmap_mprotect_pae_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_78_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_78_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_79_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_79_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_71_proc0
// static void setup_mmap_mprotect_pae_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_79_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_79_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_80_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_80_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_75_proc0
// static void setup_mmap_mprotect_pae_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_80_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_80_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_81_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_81_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_26_proc0
// static void setup_mmap_mprotect_pae_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_81_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_81_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_82_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_82_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_82_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_83_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_83_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_83_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_84_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_pae_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_84_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_84_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_85_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_85_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_85_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_86_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_86_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_87_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_87_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_82_proc0
// static void setup_mmap_mprotect_pae_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_87_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_88_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_88_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_83_proc0
// static void setup_mmap_mprotect_pae_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_88_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_88_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_89_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_89_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_84_proc0
// static void setup_mmap_mprotect_pae_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_89_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_89_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_90_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_90_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_70_proc0
// static void setup_mmap_mprotect_pae_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_90_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_90_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_91_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_91_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_86_proc0
// static void setup_mmap_mprotect_pae_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_91_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_92_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_92_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_85_proc0
// static void setup_mmap_mprotect_pae_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_92_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_92_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_93_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_93_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_93_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_93_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_85_proc0
// static void setup_mmap_mprotect_pae_93_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_93_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_93_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_94_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_94_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_94_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_94_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_26_proc0
// static void setup_mmap_mprotect_pae_94_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_94_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_94_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_95_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_95_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_95_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_95_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_72_proc0
// static void setup_mmap_mprotect_pae_95_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_95_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_95_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_96_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_96_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_96_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_96_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_71_proc0
// static void setup_mmap_mprotect_pae_96_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_96_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_96_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_97_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_97_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_97_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_97_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_74_proc0
// static void setup_mmap_mprotect_pae_97_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_97_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_97_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_98_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_98_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_98_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_98_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_75_proc0
// static void setup_mmap_mprotect_pae_98_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_98_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_98_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_99_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_99_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_99_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_99_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_73_proc0
// static void setup_mmap_mprotect_pae_99_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_99_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_99_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_100_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_100_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_100_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_100_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_82_proc0
// static void setup_mmap_mprotect_pae_100_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_100_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_100_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_101_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_101_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_101_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_101_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_84_proc0
// static void setup_mmap_mprotect_pae_101_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_101_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_101_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_102_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_102_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_102_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_102_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_70_proc0
// static void setup_mmap_mprotect_pae_102_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_102_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_102_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_103_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_103_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_103_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_103_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_83_proc0
// static void setup_mmap_mprotect_pae_103_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_103_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_103_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_104_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_104_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_104_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_104_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_86_proc0
// static void setup_mmap_mprotect_pae_104_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_104_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_104_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_105_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_105_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_105_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_105_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_85_proc0
// static void setup_mmap_mprotect_pae_105_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_105_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_105_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_106_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_106_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_106_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_106_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_26_proc0
// static void setup_mmap_mprotect_pae_106_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_106_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_106_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_107_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_107_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_107_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_107_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_74_proc0
// static void setup_mmap_mprotect_pae_107_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_107_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_107_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_108_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_108_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_108_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_108_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_72_proc0
// static void setup_mmap_mprotect_pae_108_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_108_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_108_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_109_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_109_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_109_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_109_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_71_proc0
// static void setup_mmap_mprotect_pae_109_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_109_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_109_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_110_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_110_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_110_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_110_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_75_proc0
// static void setup_mmap_mprotect_pae_110_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_110_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_110_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_111_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_111_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_111_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_111_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_73_proc0
// static void setup_mmap_mprotect_pae_111_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_111_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_111_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_112_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_112_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_112_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_112_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_82_proc0
// static void setup_mmap_mprotect_pae_112_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_112_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_112_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_113_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_113_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_113_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_113_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_84_proc0
// static void setup_mmap_mprotect_pae_113_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_113_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_113_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_114_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_114_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_114_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_114_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_70_proc0
// static void setup_mmap_mprotect_pae_114_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_114_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_114_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_115_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_115_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_115_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_115_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_83_proc0
// static void setup_mmap_mprotect_pae_115_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_115_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_115_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_116_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_116_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_116_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_116_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_86_proc0
// static void setup_mmap_mprotect_pae_116_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_116_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_116_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_117_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_117_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_117_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_117_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_117_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_117_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_117_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_118_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_118_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_118_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_118_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_118_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_118_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_118_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_119_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_119_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_119_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_119_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_119_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_119_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_119_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_120_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_120_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_120_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_120_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_120_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_120_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_120_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_121_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_121_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_121_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_121_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_117_proc0
// static void setup_mmap_mprotect_pae_121_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_121_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_121_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_122_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_122_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_122_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_122_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_118_proc0
// static void setup_mmap_mprotect_pae_122_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_122_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_122_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_123_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_123_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_123_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_123_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_119_proc0
// static void setup_mmap_mprotect_pae_123_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_123_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_123_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_124_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_124_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_124_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_124_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_120_proc0
// static void setup_mmap_mprotect_pae_124_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_124_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_124_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_125_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_125_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_125_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_125_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_117_proc0
// static void setup_mmap_mprotect_pae_125_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_125_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_125_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_126_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_126_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_126_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_126_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_118_proc0
// static void setup_mmap_mprotect_pae_126_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_126_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_126_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_127_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_127_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_127_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_127_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_117_proc0
// static void setup_mmap_mprotect_pae_127_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_127_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_127_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_128_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_128_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_128_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_128_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_118_proc0
// static void setup_mmap_mprotect_pae_128_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_128_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_128_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_129_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_129_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_129_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_129_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_119_proc0
// static void setup_mmap_mprotect_pae_129_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_129_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_129_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_130_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_130_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_130_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_130_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_120_proc0
// static void setup_mmap_mprotect_pae_130_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_130_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_130_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_131_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_131_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_131_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_131_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_119_proc0
// static void setup_mmap_mprotect_pae_131_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_131_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_131_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_132_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_132_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_132_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_132_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_120_proc0
// static void setup_mmap_mprotect_pae_132_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_132_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_132_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_133_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_133_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_133_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_133_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_133_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_133_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_133_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_134_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_134_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_134_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_134_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_134_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_134_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_134_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_135_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_135_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_135_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_135_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_133_proc0
// static void setup_mmap_mprotect_pae_135_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_135_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_135_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_136_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_136_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_136_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_136_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_134_proc0
// static void setup_mmap_mprotect_pae_136_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_136_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_136_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_137_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_137_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_137_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_137_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_137_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_137_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_137_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_138_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_138_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_138_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_138_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_138_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_138_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_138_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_139_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_139_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_139_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_139_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_137_proc0
// static void setup_mmap_mprotect_pae_139_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_139_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_139_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_140_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_140_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_140_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_140_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_138_proc0
// static void setup_mmap_mprotect_pae_140_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_140_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_140_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_141_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_141_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_141_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_141_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_133_proc0
// static void setup_mmap_mprotect_pae_141_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_141_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_141_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_142_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_142_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_142_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_142_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_134_proc0
// static void setup_mmap_mprotect_pae_142_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_142_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_142_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_143_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_143_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_143_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_143_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_137_proc0
// static void setup_mmap_mprotect_pae_143_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_143_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_143_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_144_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_144_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_144_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_144_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_138_proc0
// static void setup_mmap_mprotect_pae_144_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_144_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_144_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_145_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_145_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_145_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_145_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_133_proc0
// static void setup_mmap_mprotect_pae_145_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_145_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_145_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_146_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_146_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_146_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_146_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 0, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_134_proc0
// static void setup_mmap_mprotect_pae_146_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_146_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_146_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_147_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_147_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_147_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_147_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_137_proc0
// static void setup_mmap_mprotect_pae_147_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_147_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_147_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_148_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_148_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_148_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_148_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345601000, 1, 0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_138_proc0
// static void setup_mmap_mprotect_pae_148_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_148_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_148_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_149_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_149_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_149_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_149_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_149_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_149_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_149_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_150_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_150_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_150_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_150_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_150_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_150_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_150_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_151_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_151_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_151_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_151_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_149_proc0
// static void setup_mmap_mprotect_pae_151_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_151_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_151_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_152_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_152_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_152_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_152_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_150_proc0
// static void setup_mmap_mprotect_pae_152_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_152_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_152_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_153_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_153_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_153_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_153_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_149_proc0
// static void setup_mmap_mprotect_pae_153_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_153_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_153_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_154_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_154_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_154_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_154_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_150_proc0
// static void setup_mmap_mprotect_pae_154_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_154_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_154_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_155_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_155_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_155_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_155_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_149_proc0
// static void setup_mmap_mprotect_pae_155_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_155_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_155_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_156_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_156_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_156_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_156_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_150_proc0
// static void setup_mmap_mprotect_pae_156_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_156_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_156_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_157_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_157_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_157_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_157_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_157_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_157_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_157_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_158_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_158_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_158_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_158_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_158_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_158_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_158_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_159_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_159_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_159_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_159_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_157_proc0
// static void setup_mmap_mprotect_pae_159_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_159_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_159_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_160_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_160_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_160_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_160_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_158_proc0
// static void setup_mmap_mprotect_pae_160_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_160_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_160_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_161_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_161_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_161_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_161_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_157_proc0
// static void setup_mmap_mprotect_pae_161_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_161_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_161_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_162_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_162_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_162_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_162_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_158_proc0
// static void setup_mmap_mprotect_pae_162_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_162_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_162_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_163_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_163_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_163_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_163_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_157_proc0
// static void setup_mmap_mprotect_pae_163_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_163_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_163_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_164_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_164_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_164_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_164_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_158_proc0
// static void setup_mmap_mprotect_pae_164_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_164_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_164_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_165_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_165_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_165_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_165_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_165_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_165_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_165_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_166_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_166_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_166_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_166_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_166_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_166_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_166_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_167_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_167_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_167_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_167_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_165_proc0
// static void setup_mmap_mprotect_pae_167_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_167_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_167_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_168_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_168_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_168_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_168_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_166_proc0
// static void setup_mmap_mprotect_pae_168_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_168_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_168_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_169_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_169_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_169_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_169_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_169_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_169_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_169_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_170_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_170_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_170_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_170_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_170_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_170_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_170_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_171_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_171_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_171_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_171_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_170_proc0
// static void setup_mmap_mprotect_pae_171_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_171_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_171_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_172_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_172_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_172_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_172_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_pae_172_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_172_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_172_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_173_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_173_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_173_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_173_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_173_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_173_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_173_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_174_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_174_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_174_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_174_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_174_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_174_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_174_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_175_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_175_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_175_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_175_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_175_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_175_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_175_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_176_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_176_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_176_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_176_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_176_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_176_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_176_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_177_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_177_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_177_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
static void setup_mmap_mprotect_pae_177_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_177_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_177_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_177_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_178_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_178_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
static void setup_mmap_mprotect_pae_178_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_mprotect_pae_178_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i2", 0x0);
}
// static void setup_mmap_mprotect_pae_178_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_178_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_178_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_179_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_179_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_179_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
static void setup_mmap_mprotect_pae_179_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_mmap_mprotect_pae_179_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_179_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_179_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_180_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_180_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_180_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_180_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_178_proc0
// static void setup_mmap_mprotect_pae_180_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_180_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_180_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_181_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_181_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_181_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_181_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_179_proc0
// static void setup_mmap_mprotect_pae_181_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_181_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_181_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_182_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_182_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_182_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
static void setup_mmap_mprotect_pae_182_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i2", 0x0);
}
// static void setup_mmap_mprotect_pae_182_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_182_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_182_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_183_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_183_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_183_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_183_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_182_proc0
// static void setup_mmap_mprotect_pae_183_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_183_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_183_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_184_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_184_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_184_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
static void setup_mmap_mprotect_pae_184_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_mmap_mprotect_pae_184_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_184_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_184_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_185_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_185_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_185_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_185_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_179_proc0
// static void setup_mmap_mprotect_pae_185_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_185_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_185_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_186_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_186_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_186_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_186_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_178_proc0
// static void setup_mmap_mprotect_pae_186_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_186_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_186_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_187_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_187_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_187_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_187_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_179_proc0
// static void setup_mmap_mprotect_pae_187_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_187_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_187_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_188_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_188_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_188_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_188_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_178_proc0
// static void setup_mmap_mprotect_pae_188_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_188_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_188_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_189_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_189_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_189_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_189_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_182_proc0
// static void setup_mmap_mprotect_pae_189_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_189_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_189_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_190_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_190_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_190_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_190_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_184_proc0
// static void setup_mmap_mprotect_pae_190_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_190_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_190_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_191_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_191_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_191_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_191_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_184_proc0
// static void setup_mmap_mprotect_pae_191_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_191_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_191_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_192_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_192_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_192_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pae_178_common
// static void setup_mmap_mprotect_pae_192_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i1", 0x0);
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_182_proc0
// static void setup_mmap_mprotect_pae_192_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_192_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pae_5_final
// static void setup_mmap_mprotect_pae_192_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_193_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_193_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_193_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_193_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_173_proc0
// static void setup_mmap_mprotect_pae_193_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_193_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_193_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_194_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_194_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_194_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_194_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_194_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_194_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_194_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_195_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_195_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_195_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_195_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_173_proc0
// static void setup_mmap_mprotect_pae_195_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_195_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_195_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_196_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_196_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_196_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_196_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_194_proc0
// static void setup_mmap_mprotect_pae_196_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_196_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_196_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_197_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_197_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_197_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_197_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_173_proc0
// static void setup_mmap_mprotect_pae_197_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_197_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_197_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_198_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_198_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_198_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_198_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_194_proc0
// static void setup_mmap_mprotect_pae_198_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_198_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_198_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_199_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_199_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_199_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_199_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_199_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_199_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_199_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_200_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_200_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_200_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_200_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_200_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_200_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_200_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_201_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_201_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_201_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_201_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_201_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_201_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_201_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_202_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_202_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_202_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_11_common
static void setup_mmap_mprotect_pae_202_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_mprotect_pae_202_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_202_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_202_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_203_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_203_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_203_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_203_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_203_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_203_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_203_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_204_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_204_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_204_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_204_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_204_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_204_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_204_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_205_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_205_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_205_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_205_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_205_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_205_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_205_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_206_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_206_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_206_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_206_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_206_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_206_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_206_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_207_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_207_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_207_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_207_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_207_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_207_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_207_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_208_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_208_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_208_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_208_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_199_proc0
// static void setup_mmap_mprotect_pae_208_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_208_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_208_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_209_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_209_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_209_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_209_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_206_proc0
// static void setup_mmap_mprotect_pae_209_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_209_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_209_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_210_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_210_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_210_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_210_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_207_proc0
// static void setup_mmap_mprotect_pae_210_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_210_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_210_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_211_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_211_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_211_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_211_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_204_proc0
// static void setup_mmap_mprotect_pae_211_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_211_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_211_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_212_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_212_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_212_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_212_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_212_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_212_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_212_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_213_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_213_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_213_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_213_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_213_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_213_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_213_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_214_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_214_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_214_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_214_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_214_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_214_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_214_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_215_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_215_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_215_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_215_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_212_proc0
// static void setup_mmap_mprotect_pae_215_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_215_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_215_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_216_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_216_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_216_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_216_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_213_proc0
// static void setup_mmap_mprotect_pae_216_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_216_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_216_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_217_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_217_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_217_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_217_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_214_proc0
// static void setup_mmap_mprotect_pae_217_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_217_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_217_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_218_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_218_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_218_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_218_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_205_proc0
// static void setup_mmap_mprotect_pae_218_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_218_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_218_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_219_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_219_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_219_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_219_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_199_proc0
// static void setup_mmap_mprotect_pae_219_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_219_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_219_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_220_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_220_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_220_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_220_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_204_proc0
// static void setup_mmap_mprotect_pae_220_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_220_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_220_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_221_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_221_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_221_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_221_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_207_proc0
// static void setup_mmap_mprotect_pae_221_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_221_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_221_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_222_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_222_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_222_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_222_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_206_proc0
// static void setup_mmap_mprotect_pae_222_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_222_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_222_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_223_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_223_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_223_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_223_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_199_proc0
// static void setup_mmap_mprotect_pae_223_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_223_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_223_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_224_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_224_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_224_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_224_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_207_proc0
// static void setup_mmap_mprotect_pae_224_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_224_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_224_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_225_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_225_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_225_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_225_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_204_proc0
// static void setup_mmap_mprotect_pae_225_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_225_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_225_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_226_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_226_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_226_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_226_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_206_proc0
// static void setup_mmap_mprotect_pae_226_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_226_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_226_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_227_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_227_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_227_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_227_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_227_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_227_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_227_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_228_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_228_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_228_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_228_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_228_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_228_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_228_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_229_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_229_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_229_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_229_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_229_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_229_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_229_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_230_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_230_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_230_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_230_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_230_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_230_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_230_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_231_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_231_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_231_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_231_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_231_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_231_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_231_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_232_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_232_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_232_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_232_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_232_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_232_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_232_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_233_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_233_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_233_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_233_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_233_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_233_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_233_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_234_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_234_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_234_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_234_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_234_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_234_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_234_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_235_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_235_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_235_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_235_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_235_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_235_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_235_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_236_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_236_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_236_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_236_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_236_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_236_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_236_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_237_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_237_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_237_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_237_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_200_proc0
// static void setup_mmap_mprotect_pae_237_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_237_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_237_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_238_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_238_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_238_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_238_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_201_proc0
// static void setup_mmap_mprotect_pae_238_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_238_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_238_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_239_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_239_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_239_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_239_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_239_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_239_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_239_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_240_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_240_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_240_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_240_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_240_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_240_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_240_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_241_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_241_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_241_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_241_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_241_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_241_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_241_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_242_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_242_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_242_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_242_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_228_proc0
// static void setup_mmap_mprotect_pae_242_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_242_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_242_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_243_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_243_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_243_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_243_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_230_proc0
// static void setup_mmap_mprotect_pae_243_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_243_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_243_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_244_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_244_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_244_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_244_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_231_proc0
// static void setup_mmap_mprotect_pae_244_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_244_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_244_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_245_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_245_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_245_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_245_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_232_proc0
// static void setup_mmap_mprotect_pae_245_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_245_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_245_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_246_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_246_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_246_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_246_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_246_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_246_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_246_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_247_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_247_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_247_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_247_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_234_proc0
// static void setup_mmap_mprotect_pae_247_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_247_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_247_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_248_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_248_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_248_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_248_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_235_proc0
// static void setup_mmap_mprotect_pae_248_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_248_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_248_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_249_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_249_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_249_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_249_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_229_proc0
// static void setup_mmap_mprotect_pae_249_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_249_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_249_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_250_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_250_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_250_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_250_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_236_proc0
// static void setup_mmap_mprotect_pae_250_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_250_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_250_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_251_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_251_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_251_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_251_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_251_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_251_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_251_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_252_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_252_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_252_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_252_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_252_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_252_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_252_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_253_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_253_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_253_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_253_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_253_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_253_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_253_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_254_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_254_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_254_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_254_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_254_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_254_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_254_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_255_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_255_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_255_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_255_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_255_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_255_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_255_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_256_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_256_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_256_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_256_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_256_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_256_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_256_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_257_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_257_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_257_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_pae_257_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_257_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_257_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_257_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_258_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_258_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_258_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_258_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_258_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_258_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_258_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_259_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_259_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_259_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_259_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pae_259_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_259_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_259_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_260_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_260_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_260_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_260_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pae_260_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_260_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_260_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_261_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_261_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_261_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_261_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_175_proc0
// static void setup_mmap_mprotect_pae_261_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_261_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_261_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_262_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_262_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_262_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_262_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_203_proc0
// static void setup_mmap_mprotect_pae_262_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_262_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_262_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_263_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_263_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_263_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
static void setup_mmap_mprotect_pae_263_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_263_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_263_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_263_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_264_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_264_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_264_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_264_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_213_proc0
// static void setup_mmap_mprotect_pae_264_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_264_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_264_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_265_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_265_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_265_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_265_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_251_proc0
// static void setup_mmap_mprotect_pae_265_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_265_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_265_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_266_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_266_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_266_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_266_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_252_proc0
// static void setup_mmap_mprotect_pae_266_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_266_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_266_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_267_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_267_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_267_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_267_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_253_proc0
// static void setup_mmap_mprotect_pae_267_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_267_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_267_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_268_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_268_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_268_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_268_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_254_proc0
// static void setup_mmap_mprotect_pae_268_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_268_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_268_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_269_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_269_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_269_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_269_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_256_proc0
// static void setup_mmap_mprotect_pae_269_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_269_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_269_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_270_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_270_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_270_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_270_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_259_proc0
// static void setup_mmap_mprotect_pae_270_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_270_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_270_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_271_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_271_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_271_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_271_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_214_proc0
// static void setup_mmap_mprotect_pae_271_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_271_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_271_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_272_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_272_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_272_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
static void setup_mmap_mprotect_pae_272_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pae_272_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_272_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_272_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_273_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_273_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_273_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_273_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_212_proc0
// static void setup_mmap_mprotect_pae_273_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_273_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_273_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_274_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_274_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_274_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_274_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_1_proc0
// static void setup_mmap_mprotect_pae_274_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_274_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_274_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_275_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_275_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_275_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_275_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_275_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_275_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_275_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_276_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_276_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_276_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_276_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pae_276_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_276_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_276_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_277_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_277_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_277_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_277_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_258_proc0
// static void setup_mmap_mprotect_pae_277_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_277_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_277_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_278_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_278_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_278_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_278_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_0_proc0
// static void setup_mmap_mprotect_pae_278_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_278_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_278_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_279_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_279_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_279_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_279_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_260_proc0
// static void setup_mmap_mprotect_pae_279_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_279_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_279_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_280_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_280_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_280_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_280_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_205_proc0
// static void setup_mmap_mprotect_pae_280_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_280_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_280_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_281_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_281_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_281_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_281_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_200_proc0
// static void setup_mmap_mprotect_pae_281_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_281_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_281_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_282_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_282_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_282_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_282_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_201_proc0
// static void setup_mmap_mprotect_pae_282_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_282_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_282_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_283_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_283_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_283_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_283_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_239_proc0
// static void setup_mmap_mprotect_pae_283_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_283_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_283_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_284_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_284_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_284_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_284_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_240_proc0
// static void setup_mmap_mprotect_pae_284_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_284_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_284_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_285_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_285_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_285_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_285_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_241_proc0
// static void setup_mmap_mprotect_pae_285_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_285_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_285_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_286_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_286_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_286_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_286_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_228_proc0
// static void setup_mmap_mprotect_pae_286_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_286_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_286_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_287_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_287_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_287_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_287_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_230_proc0
// static void setup_mmap_mprotect_pae_287_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_287_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_287_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_288_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_288_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_288_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_288_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_231_proc0
// static void setup_mmap_mprotect_pae_288_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_288_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_288_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_289_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_289_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_289_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_289_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_232_proc0
// static void setup_mmap_mprotect_pae_289_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_289_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_289_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_290_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_290_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_290_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_290_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_246_proc0
// static void setup_mmap_mprotect_pae_290_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_290_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_290_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_291_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_291_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_291_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_291_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_234_proc0
// static void setup_mmap_mprotect_pae_291_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_291_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_291_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_292_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_292_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_292_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_292_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_235_proc0
// static void setup_mmap_mprotect_pae_292_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_292_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_292_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_293_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_293_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_293_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_293_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_229_proc0
// static void setup_mmap_mprotect_pae_293_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_293_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_293_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_294_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_294_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_294_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_294_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_236_proc0
// static void setup_mmap_mprotect_pae_294_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_294_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_294_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_295_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_295_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_295_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_295_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_175_proc0
// static void setup_mmap_mprotect_pae_295_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_295_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_295_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_296_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_296_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_296_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_296_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_251_proc0
// static void setup_mmap_mprotect_pae_296_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_296_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_296_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_297_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_297_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_297_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_297_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_252_proc0
// static void setup_mmap_mprotect_pae_297_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_297_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_297_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_298_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_298_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_298_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_298_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_253_proc0
// static void setup_mmap_mprotect_pae_298_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_298_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_298_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_299_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_299_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_299_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_299_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_254_proc0
// static void setup_mmap_mprotect_pae_299_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_299_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_299_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_300_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_300_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_300_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_300_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_255_proc0
// static void setup_mmap_mprotect_pae_300_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_300_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_300_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_301_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_301_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_301_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_301_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_256_proc0
// static void setup_mmap_mprotect_pae_301_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_301_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_301_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_302_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_302_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_302_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_302_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_259_proc0
// static void setup_mmap_mprotect_pae_302_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_302_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_302_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_303_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_303_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_303_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_303_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_0_proc0
// static void setup_mmap_mprotect_pae_303_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_303_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_303_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_304_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_304_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_304_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_304_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_1_proc0
// static void setup_mmap_mprotect_pae_304_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_304_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_304_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_305_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_305_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_305_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_305_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_275_proc0
// static void setup_mmap_mprotect_pae_305_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_305_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_305_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_306_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_306_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_306_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_306_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_276_proc0
// static void setup_mmap_mprotect_pae_306_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_306_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_306_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_307_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_307_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_307_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_307_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_257_proc0
// static void setup_mmap_mprotect_pae_307_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_307_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_307_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_308_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_308_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_308_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_308_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_258_proc0
// static void setup_mmap_mprotect_pae_308_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_308_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_308_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_309_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_309_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_pae_309_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_309_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_260_proc0
// static void setup_mmap_mprotect_pae_309_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_309_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_309_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_310_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_310_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_310_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_310_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_175_proc0
// static void setup_mmap_mprotect_pae_310_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_310_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_310_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_311_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_311_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_311_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_311_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_203_proc0
// static void setup_mmap_mprotect_pae_311_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_311_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_311_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_312_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_312_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_312_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_312_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_200_proc0
// static void setup_mmap_mprotect_pae_312_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_312_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_312_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_313_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_313_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_313_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_313_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_201_proc0
// static void setup_mmap_mprotect_pae_313_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_313_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_313_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_314_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_314_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_314_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_314_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_239_proc0
// static void setup_mmap_mprotect_pae_314_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_314_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_314_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_315_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_315_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_315_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_315_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_240_proc0
// static void setup_mmap_mprotect_pae_315_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_315_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_315_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_316_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_316_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_316_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_316_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_241_proc0
// static void setup_mmap_mprotect_pae_316_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_316_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_316_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_317_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_317_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_317_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_317_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_228_proc0
// static void setup_mmap_mprotect_pae_317_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_317_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_317_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_318_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_318_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_318_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_318_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_229_proc0
// static void setup_mmap_mprotect_pae_318_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_318_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_318_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_319_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_319_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_319_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_319_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_230_proc0
// static void setup_mmap_mprotect_pae_319_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_319_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_319_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_320_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_320_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_320_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_320_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_231_proc0
// static void setup_mmap_mprotect_pae_320_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_320_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_320_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_321_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_321_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_321_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_321_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_232_proc0
// static void setup_mmap_mprotect_pae_321_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_321_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_321_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_322_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_322_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_322_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_322_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_246_proc0
// static void setup_mmap_mprotect_pae_322_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_322_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_322_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_323_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_323_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_323_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_323_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_234_proc0
// static void setup_mmap_mprotect_pae_323_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_323_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_323_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_324_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_324_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_324_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_324_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_235_proc0
// static void setup_mmap_mprotect_pae_324_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_324_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_324_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_325_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_325_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_325_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_325_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_236_proc0
// static void setup_mmap_mprotect_pae_325_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_325_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_325_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_326_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_326_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_326_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_pae_326_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_263_proc0
// static void setup_mmap_mprotect_pae_326_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_326_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_326_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_327_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_327_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_327_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_327_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_213_proc0
// static void setup_mmap_mprotect_pae_327_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_327_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_327_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_328_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_328_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_328_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_328_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_251_proc0
// static void setup_mmap_mprotect_pae_328_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_328_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_328_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_329_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_329_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_329_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_329_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_252_proc0
// static void setup_mmap_mprotect_pae_329_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_329_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_329_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_330_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_330_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_330_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_330_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_253_proc0
// static void setup_mmap_mprotect_pae_330_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_330_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_330_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_331_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_331_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_331_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_331_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_254_proc0
// static void setup_mmap_mprotect_pae_331_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_331_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_331_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_332_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_332_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_332_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_332_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_256_proc0
// static void setup_mmap_mprotect_pae_332_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_332_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_332_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_333_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_333_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_333_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_333_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_259_proc0
// static void setup_mmap_mprotect_pae_333_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_333_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_333_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_334_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_334_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_334_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_334_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_214_proc0
// static void setup_mmap_mprotect_pae_334_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_334_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_334_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_335_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_335_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_335_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_pae_335_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_272_proc0
// static void setup_mmap_mprotect_pae_335_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_335_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_335_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_336_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_336_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_336_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_pae_336_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_212_proc0
// static void setup_mmap_mprotect_pae_336_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_336_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pae_336_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_337_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_337_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_337_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_337_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_1_proc0
// static void setup_mmap_mprotect_pae_337_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_337_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_337_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_338_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_338_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_338_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_338_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_275_proc0
// static void setup_mmap_mprotect_pae_338_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_338_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_338_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_339_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_339_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_339_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_339_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pae_276_proc0
// static void setup_mmap_mprotect_pae_339_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_339_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_339_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_340_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_340_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_340_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_340_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x1000);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_258_proc0
// static void setup_mmap_mprotect_pae_340_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_340_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_340_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_341_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_341_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_341_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_341_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_0_proc0
// static void setup_mmap_mprotect_pae_341_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_341_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_341_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_342_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_342_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_342_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_342_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_260_proc0
// static void setup_mmap_mprotect_pae_342_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_342_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_342_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_343_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_343_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_4_1
// static void setup_mmap_mprotect_pae_343_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_343_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_205_proc0
// static void setup_mmap_mprotect_pae_343_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_343_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_343_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_344_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_344_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_344_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_344_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_344_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_344_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_344_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_345_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_345_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_345_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_345_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_345_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_345_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_345_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_346_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_346_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_346_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_346_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_pae_346_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_346_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_346_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_347_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_347_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_347_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_347_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_345_proc0
// static void setup_mmap_mprotect_pae_347_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_347_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_347_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_348_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_348_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_348_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pae_348_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_348_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_348_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_348_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_349_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pae_349_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pae_349_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pae_349_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_pae_349_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_349_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_349_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_350_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_350_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_350_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pae_350_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_348_proc0
// static void setup_mmap_mprotect_pae_350_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_350_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_350_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pae_351_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_11_0
// static int test_mmap_mprotect_pae_351_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_pae_351_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pae_351_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_349_proc0
// static void setup_mmap_mprotect_pae_351_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pae_351_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pae_351_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_mprotect_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_pa8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_pa8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
static void setup_mmap_mprotect_pa8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pa8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pa8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
static void setup_mmap_mprotect_pa8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pa8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pa8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pa8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_pa8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
static void setup_mmap_mprotect_pa8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_pa8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_348_proc0
// static void setup_mmap_mprotect_pa8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa8_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_pa8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pa8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_349_proc0
// static void setup_mmap_mprotect_pa8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_pa4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_pa4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
static void setup_mmap_mprotect_pa4_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_pa4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pa4_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_pa4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_pa4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pd0_14_proc1
// static void setup_mmap_mprotect_pa4_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_pa4_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_pa4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pa4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_pa4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_pa4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa4_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa4_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_pa4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_pa4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_15_proc1
// static void setup_mmap_mprotect_pa4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa4_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_pa0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pae_0_0
// static int test_mmap_mprotect_pa0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p98_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_mprotect_p98_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p98_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p98_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p98_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_2_proc0
// static void setup_mmap_mprotect_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p98_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p98_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p98_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_p98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345601000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_10_proc0
// static void setup_mmap_mprotect_p98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p98_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p98_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p98_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p98_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_p98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_4_proc0
// static void setup_mmap_mprotect_p98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p98_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p98_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p98_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p98_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_0_1
// static void setup_mmap_mprotect_p98_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p98_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345601000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_1_proc0
// static void setup_mmap_mprotect_p98_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p98_4_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p98_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p90_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p90_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p90_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p90_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p90_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p90_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pe0_0_1
// static void setup_mmap_mprotect_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p90_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p88_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p88_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p88_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p88_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p88_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p88_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p88_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p88_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p88_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p88_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p88_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p88_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p88_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p88_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p88_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p88_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p88_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p88_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p88_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p88_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p88_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p80_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p98_0_0
// static int test_mmap_mprotect_p80_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p80_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p80_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p7c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p7c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p7c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p7c_2_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p7c_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p7c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p7c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p7c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p7c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p7c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p7c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p7c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p7c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p7c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_8_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p7c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_9_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p7c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_10_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p7c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p7c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_11_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p7c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_12_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p7c_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p7c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_13_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p7c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_14_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p7c_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p7c_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p7c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p7c_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p7c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p7c_15_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p7c_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p68_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p68_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p68_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p68_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p68_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p68_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p68_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p68_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p58_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p58_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p58_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p58_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p58_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p58_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p58_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p58_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p58_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p58_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p58_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p58_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p58_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p58_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p58_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p58_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p58_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p58_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p58_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p58_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p58_6_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p58_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p58_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p58_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p58_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p58_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p58_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p58_7_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p58_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p48_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_0_0
// static int test_mmap_mprotect_p48_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p48_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p48_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p48_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p7c_2_0
// static int test_mmap_mprotect_p48_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p48_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p48_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p3c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_mprotect_p3c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pbc_0_proc0
// static void setup_mmap_mprotect_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_p3c_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_mprotect_p3c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p3c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_p3c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_p3c_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_p3c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p3c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_p3c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_p3c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pbc_3_proc0
// static void setup_mmap_mprotect_p3c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p3c_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
static void setup_mmap_mprotect_p3c_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_mprotect_p3c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p3c_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_mprotect_p3c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_mprotect_p3c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p3c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb8_3_proc0
// static void setup_mmap_mprotect_p3c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_p3c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p3c_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p3c_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p3c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
static void setup_mmap_mprotect_p3c_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_p3c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p3c_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p3c_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p38_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p38_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p38_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p38_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p38_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p38_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_0_proc1
// static void setup_mmap_mprotect_p34_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_p34_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_1_proc1
// static void setup_mmap_mprotect_p34_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p34_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pb4_2_proc1
// static void setup_mmap_mprotect_p34_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_p34_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_1_proc1
// static void setup_mmap_mprotect_p34_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p34_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pb4_2_proc1
// static void setup_mmap_mprotect_p34_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_p34_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_3_proc1
// static void setup_mmap_mprotect_p34_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p34_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_2_common
// static void setup_mmap_mprotect_p34_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_3_proc1
// static void setup_mmap_mprotect_p34_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_2_final
// static void setup_mmap_mprotect_p34_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pb4_4_proc1
// static void setup_mmap_mprotect_p34_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pb4_4_proc1
// static void setup_mmap_mprotect_p34_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p34_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_5_proc1
// static void setup_mmap_mprotect_p34_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_0_proc1
// static void setup_mmap_mprotect_p34_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p34_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p34_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p34_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p34_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p34_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pb4_5_proc1
// static void setup_mmap_mprotect_p34_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p34_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p30_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_0_proc0
// static void setup_mmap_mprotect_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p30_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p3c_0_0
// static int test_mmap_mprotect_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_mprotect_pbc_0_common
// static void setup_mmap_mprotect_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pb8_1_proc0
// static void setup_mmap_mprotect_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_mprotect_pbc_0_proc1
// static void setup_mmap_mprotect_p30_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_final
// static void setup_mmap_mprotect_p30_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_mprotect_pbc_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p2f_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p2f_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p2f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pa8_6_proc0
// static void setup_mmap_mprotect_p2f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_mprotect_p2f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_p2f_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pa8_3_proc0
// static void setup_mmap_mprotect_p2f_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p2f_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p2f_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pa8_2_proc0
// static void setup_mmap_mprotect_p2f_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pa8_3_proc0
// static void setup_mmap_mprotect_p2f_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_p2f_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p2f_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p2f_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_p2f_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_mprotect_p2f_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_p2f_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_mprotect_p2f_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_170_proc0
// static void setup_mmap_mprotect_p2f_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p2f_8_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p2f_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_6_proc0
// static void setup_mmap_mprotect_p2f_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
static void setup_mmap_mprotect_p2f_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_mprotect_p2f_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_p2f_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_p2f_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_mprotect_p2f_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_9_common
// static void setup_mmap_mprotect_p2f_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_9_proc0
// static void setup_mmap_mprotect_p2f_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_10_proc0
// static void setup_mmap_mprotect_p2f_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_9_common
static void setup_mmap_mprotect_p2f_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_p2f_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_170_proc0
// static void setup_mmap_mprotect_p2f_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_345_proc0
// static void setup_mmap_mprotect_p2f_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_1_proc0
// static void setup_mmap_mprotect_p2f_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_p2f_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_mprotect_p2f_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_17_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p2f_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_348_proc0
// static void setup_mmap_mprotect_p2f_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pa8_5_proc0
// static void setup_mmap_mprotect_p2f_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pa8_5_proc0
// static void setup_mmap_mprotect_p2f_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_170_proc0
// static void setup_mmap_mprotect_p2f_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_23_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pa8_5_proc0
// static void setup_mmap_mprotect_p2f_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_24_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_9_common
// static void setup_mmap_mprotect_p2f_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_13_proc0
// static void setup_mmap_mprotect_p2f_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_25_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pa8_5_proc0
// static void setup_mmap_mprotect_p2f_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_26_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_14_common
// static void setup_mmap_mprotect_p2f_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pa8_4_proc0
// static void setup_mmap_mprotect_p2f_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_27_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_27_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_1_proc0
// static void setup_mmap_mprotect_p2f_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_28_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_29_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_10_proc0
// static void setup_mmap_mprotect_p2f_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_29_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_30_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_10_proc0
// static void setup_mmap_mprotect_p2f_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_30_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_31_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p2f_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_6_proc0
// static void setup_mmap_mprotect_p2f_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_31_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_32_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
static void setup_mmap_mprotect_p2f_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_mprotect_p2f_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_32_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p2f_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_33_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_34_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_5_proc0
// static void setup_mmap_mprotect_p2f_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_35_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_345_proc0
// static void setup_mmap_mprotect_p2f_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_36_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_mprotect_p2f_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_37_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pae_170_proc0
// static void setup_mmap_mprotect_p2f_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_38_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_38_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_39_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_39_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_40_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_40_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_40_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_40_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_41_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_41_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_41_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_42_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_42_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_42_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pae_169_proc0
// static void setup_mmap_mprotect_p2f_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_42_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_43_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_43_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_p2f_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_43_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_44_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_44_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_p2f_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_44_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_45_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_45_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_45_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pa8_2_proc0
// static void setup_mmap_mprotect_p2f_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_45_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_46_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_46_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_46_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_47_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_47_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_p2f_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_48_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_48_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_48_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pa8_2_proc0
// static void setup_mmap_mprotect_p2f_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_48_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_49_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_49_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_49_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_50_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_50_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_50_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_44_proc0
// static void setup_mmap_mprotect_p2f_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_50_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_51_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_51_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_51_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_43_proc0
// static void setup_mmap_mprotect_p2f_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_51_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_51_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_52_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_52_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_52_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_p2f_36_proc0
// static void setup_mmap_mprotect_p2f_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_52_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_53_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_53_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_53_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_43_proc0
// static void setup_mmap_mprotect_p2f_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_53_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_54_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_54_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_mprotect_p2f_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_54_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_54_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_55_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_55_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p2f_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_55_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_44_proc0
// static void setup_mmap_mprotect_p2f_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_55_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_56_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_56_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p2f_7_common
// static void setup_mmap_mprotect_p2f_56_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_43_proc0
// static void setup_mmap_mprotect_p2f_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_56_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_56_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_57_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_57_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_mprotect_p2f_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_57_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_57_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_58_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_58_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p2f_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_mprotect_p2f_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_58_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_58_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_59_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2f_59_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_59_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_54_proc0
// static void setup_mmap_mprotect_p2f_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_59_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_60_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2f_60_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_60_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_44_proc0
// static void setup_mmap_mprotect_p2f_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_60_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_61_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_61_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_61_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_1_proc0
// static void setup_mmap_mprotect_p2f_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_61_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_62_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_62_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_62_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_62_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_63_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_63_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_63_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pa8_2_proc0
// static void setup_mmap_mprotect_p2f_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_63_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_64_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_64_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_64_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_345_proc0
// static void setup_mmap_mprotect_p2f_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_64_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_65_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_65_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_65_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_344_proc0
// static void setup_mmap_mprotect_p2f_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_65_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_65_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_66_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_66_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_66_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_mmap_mprotect_p2f_58_proc0
// static void setup_mmap_mprotect_p2f_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_66_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_66_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_67_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_67_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_67_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_43_proc0
// static void setup_mmap_mprotect_p2f_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_67_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_67_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_68_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_68_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_68_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_p2f_44_proc0
// static void setup_mmap_mprotect_p2f_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_68_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_68_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_69_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_69_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_69_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_349_proc0
// static void setup_mmap_mprotect_p2f_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_69_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_69_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_70_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2f_70_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_70_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pae_348_proc0
// static void setup_mmap_mprotect_p2f_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2f_71_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2f_71_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ | PROT_WRITE);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_73_1
// static void setup_mmap_mprotect_p2f_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2f_71_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pa8_6_proc0
// static void setup_mmap_mprotect_p2f_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2f_71_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2f_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2a_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p2a_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p2a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p2a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p2a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2a_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2a_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p2a_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p2a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p2a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2a_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2a_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p2a_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p2a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p2a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p2a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2a_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p2a_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p2a_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p2a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p2a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p2a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p2a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p2a_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p26_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p26_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p26_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p26_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p26_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_mprotect_p26_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_p26_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p26_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_p26_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_7_proc1
// static void setup_mmap_mprotect_p26_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p26_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_7_proc1
// static void setup_mmap_mprotect_p26_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p26_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
static void setup_mmap_mprotect_p26_8_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x1000);
}
// static void setup_mmap_mprotect_p26_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x1000);
// }
// ^ See setup_mmap_mprotect_p26_8_proc1
// static void setup_mmap_mprotect_p26_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_10_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p26_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p26_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_15_proc1
// static void setup_mmap_mprotect_p26_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_p26_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_15_proc1
// static void setup_mmap_mprotect_p26_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
static void setup_mmap_mprotect_p26_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_mprotect_p26_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p26_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pa4_1_proc1
// static void setup_mmap_mprotect_p26_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p26_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pa4_1_proc1
// static void setup_mmap_mprotect_p26_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pd0_14_proc1
// static void setup_mmap_mprotect_p26_20_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_7_common
// static void setup_mmap_mprotect_p26_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_mprotect_pd0_14_proc1
// static void setup_mmap_mprotect_p26_22_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pd0_7_final
// static void setup_mmap_mprotect_p26_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_23_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p26_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_24_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p26_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_25_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p26_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_26_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p26_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p26_27_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p26_27_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_11_common
// static void setup_mmap_mprotect_p26_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_p26_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p26_28_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_28_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p26_29_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_29_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_mprotect_pd0_6_proc1
// static void setup_mmap_mprotect_p26_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p26_30_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p26_31_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x2000UL);
  
  return xerrno(r);
}
// static int test_mmap_mprotect_p26_31_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_11_common
// static void setup_mmap_mprotect_p26_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x2000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p26_27_0
// static int test_mmap_mprotect_p26_32_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pd0_11_common
// static void setup_mmap_mprotect_p26_32_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_p26_15_proc0
// static void setup_mmap_mprotect_p26_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p26_33_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_33_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p26_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p26_34_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p26_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p26_35_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p26_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p26_35_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p26_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p26_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p26_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p22_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_0_0
// static int test_mmap_mprotect_p22_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p22_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p22_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p22_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p22_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p22_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p22_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_3_0
// static int test_mmap_mprotect_p22_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p22_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p22_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p22_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p22_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p22_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p22_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_8_0
// static int test_mmap_mprotect_p22_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p22_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p22_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p22_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p22_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p22_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p22_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p2f_6_0
// static int test_mmap_mprotect_p22_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p22_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_11_common
// static void setup_mmap_mprotect_p22_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pa8_0_proc0
// static void setup_mmap_mprotect_p22_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p22_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p22_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
static int test_mmap_mprotect_p18_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_mprotect_p18_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p18_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p18_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p18_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p18_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p18_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p18_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p18_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p18_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p18_2_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p18_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p18_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p18_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p18_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p18_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p10_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p10_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p10_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p10_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p08_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p08_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p08_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p08_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p08_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_72_proc0
// static void setup_mmap_mprotect_p08_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p08_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p08_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p08_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p08_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p08_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p08_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_mprotect_pf8_71_proc0
// static void setup_mmap_mprotect_p08_1_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p08_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p08_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p08_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p08_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_mprotect_pf8_2_common
// static void setup_mmap_mprotect_p08_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p08_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_mprotect_pf8_80_proc0
// static void setup_mmap_mprotect_p08_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_mprotect_pf8_2_final
// static void setup_mmap_mprotect_p08_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p08_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p08_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pf8_71_1
// static void setup_mmap_mprotect_p08_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p08_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p08_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_mprotect_pf8_94_proc0
// static void setup_mmap_mprotect_p08_3_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p08_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

/*
 * calls: mmap mprotect
 */
// static int test_mmap_mprotect_p00_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_p18_0_0
// static int test_mmap_mprotect_p00_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = mprotect(va, 4096, PROT_READ);
//   expect_result("r", r, -1);
//   expect_errno(12);
//   return xerrno(r);
// }
// ^ See test_mmap_mprotect_pc0_0_1
// static void setup_mmap_mprotect_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_common
// static void setup_mmap_mprotect_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_mprotect_pf8_0_proc1
// static void setup_mmap_mprotect_p00_0_final(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal
// static void setup_mmap_mprotect_p00_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_mprotect_pf8_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-mmap_mprotect_pf8_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_3",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_4",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_5",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_6",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_7",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_8",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_9",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_10",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_11",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_11_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_12",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_12_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_13",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_13_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_14",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_15",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_16",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_17",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_18",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_19",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_20",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_20_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_21",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_21_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_22",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_23",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_24",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_25",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_26",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_26_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_27",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_28",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_29",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_30",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_31",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_11_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_32",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_33",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_34",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_35",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_11_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_36",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_20_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_37",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_21_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_38",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_39",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_40",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_20_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_41",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_42",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_21_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_43",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_44",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_45",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_46",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_46_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_47",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_20_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_48",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_21_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_49",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_49_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_50",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_51",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_52",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_52_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_53",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_54",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_55",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_52_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_56",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_57",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_58",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_59",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_60",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_52_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_61",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_61_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_62",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_63",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_64",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_64_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_65",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_65_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_66",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_66_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_67",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_68",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_69",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_70",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_52_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_71",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_72",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_73",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_74",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_75",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_76",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_76_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_77",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_77_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_78",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_78_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_79",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_61_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_80",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_81",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_64_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_82",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_83",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_83_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_84",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_85",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_86",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_87",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_61_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_88",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_88_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_89",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_89_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_90",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_77_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_91",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_66_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_92",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_93",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_94",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_95",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_96",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_97",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_64_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_98",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_98_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_99",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_100",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_101",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_102",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_66_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_103",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_77_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_104",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_88_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_105",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_89_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_106",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_64_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_107",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_108",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_65_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_109",
    &setup_mmap_mprotect_pf8_13_common,
    { { &setup_mmap_mprotect_pf8_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_110",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_111",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_66_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_112",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_113",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_61_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_114",
    &setup_mmap_mprotect_pf8_7_common,
    { { &setup_mmap_mprotect_pf8_78_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_7_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_115",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_88_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_116",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_77_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_117",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_118",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pf8_119",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pe0_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pe0_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pe0_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pe0_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pe0_4",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_2",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_4",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_5",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_6",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_7",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pd0_7_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_8",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_9",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_10",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pd0_7_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_11",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_12",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_13",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_14",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pd0_14_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_15",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pd0_15_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_16",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_17",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pd0_14_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_18",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pd0_15_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_19",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_20",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_21",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_22",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_23",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_24",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_25",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_26",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pd0_27",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pc0_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pc0_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pc0_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pc0_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pc0_4",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pf8_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_1",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_2",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_2_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_3",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_3_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_4",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_4_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_5",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_5_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_6",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_6_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_7",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_7_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_8",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_8_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_9",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_9_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_10",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_10_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_11",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_11_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_12",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_12_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pbc_13",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_13_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb8_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb8_1",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb8_2",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb8_3",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_3_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_1",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_1_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_2",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_2_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_3",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_3_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_4",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_4_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_5",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_5_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_6",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_7",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_1_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_8",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_2_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_9",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_5_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_10",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_3_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb4_11",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_4_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb0_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pb0_1",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_pbc_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_1",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_2",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_pae_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_3",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_3_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_4",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_5",
    &setup_mmap_mprotect_pae_5_common,
    { { &setup_mmap_mprotect_pae_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_6",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_7",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_8",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_8_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_9",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_10",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_8_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_11",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_12",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_7_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_13",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_8_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_14",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_8_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_15",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_16",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_16_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_17",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_16_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_18",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_19",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_16_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_20",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_21",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_16_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_22",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_23",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_24",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_25",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_26",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_26_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_27",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_28",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_29",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_29_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_30",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_30_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_31",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_31_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_32",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_33",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_33_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_34",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_31_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_35",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_36",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_37",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_38",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_39",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_40",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_41",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_29_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_42",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_30_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_43",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_44",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_45",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_33_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_46",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_47",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_48",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_49",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_50",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_51",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_52",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_53",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_22_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_54",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_23_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_55",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_25_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_56",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_27_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_57",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_24_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_58",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_28_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_59",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_29_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_60",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_30_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_61",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_62",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_31_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_63",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_33_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_64",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_29_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_65",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_30_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_66",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_67",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_31_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_68",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_69",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_33_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_70",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_70_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_71",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_72",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_73",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_73_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_74",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_74_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_75",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_75_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_76",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_73_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_77",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_74_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_78",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_79",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_80",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_75_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_81",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_26_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_82",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_83",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_83_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_84",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_84_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_85",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_86",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_87",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_88",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_83_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_89",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_84_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_90",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_70_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_91",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_92",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_93",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_94",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_26_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_95",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_96",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_97",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_74_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_98",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_75_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_99",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_73_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_100",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_101",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_84_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_102",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_70_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_103",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_83_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_104",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_105",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_85_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_106",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_26_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_107",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_74_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_108",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_109",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_110",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_75_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_111",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_73_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_112",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_82_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_113",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_84_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_114",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_70_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_115",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_83_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_116",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_86_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_117",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_117_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_118",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_118_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_119",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_119_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_120",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_120_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_121",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_117_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_122",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_118_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_123",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_119_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_124",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_120_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_125",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_117_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_126",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_118_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_127",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_117_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_128",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_118_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_129",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_119_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_130",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_120_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_131",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_119_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_132",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_120_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_133",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_133_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_134",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_134_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_135",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_133_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_136",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_134_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_137",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_137_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_138",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_138_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_139",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_137_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_140",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_138_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_141",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_133_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_142",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_134_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_143",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_137_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_144",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_138_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_145",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_133_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_146",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_134_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_147",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_137_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_148",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_138_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_149",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_149_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_150",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_150_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_151",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_149_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_152",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_150_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_153",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_149_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_154",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_150_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_155",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_149_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_156",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_150_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_157",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_157_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_158",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_158_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_159",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_157_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_160",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_158_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_161",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_157_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_162",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_158_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_163",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_157_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_164",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_158_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_165",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_165_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_166",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_166_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_167",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_165_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_168",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_166_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_169",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_170",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_171",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_172",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_173",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_173_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_174",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_174_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_175",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_175_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_176",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_176_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_177",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pae_177_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_178",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_178_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_179",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_179_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_180",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_178_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_181",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_179_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_182",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_182_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_183",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_182_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_184",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_184_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_185",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_179_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_186",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_178_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_187",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_179_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_188",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_178_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_189",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_182_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_190",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_184_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_191",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_184_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_192",
    &setup_mmap_mprotect_pae_178_common,
    { { &setup_mmap_mprotect_pae_182_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pae_5_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_193",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_173_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_194",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_194_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_195",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_173_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_196",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_194_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_197",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_173_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_198",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_194_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_199",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_199_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_200",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_200_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_201",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_201_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_202",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_pae_202_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_203",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_203_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_204",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_204_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_205",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_205_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_206",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_206_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_207",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_207_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_208",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_199_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_209",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_206_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_210",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_207_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_211",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_204_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_212",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_212_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_213",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_213_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_214",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_214_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_215",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_212_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_216",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_213_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_217",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_214_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_218",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_205_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_219",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_199_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_220",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_204_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_221",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_207_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_222",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_206_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_223",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_199_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_224",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_207_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_225",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_204_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_226",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_206_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_227",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_227_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_228",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_228_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_229",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_229_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_230",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_230_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_231",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_231_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_232",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_232_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_233",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_233_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_234",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_234_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_235",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_235_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_236",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_236_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_237",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_200_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_238",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_201_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_239",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_239_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_240",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_240_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_241",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_241_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_242",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_228_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_243",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_230_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_244",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_231_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_245",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_232_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_246",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_246_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_247",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_234_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_248",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_235_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_249",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_229_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_250",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_236_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_251",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_251_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_252",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_252_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_253",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_253_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_254",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_254_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_255",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_255_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_256",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_256_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_257",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_257_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_258",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_258_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_259",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_259_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_260",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_260_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_261",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_175_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_262",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_203_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_263",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pae_263_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_264",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_213_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_265",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_251_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_266",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_252_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_267",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_253_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_268",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_254_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_269",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_256_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_270",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_259_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_271",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_214_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_272",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pae_272_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_273",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_212_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_274",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_275",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_275_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_276",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_276_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_277",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_258_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_278",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_279",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_260_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_280",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_205_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_281",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_200_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_282",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_201_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_283",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_239_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_284",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_240_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_285",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_241_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_286",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_228_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_287",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_230_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_288",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_231_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_289",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_232_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_290",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_246_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_291",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_234_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_292",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_235_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_293",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_229_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_294",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_236_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_295",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_175_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_296",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_251_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_297",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_252_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_298",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_253_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_299",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_254_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_300",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_255_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_301",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_256_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_302",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_259_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_303",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_304",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_305",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_275_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_306",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_276_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_307",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_257_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_308",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_258_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_309",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_260_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_310",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_175_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_311",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_203_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_312",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_200_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_313",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_201_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_314",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_239_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_315",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_240_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_316",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_241_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_317",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_228_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_318",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_229_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_319",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_230_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_320",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_231_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_321",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_232_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_322",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_246_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_323",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_234_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_324",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_235_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_325",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_236_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_326",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pae_263_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_327",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_213_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_328",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_251_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_329",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_252_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_330",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_253_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_331",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_254_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_332",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_256_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_333",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_259_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_334",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_214_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_335",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pae_272_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_336",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pae_212_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_337",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_338",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_275_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_339",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_276_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_340",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_258_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_341",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_342",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_260_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_343",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_205_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_4_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_344",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_345",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_345_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_346",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_347",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_345_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_348",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_348_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_349",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_349_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_350",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_348_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pae_351",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_349_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_11_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_2",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_3",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_3_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_4",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_5",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_6",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_7",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_348_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa8_8",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_349_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_1",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pa4_1_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_3",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_14_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_4",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_5",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_6",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa4_7",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_15_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_pa0_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_pae_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p98_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p98_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p98_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p98_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p98_4",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p90_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p90_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pe0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p88_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p88_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p88_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p88_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p80_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p98_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_3",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_4",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_5",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_6",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_7",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_8",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_9",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_10",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_11",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_12",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_13",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_14",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p7c_15",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p68_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p68_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_4",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_5",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_6",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p58_7",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p48_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p48_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p7c_2_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pbc_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_1",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_p3c_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_2",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_2_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_3",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_p3c_3_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_4",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_4_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_5",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pbc_3_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_6",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_p3c_6_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_7",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_7_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_8",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_8_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_9",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_3_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_10",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_10_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p3c_11",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_p3c_11_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p38_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p38_1",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_1",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_1_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_2",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_2_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_3",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_1_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_4",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_2_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_5",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_3_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_6",
    &setup_mmap_mprotect_pbc_2_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_3_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_2_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_7",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_4_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_8",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_4_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_9",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pb4_5_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_10",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p34_11",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pb4_5_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p30_0",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_0_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p30_1",
    &setup_mmap_mprotect_pbc_0_common,
    { { &setup_mmap_mprotect_pb8_1_proc0 }, { &setup_mmap_mprotect_pbc_0_proc1 } },
    &setup_mmap_mprotect_pbc_0_procfinal,
    &setup_mmap_mprotect_pbc_0_final,
    { { &test_mmap_mprotect_p3c_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_1",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_2",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_3_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_3",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_4",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pa8_3_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_5",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_6",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_7",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_8",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_9",
    &setup_mmap_mprotect_p2f_9_common,
    { { &setup_mmap_mprotect_p2f_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_10",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_11",
    &setup_mmap_mprotect_p2f_9_common,
    { { &setup_mmap_mprotect_p2f_9_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_12",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_13",
    &setup_mmap_mprotect_p2f_9_common,
    { { &setup_mmap_mprotect_p2f_13_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_14",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_15",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_345_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_16",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_17",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_17_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_18",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_19",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pae_348_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_20",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_21",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_22",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_23",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_24",
    &setup_mmap_mprotect_p2f_9_common,
    { { &setup_mmap_mprotect_p2f_13_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_25",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_26",
    &setup_mmap_mprotect_pd0_14_common,
    { { &setup_mmap_mprotect_pa8_4_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_27",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_28",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_29",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_30",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_10_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_31",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_32",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p2f_32_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_33",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_34",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_5_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_35",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_345_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_36",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_36_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_37",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_170_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_38",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_39",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_40",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_41",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_42",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_pae_169_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_43",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_44",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_44_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_45",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_46",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_47",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_47_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_48",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_49",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_50",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_44_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_51",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_p2f_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_52",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_36_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_53",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_54",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_54_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_55",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_44_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_56",
    &setup_mmap_mprotect_p2f_7_common,
    { { &setup_mmap_mprotect_p2f_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_57",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_57_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_58",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_58_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_59",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_54_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_60",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_44_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_61",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_1_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_62",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_63",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_2_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_64",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_345_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_65",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_344_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_66",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_58_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_67",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_43_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_68",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p2f_44_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_69",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_349_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_70",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pae_348_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2f_71",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_6_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_73_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2a_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2a_1",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2a_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p2a_3",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_1",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_1_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_2",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_3",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_4",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_7_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_5",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_6",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_7_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_7",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_8",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_p26_8_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_9",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_p26_8_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_10",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_11",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_12",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_15_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_13",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_14",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_15_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_15",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_16",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pa4_1_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_17",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_18",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pa4_1_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_19",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_20",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pd0_14_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_21",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_22",
    &setup_mmap_mprotect_pd0_7_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pd0_14_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pd0_7_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_23",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_24",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_25",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_26",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_27",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p26_27_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_28",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_29",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pd0_6_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_30",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_31",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p26_31_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_32",
    &setup_mmap_mprotect_pd0_11_common,
    { { &setup_mmap_mprotect_p26_15_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p26_27_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_33",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_34",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p26_35",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p22_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p22_1",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_3_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p22_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_8_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p22_3",
    &setup_mmap_mprotect_pf8_11_common,
    { { &setup_mmap_mprotect_pa8_0_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p2f_6_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p18_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_72_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p18_1",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_80_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p18_2",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_71_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p18_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_94_proc0 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p10_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 0, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p08_0",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_72_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p08_1",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_71_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p08_2",
    &setup_mmap_mprotect_pf8_2_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_80_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_2_final,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p08_3",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_94_proc0 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pf8_71_1, 1, "mprotect" } },
    &cleanup },
  { "fs-mmap_mprotect_p00_0",
    &setup_mmap_mprotect_pf8_0_common,
    { { &setup_mmap_mprotect_pf8_0_proc1 }, { &setup_mmap_mprotect_pf8_0_proc1 } },
    &setup_mmap_mprotect_pf8_0_procfinal,
    &setup_mmap_mprotect_pf8_0_procfinal,
    { { &test_mmap_mprotect_p18_0_0, 0, "mmap" },
      { &test_mmap_mprotect_pc0_0_1, 1, "mprotect" } },
    &cleanup },
//+++ common
  {}
};
