//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: open write
 */
static int test_open_write_pff_0_0(void) {
  int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static int test_open_write_pff_0_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(32);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_open_write_pff_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pff_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_write_pff_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_write_pff_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_open_write_pff_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: open write
 */
// static int test_open_write_pff_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pff_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pff_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pff_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pff_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
static void setup_open_write_pff_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_open_write_pff_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pfe_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
static int test_open_write_pfe_0_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, 4096);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_open_write_pfe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pfe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_write_pfe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_open_write_pfe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pfe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pfe_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pfe_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pfe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pfe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pfe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pfe_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pfe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pfc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
static int test_open_write_pfc_0_1(void) {
  ssize_t r = write(10, dataval0, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r <= 0) return xerrno(r);
  return r;
}
static void setup_open_write_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pfc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_open_write_pfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pfc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pfc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pfc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pfc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pfa_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pfa_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pfa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_open_write_pfa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_open_write_pfa_0_final(void) {
  unlink("__i0");
  unlink("__i1");
}
static void setup_open_write_pfa_0_procfinal(void) {
  
}

/*
 * calls: open write
 */
// static int test_open_write_pfa_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pfa_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pfa_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pfa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pfa_1_final(void) {
  unlink("__i0");
}
// static void setup_open_write_pfa_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pf8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pf8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_0_proc0
// static void setup_open_write_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pf8_0_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_open_write_pf8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pf8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pf8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_1_proc0
// static void setup_open_write_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pf8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pf0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pf0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfa_1_common
// static void setup_open_write_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pef_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pef_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pef_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_0_common
// static void setup_open_write_pef_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pef_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pef_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pef_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pef_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pef_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pef_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_1_common
// static void setup_open_write_pef_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pef_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pef_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pef_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pee_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pee_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pee_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfe_0_common
// static void setup_open_write_pee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pee_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pee_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pee_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pee_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfe_1_common
// static void setup_open_write_pee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pee_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pee_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pec_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pec_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfc_0_common
// static void setup_open_write_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pec_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pec_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfc_1_common
// static void setup_open_write_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pec_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pea_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pea_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pea_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pea_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pea_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pea_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pea_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pea_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfa_1_common
// static void setup_open_write_pea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_1_proc0
// static void setup_open_write_pea_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pea_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pe8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pe8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pe8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_0_proc0
// static void setup_open_write_pe8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pe8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pe8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pe8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pf8_1_common
// static void setup_open_write_pe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_1_proc0
// static void setup_open_write_pe8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pe8_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pe0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_write_pff_0_0
// static int test_open_write_pe0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pfa_1_common
// static void setup_open_write_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
static int test_open_write_pdfc_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_write_pdfc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pdfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pdfc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pdfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
static void setup_open_write_pdfc_0_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_open_write_pdfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pdfc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pdfc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pdfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pdfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pdfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pdfc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pdfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pdf4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pdf4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pdf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pdf4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pdf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pdf4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pdfc_0_final
// static void setup_open_write_pdf4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pdf4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pdf4_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pdf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pdf4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pdf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pdf4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pdf4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pde8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pde8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pde8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pdfc_1_common
// static void setup_open_write_pde8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pde8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pde8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pde8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pde8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pde8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pde8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pde8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pde8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pde8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pde8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pdde_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pdde_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pdde_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pdde_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pdde_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pdde_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pdde_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pdc8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pdc8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pdc8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval12, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval13, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pdc8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pea_0_proc1
// static void setup_open_write_pdc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pdc8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pdc8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pda_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pda_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pda_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pda_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pda_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pda_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pda_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd7c_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd7c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pd7c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd7c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pd7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pd7c_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pdfc_0_final
// static void setup_open_write_pd7c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd7c_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd7c_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pd7c_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd7c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pd7c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pd7c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pd7c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd74_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd74_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pd74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pdf4_1_common
// static void setup_open_write_pd74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pd74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pd74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pd74_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd74_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd74_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pd74_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd7c_0_common
// static void setup_open_write_pd74_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pd74_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pd74_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pdfc_0_final
// static void setup_open_write_pd74_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd68_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd68_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pd68_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pd68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pd68_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pd68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd68_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd68_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pd68_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pd68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pd68_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pd68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd5c_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd5c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pd5c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pd5c_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pd5c_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pd5c_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd48_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pd48_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pd48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pd48_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pd48_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_write_pf8_0_final
// static void setup_open_write_pd48_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pd2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pd2_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pd2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pda_0_common
// static void setup_open_write_pd2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pd2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pd2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pd2_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
static int test_open_write_pcfc_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT, 0666);
  
  return xerrno(r);
}
// static int test_open_write_pcfc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pcfc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pdfc_1_common
// static void setup_open_write_pcfc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pcfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pcfc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pcfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pcfc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pcfc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pcfc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pde8_1_common
// static void setup_open_write_pcfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pcfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pcfc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pcfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pcf4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pcf4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pcf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pcf4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pcf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pcf4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pcf4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pcf4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pcf4_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pcf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pcf4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pcf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pcf4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pcf4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pce8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pce8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pce8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_0_common
// static void setup_open_write_pce8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pce8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pce8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pce8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pce8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pce8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pce8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_pce8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pce8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pce8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pce8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pcdc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pcdc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pcdc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pcdc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pcdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pcdc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pcdc_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pcdc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pcdc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pcdc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pcdc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pcdc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pcdc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pcdc_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pccc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pccc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pccc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pccc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pccc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pccc_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_write_pf8_0_final
// static void setup_open_write_pccc_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pccc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pccc_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pccc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_write_pccc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pccc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pccc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pccc_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pca_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pca_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pca_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pca_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pca_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pca_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pca_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc7c_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc7c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pc7c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_0_common
// static void setup_open_write_pc7c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pc7c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pc7c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pc7c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc7c_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc7c_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_pc7c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_pc7c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pc7c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pc7c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pc7c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc74_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc74_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pc74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_0_common
// static void setup_open_write_pc74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pc74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pc74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pc74_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc74_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc74_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pc74_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_pc74_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pc74_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pc74_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pc74_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc68_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc68_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pc68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_0_common
// static void setup_open_write_pc68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pc68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pc68_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pc68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc68_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc68_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pc68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_1_common
// static void setup_open_write_pc68_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pc68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pc68_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_pc68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc58_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc58_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pc58_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pc58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pc58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pd5c_0_proc1
// static void setup_open_write_pc58_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_write_pf8_0_final
// static void setup_open_write_pc58_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc58_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc58_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pc58_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pc58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pc58_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pc58_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pc58_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc48_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_pc48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pca_0_common
// static void setup_open_write_pc48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pc48_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pc48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pc48_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc48_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc48_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pc48_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_pc48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
static void setup_open_write_pc48_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pc48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_pc48_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pc2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_pc2_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pc2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pca_0_common
// static void setup_open_write_pc2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pc2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pc2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pc2_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pbf8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pbf8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_pbf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_pbf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_pbf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_pbf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pbf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pbe8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pbe8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pbe8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_pbe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_pbe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pbe8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pbe8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pbd0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pbd0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pbd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_pbd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_pbd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_pbd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_pbd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pbb8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pbb8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pbb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_open_write_pbb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_write_pbb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pbb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pbb8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pb90_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pb90_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_pb90_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_write_pb90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pcdc_1_proc0
// static void setup_open_write_pb90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pb90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_pb90_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pb4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pb4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_pb4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_open_write_pb4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pb4_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_pb4_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_pa4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pdfc_0_0
// static int test_open_write_pa4_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_pa4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_write_pb4_0_common
// static void setup_open_write_pa4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pa4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_pa4_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_pa4_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p9f8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p9f8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p9f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p9f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p9f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p9f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p9f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p9e8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p9e8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p9e8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p9e8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p9e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p9e8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p9e8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p9d0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p9d0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_p9d0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p9d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p9d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p9d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p9d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p9b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p9b8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p9b8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_write_p9b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pc58_1_proc1
// static void setup_open_write_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p9b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p9b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p990_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p990_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p990_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval4, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval5, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval6, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval7, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_write_pbb8_0_common
// static void setup_open_write_p990_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pccc_1_proc0
// static void setup_open_write_p990_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p990_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p990_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p94_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p94_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_write_pb4_0_common
// static void setup_open_write_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p94_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_p94_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p84_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_pcfc_0_0
// static int test_open_write_p84_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p84_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_write_pb4_0_common
// static void setup_open_write_p84_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p84_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p84_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_p84_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
static int test_open_write_p7f8_0_0(void) {
  int r = open("__f0", O_RDWR | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_write_p7f8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p7f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p7f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p7f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p7f8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pdfc_0_final
// static void setup_open_write_p7f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7f8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7f8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p7f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p7f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p7f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p7f8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p7f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7e8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7e8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p7e8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p7e8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p7e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p7e8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p7e8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7e8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7e8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p7e8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p7e8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p7e8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p7e8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p7e8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7d0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7d0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p7d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd68_0_common
// static void setup_open_write_p7d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p7d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p7d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p7d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7d0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7d0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p7d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd68_1_common
// static void setup_open_write_p7d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p7d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p7d0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p7d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p7bc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p7bc_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p7bc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p7bc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pd5c_0_proc1
// static void setup_open_write_p7bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p7bc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p7bc_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p790_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p790_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p790_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p790_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pea_0_proc1
// static void setup_open_write_p790_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p790_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p790_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p74_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p74_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pda_0_common
// static void setup_open_write_p74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p74_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p74_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6f8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6f8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p6f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p6f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p6f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p6f8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p6f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6f8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6f8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p6f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p6f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p6f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p6f8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p6f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6e8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6e8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p6e8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd7c_0_common
// static void setup_open_write_p6e8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p6e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p6e8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pdfc_0_final
// static void setup_open_write_p6e8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6e8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6e8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p6e8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p6e8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p6e8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p6e8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p6e8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6d0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6d0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p6d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd68_0_common
// static void setup_open_write_p6d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p6d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p6d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p6d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6d0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6d0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p6d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pd68_1_common
// static void setup_open_write_p6d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p6d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p6d0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p6d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p6b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p6b8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p6b8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p6b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p6b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pd5c_0_proc1
// static void setup_open_write_p6b8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p6b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p690_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p690_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p690_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p690_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p690_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pd48_0_proc1
// static void setup_open_write_p690_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p690_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p64_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p7f8_0_0
// static int test_open_write_p64_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pda_0_common
// static void setup_open_write_p64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p64_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p64_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
static int test_open_write_p5f8_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  
  return xerrno(r);
}
// static int test_open_write_p5f8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_p5f8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pdfc_1_common
// static void setup_open_write_p5f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p5f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p5f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p5f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5f8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5f8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_p5f8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pde8_1_common
// static void setup_open_write_p5f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p5f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p5f8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p5f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5e8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5e8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p5e8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_0_common
// static void setup_open_write_p5e8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p5e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p5e8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p5e8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5e8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5e8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p5e8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_p5e8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p5e8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p5e8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p5e8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5d_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5d_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p5d_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_0_common
// static void setup_open_write_p5d_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p5d_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p5d_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p5d_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5d_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5d_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p5d_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_p5d_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p5d_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p5d_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p5d_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5b8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5b8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p5b8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval9, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval10, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval11, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p5b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pea_0_proc1
// static void setup_open_write_p5b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p5b8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p5b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p5b8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p5b8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p5b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval2, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval3, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcdc_1_common
// static void setup_open_write_p5b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pcdc_1_proc0
// static void setup_open_write_p5b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p5b8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p5b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p598_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p598_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p598_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval3, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval5, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval6, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval7, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval8, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval4, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p598_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pccc_0_proc0
// static void setup_open_write_p598_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p598_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p598_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p598_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p598_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p598_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval2, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p598_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pc48_0_proc1
// static void setup_open_write_p598_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p598_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p598_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p54_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p54_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p54_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pca_0_common
// static void setup_open_write_p54_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p54_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p54_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p54_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4f8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4f8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p4f8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p4f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p4f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p4f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p4f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4f8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4f8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p4f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p4f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p4f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p4f8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p4f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4e8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4e8_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p4e8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p4e8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p4e8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p4e8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p4e8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4e8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4e8_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p4e8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pcf4_1_common
// static void setup_open_write_p4e8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p4e8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p4e8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p4e8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4d_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4d_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p4d_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_0_common
// static void setup_open_write_p4d_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p4d_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p4d_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p4d_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4d_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4d_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p4d_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pff_1_common
// static void setup_open_write_p4d_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p4d_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p4d_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_1_final
// static void setup_open_write_p4d_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4b0_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4b0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p4b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_p6b8_0_common
// static void setup_open_write_p4b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p4b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pd5c_0_proc1
// static void setup_open_write_p4b0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p4b0_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p4b0_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p4b0_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p4b0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_write_p4b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p4b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pbb8_0_proc0
// static void setup_open_write_p4b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p4b0_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p490_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p490_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p490_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pc58_1_common
// static void setup_open_write_p490_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p490_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pcdc_1_proc0
// static void setup_open_write_p490_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p490_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p490_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p490_1_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p490_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pc48_1_common
// static void setup_open_write_p490_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p490_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pc48_1_proc1
// static void setup_open_write_p490_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_write_pfa_0_final
// static void setup_open_write_p490_1_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p44_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_write_p5f8_0_0
// static int test_open_write_p44_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_write_pca_0_common
// static void setup_open_write_p44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p44_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
static int test_open_write_p3e_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static int test_open_write_p3e_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
static void setup_open_write_p3e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p3e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p3e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p3e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p3e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p3c_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p3c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p3c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p3c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p3c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p38_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p38_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
static void setup_open_write_p38_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_write_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p34_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p34_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p34_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_write_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pcdc_1_proc0
// static void setup_open_write_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p34_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p34_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p30_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p30_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p30_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_write_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_1_proc0
// static void setup_open_write_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p30_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p2_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p2_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_write_pb4_0_common
// static void setup_open_write_p2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p2_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_p2_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p1e_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p1e_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(32);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pff_0_1
// static void setup_open_write_p1e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_write_p3e_0_common
// static void setup_open_write_p1e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc1
// static void setup_open_write_p1e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pff_0_proc0
// static void setup_open_write_p1e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p1e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p1c_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p1c_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
// static void setup_open_write_p1c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_write_p3c_0_common
// static void setup_open_write_p1c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p1c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc0
// static void setup_open_write_p1c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p1c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p18_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p18_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_write_p38_0_common
// static void setup_open_write_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfe_0_proc1
// static void setup_open_write_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_write_pfc_0_proc0
// static void setup_open_write_p18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_final
// static void setup_open_write_p18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_write_pff_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p14_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p14_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p14_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_open_write_p14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p14_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pfa_1_proc0
// static void setup_open_write_p14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p14_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p10_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p10_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, 4096);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfe_0_1
static void setup_open_write_p10_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_write_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_write_pc48_0_proc1
// static void setup_open_write_p10_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_write_pfa_1_final
// static void setup_open_write_p10_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

/*
 * calls: open write
 */
// static int test_open_write_p0_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_write_p3e_0_0
// static int test_open_write_p0_0_1(void) {
//   ssize_t r = write(10, dataval0, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r <= 0) return xerrno(r);
//   return r;
// }
// ^ See test_open_write_pfc_0_1
// static void setup_open_write_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_write_pb4_0_common
// static void setup_open_write_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_write_pfa_0_proc1
// static void setup_open_write_p0_0_final(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal
// static void setup_open_write_p0_0_procfinal(void) {
//   
// }
// ^ See setup_open_write_pfa_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-open_write_pff_0",
    &setup_open_write_pff_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pff_1",
    &setup_open_write_pff_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfe_0",
    &setup_open_write_pfe_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfe_1",
    &setup_open_write_pfe_1_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfc_0",
    &setup_open_write_pfc_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfc_1",
    &setup_open_write_pfc_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfa_0",
    &setup_open_write_pfa_0_common,
    { { &setup_open_write_pfa_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pfa_1",
    &setup_open_write_pfa_1_common,
    { { &setup_open_write_pfa_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pf8_0",
    &setup_open_write_pf8_0_common,
    { { &setup_open_write_pfa_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pf8_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pf8_1",
    &setup_open_write_pf8_1_common,
    { { &setup_open_write_pfa_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pf0_0",
    &setup_open_write_pfa_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pef_0",
    &setup_open_write_pff_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pef_1",
    &setup_open_write_pff_1_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pee_0",
    &setup_open_write_pfe_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pee_1",
    &setup_open_write_pfe_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pec_0",
    &setup_open_write_pfc_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pec_1",
    &setup_open_write_pfc_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pea_0",
    &setup_open_write_pea_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pea_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pea_1",
    &setup_open_write_pfa_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_1_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pe8_0",
    &setup_open_write_pe8_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pe8_1",
    &setup_open_write_pf8_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_1_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pe0_0",
    &setup_open_write_pfa_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pff_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pdfc_0",
    &setup_open_write_pdfc_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pdfc_1",
    &setup_open_write_pdfc_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pdf4_0",
    &setup_open_write_pdf4_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pdf4_1",
    &setup_open_write_pdf4_1_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pde8_0",
    &setup_open_write_pdfc_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pde8_1",
    &setup_open_write_pde8_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pdde_0",
    &setup_open_write_pdde_0_common,
    { { &setup_open_write_pdde_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pdc8_0",
    &setup_open_write_pdc8_0_common,
    { { &setup_open_write_pea_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pda_0",
    &setup_open_write_pda_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pd7c_0",
    &setup_open_write_pd7c_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd7c_1",
    &setup_open_write_pd7c_1_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd74_0",
    &setup_open_write_pdf4_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd74_1",
    &setup_open_write_pd7c_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd68_0",
    &setup_open_write_pd68_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd68_1",
    &setup_open_write_pd68_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd5c_0",
    &setup_open_write_pd5c_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd5c_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd48_0",
    &setup_open_write_pd48_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd48_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pf8_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pd2_0",
    &setup_open_write_pda_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pcfc_0",
    &setup_open_write_pdfc_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pcfc_1",
    &setup_open_write_pde8_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pcf4_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pcf4_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pce8_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pce8_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pcdc_0",
    &setup_open_write_pcdc_0_common,
    { { &setup_open_write_pcdc_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pcdc_1",
    &setup_open_write_pcdc_1_common,
    { { &setup_open_write_pcdc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pccc_0",
    &setup_open_write_pccc_0_common,
    { { &setup_open_write_pccc_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pf8_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pccc_1",
    &setup_open_write_pccc_1_common,
    { { &setup_open_write_pccc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pca_0",
    &setup_open_write_pca_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pc7c_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc7c_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc74_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc74_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc68_0",
    &setup_open_write_pff_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc68_1",
    &setup_open_write_pff_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc58_0",
    &setup_open_write_pc58_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd5c_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pf8_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc58_1",
    &setup_open_write_pc58_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pc58_1_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc48_0",
    &setup_open_write_pca_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pc48_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc48_1",
    &setup_open_write_pc48_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pc48_1_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pc2_0",
    &setup_open_write_pca_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_pbf8_0",
    &setup_open_write_pbf8_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pbe8_0",
    &setup_open_write_pbe8_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pbd0_0",
    &setup_open_write_pbd0_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pbb8_0",
    &setup_open_write_pbb8_0_common,
    { { &setup_open_write_pbb8_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pb90_0",
    &setup_open_write_pb90_0_common,
    { { &setup_open_write_pcdc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pb4_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_pa4_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_pdfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p9f8_0",
    &setup_open_write_p9f8_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p9e8_0",
    &setup_open_write_p9e8_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p9d0_0",
    &setup_open_write_p9d0_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p9b8_0",
    &setup_open_write_p9b8_0_common,
    { { &setup_open_write_pc58_1_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p990_0",
    &setup_open_write_pbb8_0_common,
    { { &setup_open_write_pccc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p94_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p84_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_pcfc_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p7f8_0",
    &setup_open_write_p7f8_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7f8_1",
    &setup_open_write_p7f8_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7e8_0",
    &setup_open_write_p7e8_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7e8_1",
    &setup_open_write_p7e8_1_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7d0_0",
    &setup_open_write_pd68_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7d0_1",
    &setup_open_write_pd68_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p7bc_0",
    &setup_open_write_p7bc_0_common,
    { { &setup_open_write_pd5c_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p790_0",
    &setup_open_write_p790_0_common,
    { { &setup_open_write_pea_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p74_0",
    &setup_open_write_pda_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p6f8_0",
    &setup_open_write_p6f8_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6f8_1",
    &setup_open_write_p6f8_1_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6e8_0",
    &setup_open_write_pd7c_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pdfc_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6e8_1",
    &setup_open_write_p6e8_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6d0_0",
    &setup_open_write_pd68_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6d0_1",
    &setup_open_write_pd68_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p6b8_0",
    &setup_open_write_p6b8_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd5c_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p690_0",
    &setup_open_write_p690_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd48_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p64_0",
    &setup_open_write_pda_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p7f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p5f8_0",
    &setup_open_write_pdfc_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5f8_1",
    &setup_open_write_pde8_1_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5e8_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5e8_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5d_0",
    &setup_open_write_pcf4_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5d_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5b8_0",
    &setup_open_write_p5b8_0_common,
    { { &setup_open_write_pea_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p5b8_1",
    &setup_open_write_pcdc_1_common,
    { { &setup_open_write_pcdc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p598_0",
    &setup_open_write_p598_0_common,
    { { &setup_open_write_pccc_0_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p598_1",
    &setup_open_write_p598_1_common,
    { { &setup_open_write_pc48_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p54_0",
    &setup_open_write_pca_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p4f8_0",
    &setup_open_write_p4f8_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4f8_1",
    &setup_open_write_p4f8_1_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4e8_0",
    &setup_open_write_p4e8_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4e8_1",
    &setup_open_write_pcf4_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4d_0",
    &setup_open_write_pff_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4d_1",
    &setup_open_write_pff_1_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4b0_0",
    &setup_open_write_p6b8_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pd5c_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p4b0_1",
    &setup_open_write_p4b0_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pbb8_0_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p490_0",
    &setup_open_write_pc58_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pcdc_1_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p490_1",
    &setup_open_write_pc48_1_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pc48_1_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p44_0",
    &setup_open_write_pca_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p5f8_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p3e_0",
    &setup_open_write_p3e_0_common,
    { { &setup_open_write_pff_0_proc0 }, { &setup_open_write_pff_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p3c_0",
    &setup_open_write_p3c_0_common,
    { { &setup_open_write_pfe_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p38_0",
    &setup_open_write_p38_0_common,
    { { &setup_open_write_pfc_0_proc0 }, { &setup_open_write_pfe_0_proc1 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p34_0",
    &setup_open_write_p34_0_common,
    { { &setup_open_write_pcdc_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p30_0",
    &setup_open_write_p30_0_common,
    { { &setup_open_write_pfa_1_proc0 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p2_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 0, "write" } },
    &cleanup },
  { "fs-open_write_p1e_0",
    &setup_open_write_p3e_0_common,
    { { &setup_open_write_pff_0_proc1 }, { &setup_open_write_pff_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pff_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p1c_0",
    &setup_open_write_p3c_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfe_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p18_0",
    &setup_open_write_p38_0_common,
    { { &setup_open_write_pfe_0_proc1 }, { &setup_open_write_pfc_0_proc0 } },
    &setup_open_write_pff_0_procfinal,
    &setup_open_write_pff_0_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p14_0",
    &setup_open_write_p14_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_1_proc0 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p10_0",
    &setup_open_write_p10_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pc48_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_1_final,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfe_0_1, 1, "write" } },
    &cleanup },
  { "fs-open_write_p0_0",
    &setup_open_write_pb4_0_common,
    { { &setup_open_write_pfa_0_proc1 }, { &setup_open_write_pfa_0_proc1 } },
    &setup_open_write_pfa_0_procfinal,
    &setup_open_write_pfa_0_procfinal,
    { { &test_open_write_p3e_0_0, 0, "open" },
      { &test_open_write_pfc_0_1, 1, "write" } },
    &cleanup },
//+++ common
  {}
};
