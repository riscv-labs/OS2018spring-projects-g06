//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pf8_0_0(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_lseek_pf8_0_1(void) {
  int r = lseek(11, 0, 999);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_lseek_pf8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_lseek_pf8_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_lseek_lseek_pf8_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
static void setup_lseek_lseek_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_lseek_pf8_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_lseek_pf8_1_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_lseek_lseek_pf8_1_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
static void setup_lseek_lseek_pf8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc0
// static void setup_lseek_lseek_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
static void setup_lseek_lseek_pf8_2_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_lseek_lseek_pf8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
static void setup_lseek_lseek_pf8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pf8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
static void setup_lseek_lseek_pf8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pf8_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_5_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
static void setup_lseek_lseek_pf8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pf8_5_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pf8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_3_proc0
// static void setup_lseek_lseek_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pf8_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pf8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_5_proc0
// static void setup_lseek_lseek_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pf8_7_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_8_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pf8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_4_proc0
// static void setup_lseek_lseek_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_1_proc1
// static void setup_lseek_lseek_pf8_8_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pf8_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_9_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_9_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
static void setup_lseek_lseek_pf8_9_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc0
// static void setup_lseek_lseek_pf8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
static void setup_lseek_lseek_pf8_9_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_lseek_lseek_pf8_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_10_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_10_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_pf8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf8_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_11_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_11_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_pf8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf8_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_12_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_12_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pf8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_11_proc0
// static void setup_lseek_lseek_pf8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf8_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_13_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_13_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pf8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_10_proc0
// static void setup_lseek_lseek_pf8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf8_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_14_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_14_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_pf8_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf8_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_15_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_15_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pf8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_14_proc0
// static void setup_lseek_lseek_pf8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf8_15_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_16_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_16_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pf8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_pf8_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_16_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf8_16_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf8_17_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf8_17_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pf8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_pf8_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf8_17_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf8_17_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf6_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf6_0_1(void) {
  int r = lseek(11, -4096, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_pf6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf6_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf6_1_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
static void setup_lseek_lseek_pf6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf6_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf6_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf6_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pf6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pf6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf6_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pf6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
static void setup_lseek_lseek_pf6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf4_0_1(void) {
  int r = lseek(11, 0, SEEK_SET);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_lseek_lseek_pf4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
static void setup_lseek_lseek_pf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
static void setup_lseek_lseek_pf4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
static void setup_lseek_lseek_pf4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_4_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
static void setup_lseek_lseek_pf4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf4_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_5_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
static void setup_lseek_lseek_pf4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf4_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_6_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
static void setup_lseek_lseek_pf4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf4_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf4_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf4_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pf4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
static void setup_lseek_lseek_pf4_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf4_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf4_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf3_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf3_0_1(void) {
  int r = lseek(11, -4096, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pf3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pf3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_4_proc0
// static void setup_lseek_lseek_pf3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf3_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf3_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pf3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pf3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_3_proc0
// static void setup_lseek_lseek_pf3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf3_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf3_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf3_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pf3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pf3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_6_proc0
// static void setup_lseek_lseek_pf3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf3_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf3_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf3_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf3_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pf3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pf3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_7_proc0
// static void setup_lseek_lseek_pf3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf3_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf3_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf2_0_1(void) {
  int r = lseek(11, 0, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pf2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pf2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_4_proc0
// static void setup_lseek_lseek_pf2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf2_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf2_1_1(void) {
  int r = lseek(11, -4096, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pf2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pf2_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf2_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pf2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
static void setup_lseek_lseek_pf2_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf2_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_3_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
static void setup_lseek_lseek_pf2_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_3_proc0
// static void setup_lseek_lseek_pf2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf2_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pf2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pf2_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf2_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_5_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pf2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
static void setup_lseek_lseek_pf2_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf2_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_6_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pf2_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pf2_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_6_proc0
// static void setup_lseek_lseek_pf2_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf2_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf2_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf2_7_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pf2_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pf2_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_7_proc0
// static void setup_lseek_lseek_pf2_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf2_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf2_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf18_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf18_0_1(void) {
  int r = lseek(11, -4096, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_pf18_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_0_proc0
// static void setup_lseek_lseek_pf18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf18_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf18_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
static void setup_lseek_lseek_pf18_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_1_proc0
// static void setup_lseek_lseek_pf18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
static void setup_lseek_lseek_pf18_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_lseek_lseek_pf18_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf18_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf18_2_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pf18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pf18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_2_proc0
// static void setup_lseek_lseek_pf18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf18_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pf18_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf18_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf18_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pf18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_pf18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_5_proc0
// static void setup_lseek_lseek_pf18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf18_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf18_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf10_0_1(void) {
  int r = lseek(11, 0, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pf10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_pf10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_0_proc0
// static void setup_lseek_lseek_pf10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf10_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf10_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pf10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pf10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_1_proc0
// static void setup_lseek_lseek_pf10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pf10_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf10_2_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pf10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pf10_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_2_proc0
// static void setup_lseek_lseek_pf10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pf10_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf10_3_1(void) {
  int r = lseek(11, 0, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
static void setup_lseek_lseek_pf10_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf10_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_4_proc0
// static void setup_lseek_lseek_pf10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf10_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf10_4_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
static void setup_lseek_lseek_pf10_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_pf10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_3_proc0
// static void setup_lseek_lseek_pf10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pf10_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf10_5_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pf10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_3_common
// static void setup_lseek_lseek_pf10_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_6_proc0
// static void setup_lseek_lseek_pf10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf10_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf10_6_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pf10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_4_common
// static void setup_lseek_lseek_pf10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_7_proc0
// static void setup_lseek_lseek_pf10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pf10_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf10_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pf10_7_1(void) {
  int r = lseek(11, 31621120, SEEK_END);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
static void setup_lseek_lseek_pf10_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_lseek_lseek_pf10_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pf10_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf10_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf10_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_4_proc0
// static void setup_lseek_lseek_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_3_proc0
// static void setup_lseek_lseek_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_7_proc0
// static void setup_lseek_lseek_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pf0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pf0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pf0_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pf0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pf0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf4_6_proc0
// static void setup_lseek_lseek_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pf0_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pf0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pe_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pe_0_1(void) {
  int r = lseek(11, 0, 999);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_lseek_lseek_pe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pe_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pe_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pe_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_pe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pe_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
static void setup_lseek_lseek_pd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_lseek_lseek_pd8_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pd8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
// static void setup_lseek_lseek_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc0
// static void setup_lseek_lseek_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc1
// static void setup_lseek_lseek_pd8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pd8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
// static void setup_lseek_lseek_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc0
static void setup_lseek_lseek_pd8_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pd8_4_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
static void setup_lseek_lseek_pd8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc1
// static void setup_lseek_lseek_pd8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pd8_6_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_7_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_8_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_2_common
// static void setup_lseek_lseek_pd8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_6_proc0
// static void setup_lseek_lseek_pd8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_4_proc1
// static void setup_lseek_lseek_pd8_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_2_final
// static void setup_lseek_lseek_pd8_8_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_9_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_9_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd8_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_10_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_10_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd8_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_11_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_11_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pd8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc0
// static void setup_lseek_lseek_pd8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_4_proc1
// static void setup_lseek_lseek_pd8_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pd8_11_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_12_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_12_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd8_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd8_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_13_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_13_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pd8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_6_proc0
// static void setup_lseek_lseek_pd8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_1_proc1
// static void setup_lseek_lseek_pd8_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pd8_13_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_14_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_14_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd8_14_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd8_14_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd8_15_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd8_15_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_1_common
// static void setup_lseek_lseek_pd8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_6_proc0
// static void setup_lseek_lseek_pd8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd8_4_proc1
// static void setup_lseek_lseek_pd8_15_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_final
// static void setup_lseek_lseek_pd8_15_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_lseek_lseek_pf8_1_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd6_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd6_0_1(void) {
  int r = lseek(10, -4096, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
// static void setup_lseek_lseek_pd6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd6_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd6_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd6_1_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pd6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd6_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd6_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd6_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
// static void setup_lseek_lseek_pd6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd6_0_proc1
// static void setup_lseek_lseek_pd6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd6_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd6_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pd6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd6_1_proc1
// static void setup_lseek_lseek_pd6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd4_0_1(void) {
  int r = lseek(10, 0, SEEK_SET);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd4_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd4_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd4_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_3_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd4_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_4_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pd4_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd4_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_1_proc1
// static void setup_lseek_lseek_pd4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd4_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_6_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd4_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd4_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd4_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd4_7_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pd4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd4_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd4_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd3_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd3_0_1(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd3_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd3_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pd3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd3_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd3_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd3_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pd3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd3_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd3_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd3_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd3_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pd3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd3_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd3_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd2_0_1(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd2_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd2_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd2_1_1(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pd2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
static void setup_lseek_lseek_pd2_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd2_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd2_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd2_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pd2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
// static void setup_lseek_lseek_pd2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
static void setup_lseek_lseek_pd2_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd2_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd2_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd2_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pd2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pd2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd2_1_proc1
// static void setup_lseek_lseek_pd2_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd2_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd2_4_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pd2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd2_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd2_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd2_5_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pd2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pd2_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd2_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd2_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd2_6_1(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd2_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd2_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd2_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd2_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd2_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd2_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd2_7_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pd2_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pd2_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd2_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd2_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd2_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd18_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd18_0_1(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_pd18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pd18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd18_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd18_1_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pd18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pd18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_1_proc1
// static void setup_lseek_lseek_pd18_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd18_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd18_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd18_2_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pd18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_pd18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pd18_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd18_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd18_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd18_3_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pd18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pd18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_1_proc1
// static void setup_lseek_lseek_pd18_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd18_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd10_0_1(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_pd10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pd10_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd10_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd10_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pd10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pd10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_1_proc1
// static void setup_lseek_lseek_pd10_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd10_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd10_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pd10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_1_common
// static void setup_lseek_lseek_pd10_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_1_proc1
// static void setup_lseek_lseek_pd10_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd10_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd10_3_1(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_3_common
// static void setup_lseek_lseek_pd10_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd10_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd10_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd10_4_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pd10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_4_common
// static void setup_lseek_lseek_pd10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd10_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd10_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd10_5_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pd10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_3_common
// static void setup_lseek_lseek_pd10_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd10_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd10_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd10_6_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pd10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_4_common
// static void setup_lseek_lseek_pd10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd10_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf18_1_final
// static void setup_lseek_lseek_pd10_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd10_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pd10_7_1(void) {
  int r = lseek(10, 31621120, SEEK_END);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
// static void setup_lseek_lseek_pd10_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf10_7_common
// static void setup_lseek_lseek_pd10_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
static void setup_lseek_lseek_pd10_7_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pd10_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd10_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd0_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd0_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd0_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd0_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pd0_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pd0_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pd0_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pd0_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pd0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_pd0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_3_proc1
// static void setup_lseek_lseek_pd0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pd0_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pc_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
static int test_lseek_lseek_pc_0_1(void) {
  int r = lseek(10, 0, 999);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_lseek_lseek_pc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pc_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_pc_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbe_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbe_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pbe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbe_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbe_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pbe_0_proc0
// static void setup_lseek_lseek_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pbe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbe_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbe_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbe_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pbe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pbe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pbe_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pbe_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbe_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbe_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbe_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pbe_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pbe_2_proc0
// static void setup_lseek_lseek_pbe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pbe_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pbe_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd8_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
static void setup_lseek_lseek_pbd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pbd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_pbd8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_lseek_lseek_pbd8_0_final(void) {
  unlink("__i0");
}
static void setup_lseek_lseek_pbd8_0_procfinal(void) {
  
}

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbd8_1_1(void) {
  int r = lseek(11, -8192, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_pbd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pbd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
static void setup_lseek_lseek_pbd8_1_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_lseek_lseek_pbd8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd8_2_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
static void setup_lseek_lseek_pbd8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pbd8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd8_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pbd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pbd8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pbd8_4_0(void) {
  int r = lseek(10, -8192, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_pbd8_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static void setup_lseek_lseek_pbd8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_lseek_lseek_pbd8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd8_5_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
// static void setup_lseek_lseek_pbd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pbd8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd8_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd8_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static void setup_lseek_lseek_pbd8_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pbd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pbd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
static void setup_lseek_lseek_pbd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pbd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pbd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
static void setup_lseek_lseek_pbd0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pbd0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbd0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbd0_4_1(void) {
  int r = lseek(11, 4096, SEEK_SET);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbd0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pbd0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbd0_5_1(void) {
  int r = lseek(10, 4096, SEEK_SET);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbd0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbd0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbd0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_6_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pbd0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbd0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbd0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_7_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pbd0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pbd0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbd0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbd0_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbd0_8_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbd0_8_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pbd0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbd0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbd0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbd0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbd0_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbcc_0_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pbcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbcc_1_1(void) {
  int r = lseek(11, -8192, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbcc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbcc_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pbcc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbcc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pbcc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbcc_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pbcc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pbcc_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbcc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbcc_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbcc_4_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_pbcc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbcc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbcc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbcc_5_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pbcc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbcc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbcc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbcc_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbcc_6_1(void) {
  int r = lseek(10, -8192, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbcc_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbcc_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbcc_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbcc_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbcc_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_0_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pbc8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbc8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
static void setup_lseek_lseek_pbc8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pbc8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_pbc8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbc8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc8_2_1(void) {
  int r = lseek(11, -7360512, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_lseek_lseek_pbc8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pbc8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc8_3_1(void) {
  int r = lseek(11, -8192, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbc8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pbc8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pbc8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbc8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbc8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_5_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pbc8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pbc8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbc8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_6_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pbc8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbc8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbc8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_7_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc8_7_1(void) {
  int r = lseek(11, 0, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbc8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbc8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_8_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_8_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pbc8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pbc8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_9_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_9_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pbc8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pbc8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_10_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc8_10_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pbc8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbc8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pbc8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc8_11_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc8_11_1(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pbc8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pbc8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc8_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc8_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc6_0_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pbc6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pbc6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pbc6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc6_1_1(void) {
  int r = lseek(11, -8192, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_pbc6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_lseek_lseek_pbc6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_pbc6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
static void setup_lseek_lseek_pbc6_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_lseek_lseek_pbc6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc6_2_1(void) {
  int r = lseek(10, -8192, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pbc6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pbc6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_3_0(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static int test_lseek_lseek_pbc6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pbc6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pbc6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_4_0(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static int test_lseek_lseek_pbc6_4_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pbc6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pbc6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc6_5_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pbc6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pbc6_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc6_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc6_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pbc6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pbc6_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pbc4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pbc4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pbc4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pbc4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
static void setup_lseek_lseek_pbc4_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pbc4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_2_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pbc4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pbc4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbc4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc4_3_1(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_lseek_lseek_pbc4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pbc4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbc4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc4_4_1(void) {
  int r = lseek(10, -8192, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbc4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbc4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_5_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pbc4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pbc4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbc4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_6_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
static void setup_lseek_lseek_pbc4_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pbc4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pbc4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pbc4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_7_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_7_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pbc4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pbc4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pbc4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_8_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc4_8_1(void) {
  int r = lseek(11, -8192, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbc4_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pbc4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_9_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc4_9_1(void) {
  int r = lseek(11, -4096, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pbc4_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pbc4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_10_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc4_10_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_pbc4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_pbc4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc4_11_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pbc4_11_1(void) {
  int r = lseek(11, 159744, SEEK_END);
  expect_result("r", r, 159744);
  return xerrno(r);
}
// static void setup_lseek_lseek_pbc4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pbc4_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc4_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc4_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pbc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_proc0
// static void setup_lseek_lseek_pbc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
static void setup_lseek_lseek_pbc0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pbc0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pbc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pbc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pbc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pbc0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pbc0_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pbc0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_pbc0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pbc0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pbc0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pbc0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb8_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb6_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
static void setup_lseek_lseek_pb6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pb6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb6_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pb6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pb6_0_proc0
// static void setup_lseek_lseek_pb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pb6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pb6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb6_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_0_common
// static void setup_lseek_lseek_pb6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pb6_0_proc0
// static void setup_lseek_lseek_pb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pb6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pb6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb6_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb6_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf6_1_common
// static void setup_lseek_lseek_pb6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pb6_0_proc0
// static void setup_lseek_lseek_pb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pb6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pb6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb58_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb58_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pb58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pb58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
static void setup_lseek_lseek_pb58_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb58_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb58_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb58_1_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_pb58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_common
// static void setup_lseek_lseek_pb58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
static void setup_lseek_lseek_pb58_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb58_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb58_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb58_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb58_2_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_pb58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb58_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb58_3_0(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static int test_lseek_lseek_pb58_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pb58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb58_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb58_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb58_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb58_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pb58_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb58_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb58_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb58_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb58_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pb50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
static void setup_lseek_lseek_pb50_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_pb50_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb50_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static void setup_lseek_lseek_pb50_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pb50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
static void setup_lseek_lseek_pb50_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb50_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb50_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pb50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pb50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
static void setup_lseek_lseek_pb50_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb50_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb50_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_3_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pb50_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pb50_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb50_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb50_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb50_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_4_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pb50_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb50_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb50_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb50_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb50_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_5_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pb50_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb50_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb50_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb50_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb50_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb50_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb50_6_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pb50_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb50_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb50_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb50_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb50_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb4c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb4c_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pb4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pb4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb4c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb4c_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb4c_1_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_pb4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_common
// static void setup_lseek_lseek_pb4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pb4c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb4c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb4c_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb4c_2_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_pb4c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb4c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb4c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb4c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb4c_3_0(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static int test_lseek_lseek_pb4c_3_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_pb4c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb4c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb4c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb4c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb4c_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb4c_4_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_pb4c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb4c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb4c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb4c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pb48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pb48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pb48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_pb48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_pb48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb48_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pb48_2_1(void) {
  int r = lseek(10, -7360512, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pb48_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pb48_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
static void setup_lseek_lseek_pb48_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb48_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pb48_3_1(void) {
  int r = lseek(10, -8192, SEEK_CUR);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_pb48_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb48_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb48_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb48_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_4_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pb48_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb48_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_5_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pb48_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pb48_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pb48_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb48_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_6_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pb48_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb48_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_7_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb48_7_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pb48_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb48_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb48_8_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pb48_8_1(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pb48_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb48_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb48_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb48_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb48_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb46_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb46_0_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pb46_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pb46_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb46_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb46_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb46_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb46_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb46_1_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_pb46_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pb46_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb46_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb46_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb46_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb46_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb46_2_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pb46_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pb46_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_pb46_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb46_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb46_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb46_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb46_3_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_pb46_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_pb46_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
static void setup_lseek_lseek_pb46_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb46_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pb46_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb46_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb46_4_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_pb46_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_pb46_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb46_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_pb46_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb46_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pb44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pb44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_1_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
static void setup_lseek_lseek_pb44_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pb44_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pb44_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_pb44_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pb44_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pb44_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pb44_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_3_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_3_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pb44_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pb44_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pb44_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pb44_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_4_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
static int test_lseek_lseek_pb44_4_1(void) {
  int r = lseek(10, 159744, SEEK_END);
  expect_result("r", r, 159744);
  return xerrno(r);
}
// static void setup_lseek_lseek_pb44_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pb44_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_pb44_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pb44_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_5_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pb44_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pb44_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_6_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_6_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static void setup_lseek_lseek_pb44_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pb44_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pb44_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_7_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_7_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pb44_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pb44_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pb44_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb44_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb44_8_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb44_8_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pb44_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_pb44_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 151552, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb44_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pb44_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb44_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb40_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb40_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pb40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_pb40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_pb40_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb40_1_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb40_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_pb40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
static void setup_lseek_lseek_pb40_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pb40_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pb40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb40_2_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb40_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pb40_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pb40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pb40_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pb0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static int test_lseek_lseek_pb0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
static void setup_lseek_lseek_pae_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pae_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_0_proc0
// static void setup_lseek_lseek_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pae_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
static void setup_lseek_lseek_pae_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pae_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pae_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
static void setup_lseek_lseek_pae_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pae_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pae_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pae_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_pae_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pae_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_5_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pae_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_2_proc0
// static void setup_lseek_lseek_pae_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pae_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
static void setup_lseek_lseek_pae_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_pae_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pae_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pae_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pae_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pae_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pae_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_pae_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_pae_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pae_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad8_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pad8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pad8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad8_1_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pad8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pad8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad8_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pad8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad8_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pad8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pad8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad8_4_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_pad8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_pad8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad8_5_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pad8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad8_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pad8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pad8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pad8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad8_7_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pad8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pad8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pad8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad8_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad8_8_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_pad8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pad8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad8_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_0_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_3_proc0
// static void setup_lseek_lseek_pad0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pad0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_2_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pad0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_pad0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pad0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pad0_4_0(void) {
  int r = lseek(10, 8192, SEEK_SET);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_lseek_pad0_4_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pad0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_5_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pad0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_6_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pad0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_7_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pad0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_8_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pad0_8_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pad0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_proc0
// static void setup_lseek_lseek_pad0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad0_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_9_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pad0_9_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pad0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_10_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_10_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pad0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_11_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_11_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pad0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_12_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_12_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pad0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pad0_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_13_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_13_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pad0_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad0_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pad0_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_14_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_14_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pad0_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_15_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_15_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pad0_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad0_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_16_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_16_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pad0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_17_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pad0_17_1(void) {
  int r = lseek(11, 8192, SEEK_SET);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pad0_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pad0_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pad0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_18_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_18_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_pad0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pad0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_19_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pad0_19_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pad0_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pad0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pad0_20_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pad0_20_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_pad0_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pad0_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_pad0_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pad0_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pad0_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pace_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pace_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pace_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pace_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pace_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pace_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pace_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pace_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pace_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_2_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pace_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pace_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_pace_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_pace_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pace_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pace_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pace_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pace_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pace_4_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_pace_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_pace_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pace_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pace_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pace_5_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_pace_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pace_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pace_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pace_6_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_pace_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pace_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pace_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pace_7_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pace_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pace_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pace_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pace_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pace_8_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_pace_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pace_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pace_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pace_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pace_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac90_0_1(void) {
  int r = lseek(11, 4096, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pac90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac90_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pac90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pac90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pac90_2_0(void) {
  int r = lseek(10, 31621120, SEEK_SET);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
static int test_lseek_lseek_pac90_2_1(void) {
  int r = lseek(11, 31617024, SEEK_CUR);
  expect_result("r", r, 63242240);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pac90_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac90_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_3_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pac90_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac90_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_4_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pac90_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pac90_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_pac90_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac90_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_5_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
static int test_lseek_lseek_pac90_5_1(void) {
  int r = lseek(11, 4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac90_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_6_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pac90_6_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_pac90_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pac90_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_pac90_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac90_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_7_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
static int test_lseek_lseek_pac90_7_1(void) {
  int r = lseek(11, 8192, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pac90_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_8_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_pac90_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pac90_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pac90_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac90_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_9_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac90_9_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_pac90_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac90_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_10_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac90_10_1(void) {
  int r = lseek(11, 8192, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac90_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_11_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac90_11_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_pac90_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac90_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_12_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac90_12_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_pac90_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pac90_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pac90_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac90_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_13_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_13_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pac90_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pac90_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_14_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac90_14_1(void) {
  int r = lseek(11, 8192, SEEK_CUR);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_pac90_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_15_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pac90_15_1(void) {
  int r = lseek(11, 8192, SEEK_CUR);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_17_proc0
// static void setup_lseek_lseek_pac90_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_16_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pac90_16_1(void) {
//   int r = lseek(11, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_7_1
// static void setup_lseek_lseek_pac90_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pac90_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac90_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_17_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_17_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_0_1
// static void setup_lseek_lseek_pac90_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_pac90_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_18_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pac90_18_1(void) {
  int r = lseek(11, 4096, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac90_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_pac90_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_19_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac90_19_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_0_1
// static void setup_lseek_lseek_pac90_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_pac90_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac90_20_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac90_20_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pac90_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac90_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac90_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac90_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac90_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac6_0_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pac6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pac6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac6_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pac6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_pac6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_pac6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac6_2_1(void) {
  int r = lseek(11, -28672, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pac6_3_0(void) {
  int r = lseek(10, 159744, SEEK_SET);
  expect_result("r", r, 159744);
  return xerrno(r);
}
// static int test_lseek_lseek_pac6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pac6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pac6_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac6_4_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pac6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pac6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac6_5_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_pac6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pac6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pac6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac6_6_1(void) {
  int r = lseek(10, -28672, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_7_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pac6_7_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pac6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pac6_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac6_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac6_8_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_pac6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_pac6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac6_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pac4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pac4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_pac4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_3_proc0
// static void setup_lseek_lseek_pac4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
static int test_lseek_lseek_pac4_2_1(void) {
  int r = lseek(11, 0, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pac4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_pac4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_3_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_2_1
static void setup_lseek_lseek_pac4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_pac4_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pac4_4_0(void) {
  int r = lseek(10, 163840, SEEK_SET);
  expect_result("r", r, 163840);
  return xerrno(r);
}
// static int test_lseek_lseek_pac4_4_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_pac4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pac4_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_5_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_6_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pac4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_pac4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_7_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_7_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_pac4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_8_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
static void setup_lseek_lseek_pac4_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac4_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_9_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_9_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_10_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pac4_10_1(void) {
  int r = lseek(11, 4096, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_pac4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_11_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_11_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_pac4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pac4_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_pac4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pac4_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_12_0(void) {
//   int r = lseek(10, 163840, SEEK_SET);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_4_0
// static int test_lseek_lseek_pac4_12_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_pac4_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac4_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_pac4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_13_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_13_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pac4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_14_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac4_14_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_15_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_15_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_pac4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pac4_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_16_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_16_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_pac4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pac4_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_17_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pac4_17_1(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pac4_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_18_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
static int test_lseek_lseek_pac4_18_1(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pac4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pac4_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_19_0(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static int test_lseek_lseek_pac4_19_1(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static void setup_lseek_lseek_pac4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pac4_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_20_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_20_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pac4_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pac4_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_21_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_21_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pac4_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pac4_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_21_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_22_0(void) {
//   int r = lseek(10, 163840, SEEK_SET);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_4_0
// static int test_lseek_lseek_pac4_22_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_pac4_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_pac4_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 167936, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_22_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac4_23_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac4_23_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_pac4_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_pac4_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pac4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac4_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac4_23_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_pac0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pac0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pac0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_pac0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pac0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_pac0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pac0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pac0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_pac0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pac0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pac0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pac0_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_pac0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_pac0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_pac0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pac0_8_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pac0_8_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pac0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pac0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pac0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pac0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pac0_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa8_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa8_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa8_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa8_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pa6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pa6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pa6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pa6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pa6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pa6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_pa6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pa6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pa6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pa6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pa6_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pa6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pa6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_pa6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pa6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pa6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_pa6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pa6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pa6_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_pa6_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa6_7_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa6_7_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_pa6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_pa6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_pa6_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_pa6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa58_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_1_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa58_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa58_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa58_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa58_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa58_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa58_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_pa58_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa58_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa58_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa58_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa58_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_5_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa58_5_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa58_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa58_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa58_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa58_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa58_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_pa58_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa58_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa58_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa58_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa58_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_3_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_3_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pa50_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_4_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa50_4_1(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static void setup_lseek_lseek_pa50_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa50_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_6_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pa50_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa50_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa50_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa50_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_7_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_7_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_8_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_9_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_9_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa50_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_pa50_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa50_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_10_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_10_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_11_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_11_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa50_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa50_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa50_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_12_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_12_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa50_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa50_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa50_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pa50_13_0(void) {
  int r = lseek(10, 12288, SEEK_SET);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_lseek_pa50_13_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_pa50_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa50_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_14_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_14_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_15_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_15_1(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static void setup_lseek_lseek_pa50_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_16_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa50_16_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_17_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa50_17_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa50_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa50_18_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa50_18_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_pa50_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa50_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa50_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa50_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa4c_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa4c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa4c_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa4c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_2_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa4c_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa4c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa4c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa4c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa4c_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa4c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa4c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa4c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_4_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa4c_4_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa4c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa4c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa4c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_5_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa4c_5_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa4c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa4c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa4c_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa4c_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa4c_6_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_pa4c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa4c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa4c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa4c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa4c_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa48_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_1_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pa48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa48_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_2_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa48_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pa48_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa48_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_pa48_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa48_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_3_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa48_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pa48_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa48_4_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pa48_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa48_5_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pa48_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa48_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_6_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_6_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static void setup_lseek_lseek_pa48_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_7_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa48_7_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_pa48_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa48_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_8_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_8_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_9_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_9_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa48_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa48_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa48_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_10_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_10_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pa48_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa48_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_pa48_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa48_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_11_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_11_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_pa48_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_12_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_12_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pa48_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_13_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_13_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pa48_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_14_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa48_14_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_15_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_15_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_pa48_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_16_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa48_16_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_pa48_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa48_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_17_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa48_17_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_pa48_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa48_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa48_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa48_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa48_18_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pa48_18_1(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_pa48_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_pa48_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pa48_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa48_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa48_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_0_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pa46_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa46_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa46_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa46_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa46_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_1_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pa46_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_pa46_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa46_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_pa46_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa46_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_2_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_pa46_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa46_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa46_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa46_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa46_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_3_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_pa46_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa46_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa46_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa46_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa46_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_4_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_pa46_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pa46_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa46_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa46_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa46_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_pa46_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa46_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa46_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa46_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa46_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa46_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa46_6_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_pa46_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa46_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa46_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa46_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa46_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pa44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_1_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa44_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pa44_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa44_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa44_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pa44_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pa44_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_pa44_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_3_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pa44_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pa44_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pa44_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_4_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_pa44_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_pa44_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
static void setup_lseek_lseek_pa44_4_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pa44_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa44_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_5_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pa44_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_pa44_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_pa44_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_common
// static void setup_lseek_lseek_pa44_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa44_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa44_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_7_0(void) {
//   int r = lseek(10, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_3_0
// static int test_lseek_lseek_pa44_7_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_pa44_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pa44_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_pa44_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_8_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_8_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pa44_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_pa44_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa44_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa44_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_9_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa44_9_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_10_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa44_10_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_pa44_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_pa44_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_pa44_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_11_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa44_11_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_12_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa44_12_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_13_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa44_13_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_14_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
static int test_lseek_lseek_pa44_14_1(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, 12288);
  return xerrno(r);
}
static void setup_lseek_lseek_pa44_14_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_pa44_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_15_0(void) {
//   int r = lseek(10, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_3_0
// static int test_lseek_lseek_pa44_15_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_pa44_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_pa44_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pa44_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_16_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa44_16_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa44_17_0(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static int test_lseek_lseek_pa44_17_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_pa44_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_pa44_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa44_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa44_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_pa44_18_0(void) {
  int r = lseek(10, 167936, SEEK_SET);
  expect_result("r", r, 167936);
  return xerrno(r);
}
static int test_lseek_lseek_pa44_18_1(void) {
  int r = lseek(10, 163840, SEEK_END);
  expect_result("r", r, 163840);
  return xerrno(r);
}
// static void setup_lseek_lseek_pa44_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_pa44_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_pa44_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_pa44_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa44_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa40_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa40_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_pa40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_pa40_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa40_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_2_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa40_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa40_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa40_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa40_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_3_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa40_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa40_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa40_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa40_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_4_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa40_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa40_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa40_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa40_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_5_0(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static int test_lseek_lseek_pa40_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_pa40_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_pa40_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa40_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa40_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa40_6_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa40_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_pa40_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_pa40_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
static void setup_lseek_lseek_pa40_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_pa40_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_pa40_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa0_0_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_pa0_1_0(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static int test_lseek_lseek_pa0_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_pa0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_pa0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_pa0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_pa0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_pa0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9f_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9f_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p9f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p9f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p9f_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p9f_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9f_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9f_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p9f_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p9f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p9f_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p9f_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9f_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9f_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9f_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p9f_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p9f_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p9f_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p9f_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9f_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9f_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9f_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p9f_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p9f_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p9f_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p9f_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ec_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p9ec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9ec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9ec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
static int test_lseek_lseek_p9ec_1_1(void) {
  int r = lseek(11, -12288, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9ec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9ec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_2_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9ec_2_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
// static void setup_lseek_lseek_p9ec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9ec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ec_3_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
// static void setup_lseek_lseek_p9ec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9ec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ec_4_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p9ec_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9ec_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9ec_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9ec_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ec_5_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p9ec_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9ec_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ec_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ec_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ec_6_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_p9ec_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ec_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ec_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ec_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ec_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ea_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9ea_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9ea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9ea_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9ea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ea_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p9ea_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9ea_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9ea_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ea_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9ea_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_proc0
// static void setup_lseek_lseek_p9ea_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9ea_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_4_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9ea_4_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_p9ea_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9ea_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_5_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9ea_5_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p9ea_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ea_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ea_6_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9ea_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9ea_7_0(void) {
  int r = lseek(10, -12288, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_p9ea_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p9ea_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ea_8_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9ea_8_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9ea_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ea_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9ea_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9ea_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ea_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
static int test_lseek_lseek_p9e6_0_1(void) {
  int r = lseek(11, -5066752, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9e6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
static void setup_lseek_lseek_p9e6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9e6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e6_1_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_p9e6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9e6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e6_2_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_p9e6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p9e6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e6_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p9e6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9e6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9e6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9e6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e6_5_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p9e6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e6_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e6_6_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p9e6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p9e5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p9e5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9e5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_2_0(void) {
//   int r = lseek(10, -12288, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9ea_7_0
static int test_lseek_lseek_p9e5_2_1(void) {
  int r = lseek(11, -4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9e5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p9e5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_3_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p9e5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_4_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_7_1
// static void setup_lseek_lseek_p9e5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9e5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_5_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_7_1
// static void setup_lseek_lseek_p9e5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9e5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_proc0
// static void setup_lseek_lseek_p9e5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9e5_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_6_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_18_1
// static void setup_lseek_lseek_p9e5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad8_5_proc0
// static void setup_lseek_lseek_p9e5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_7_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e5_7_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p9e5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_14_common
// static void setup_lseek_lseek_p9e5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_8_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_8_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p9e5_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9e5_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9e5_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9e5_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e5_9_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e5_9_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_0_1
// static void setup_lseek_lseek_p9e5_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e5_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9e5_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e5_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e5_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e3_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e3_0_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p9e3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9e3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9e3_1_0(void) {
  int r = lseek(10, -28672, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_lseek_p9e3_1_1(void) {
  int r = lseek(11, -32768, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_p9e3_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_p9e3_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9e3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9e3_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9e3_2_0(void) {
  int r = lseek(10, -36864, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_lseek_p9e3_2_1(void) {
  int r = lseek(11, -40960, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9e3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p9e3_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36864, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9e3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e3_3_0(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static int test_lseek_lseek_p9e3_3_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p9e3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9e3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p9e3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e3_4_0(void) {
//   int r = lseek(10, -36864, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_2_0
static int test_lseek_lseek_p9e3_4_1(void) {
  int r = lseek(10, -32768, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9e3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p9e3_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9e3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e3_5_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e3_5_1(void) {
//   int r = lseek(11, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_1_1
// static void setup_lseek_lseek_p9e3_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9e3_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9e3_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e3_6_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e3_6_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_p9e3_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9e3_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9e3_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e3_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e3_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p9e28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9e28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p9e28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9e28_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e28_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_2_1(void) {
//   int r = lseek(11, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_8_1
// static void setup_lseek_lseek_p9e28_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e28_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9e28_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p9e28_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_common
static void setup_lseek_lseek_p9e28_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9e28_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9e28_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_4_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static void setup_lseek_lseek_p9e28_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e28_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e28_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p9e28_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9e28_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e28_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_6_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9e28_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9e28_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e28_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_7_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9e28_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p9e28_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9e28_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9e28_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9e28_8_0(void) {
  int r = lseek(10, -16384, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_lseek_p9e28_8_1(void) {
  int r = lseek(11, -16384, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9e28_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_14_common
// static void setup_lseek_lseek_p9e28_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_7_proc0
// static void setup_lseek_lseek_p9e28_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9e28_9_0(void) {
  int r = lseek(10, -163840, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_p9e28_9_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_p9e28_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9e28_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p9e28_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_10_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e28_10_1(void) {
//   int r = lseek(11, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_8_1
// static void setup_lseek_lseek_p9e28_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e28_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e28_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e28_11_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e28_11_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9e28_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9e28_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9e28_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e28_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e28_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9e0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9e0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e0_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9e0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9e0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9e0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9e0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p9e0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p9e0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9e0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9e0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9e0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9e0_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9e0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9e0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9e0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9e0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9e0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9c_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p9c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9b_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9b_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9b_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p9b_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p9b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p9b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p9b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9b_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9b_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9b_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p9b_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p9b_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p9b_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p9b_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9b_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9b_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9b_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p9b_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p9b_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p9b_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p9b_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9b_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9b_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9b_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p9b_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p9b_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p9b_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p9b_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ac_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ac_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p9ac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9ac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ac_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ac_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
static int test_lseek_lseek_p9ac_1_1(void) {
  int r = lseek(10, -12288, SEEK_SET);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9ac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9ac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ac_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ac_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ac_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p9ac_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ac_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9ac_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ac_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ac_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ac_3_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_p9ac_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9ac_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9ac_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9ac_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9ac_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p9ac_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9ac_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9ac_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9ac_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9ac_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a8_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9a8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9a8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a8_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a8_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9a8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a8_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a8_2_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p9a8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a8_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a8_3_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9a8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a8_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a8_4_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p9a8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a8_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_5_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a8_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9a8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p9a8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a8_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a8_6_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a8_6_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9a8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a8_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
static int test_lseek_lseek_p9a6_0_1(void) {
  int r = lseek(10, -5066752, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9a6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p9a6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a6_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a6_1_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p9a6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a6_2_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p9a6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a6_3_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a6_3_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p9a6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a6_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a6_4_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p9a6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
static int test_lseek_lseek_p9a4_0_1(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9a4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p9a4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a4_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p9a4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p9a4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_2_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a4_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p9a4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a4_3_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p9a4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a4_4_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p9a4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_5_0(void) {
//   int r = lseek(10, -12288, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9ea_7_0
// static int test_lseek_lseek_p9a4_5_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p9a4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p9a4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_6_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a4_6_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p9a4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a4_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a4_7_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p9a4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a4_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a4_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a3_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a3_0_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p9a3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9a3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a3_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a3_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a3_1_0(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static int test_lseek_lseek_p9a3_1_1(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static void setup_lseek_lseek_p9a3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p9a3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
static void setup_lseek_lseek_p9a3_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36298752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a3_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a3_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a3_2_0(void) {
//   int r = lseek(10, -36864, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_2_0
static int test_lseek_lseek_p9a3_2_1(void) {
  int r = lseek(10, -36864, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9a3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p9a3_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_p9a3_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36864, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a3_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a3_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a3_3_0(void) {
//   int r = lseek(10, -36864, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_2_0
// static int test_lseek_lseek_p9a3_3_1(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static void setup_lseek_lseek_p9a3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_common
// static void setup_lseek_lseek_p9a3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 32768, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9a3_2_proc0
static void setup_lseek_lseek_p9a3_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 32768, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a3_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9a3_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9a3_4_0(void) {
  int r = lseek(10, -32768, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_p9a3_4_1(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static void setup_lseek_lseek_p9a3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p9a3_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p9a3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p9a3_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a3_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
static int test_lseek_lseek_p9a2_0_1(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9a2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p9a2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_1_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a2_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p9a2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_common
// static void setup_lseek_lseek_p9a2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a2_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9a2_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a2_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p9a2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p9a2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a2_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9a2_3_0(void) {
  int r = lseek(10, -167936, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_p9a2_3_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p9a2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p9a2_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p9a2_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_4_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a2_4_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static void setup_lseek_lseek_p9a2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9a2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9a2_5_0(void) {
  int r = lseek(10, -53248, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static int test_lseek_lseek_p9a2_5_1(void) {
  int r = lseek(10, 0, SEEK_END);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9a2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_p9a2_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 49152, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_6_0(void) {
//   int r = lseek(10, -32768, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a3_4_0
static int test_lseek_lseek_p9a2_6_1(void) {
  int r = lseek(10, -20480, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_lseek_lseek_p9a2_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_p9a2_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_p9a2_6_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9a2_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9a2_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a2_7_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p9a2_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9a2_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p9a2_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a2_8_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a2_8_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p9a2_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9a2_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a2_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a2_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9a0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9a0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a0_1_0(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static int test_lseek_lseek_p9a0_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9a0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9a0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9a0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9a0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9a0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p9a0_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p9a0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9a0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9a0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p9a0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9a0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p98_0_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static int test_lseek_lseek_p98_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p98_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p97_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p97_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p97_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p97_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p97_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p97_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p97_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p97_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p97_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p97_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p97_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p97_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p97_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p97_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p97_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p97_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p97_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p97_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p97_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p97_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p97_5_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p97_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p97_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p97_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p97_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p97_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p97_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p97_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p97_7_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p97_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p97_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p97_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p97_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p97_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p97_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p96c_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p96c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p96c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p96c_1_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p96c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p96c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p96c_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad8_5_proc0
// static void setup_lseek_lseek_p96c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p96c_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p96c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_4_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p96c_4_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p96c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p96c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p96c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p96c_5_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p96c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p96c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p96c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p96c_6_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p96c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p96c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p96c_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p96c_7_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p96c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_8_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p96c_8_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p96c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p96c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_9_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p96c_9_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p96c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_10_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p96c_10_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p96c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p96c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p96c_11_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p96c_11_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p96c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p96c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p96c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p96c_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p96c_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9690_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9690_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9690_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9690_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9690_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9690_2_0(void) {
  int r = lseek(10, 163840, SEEK_CUR);
  expect_result("r", r, 163840);
  return xerrno(r);
}
static int test_lseek_lseek_p9690_2_1(void) {
  int r = lseek(11, 159744, SEEK_SET);
  expect_result("r", r, 159744);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9690_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_p9690_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9690_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9690_3_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_lseek_p9690_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p9690_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_4_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p9690_4_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9690_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_5_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p9690_5_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9690_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p9690_6_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9690_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_7_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p9690_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9690_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_p9690_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9690_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_8_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9690_8_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9690_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9690_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9690_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p9690_9_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p9690_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9690_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_10_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9690_10_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p9690_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_p9690_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9690_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9690_11_0(void) {
  int r = lseek(10, 31621120, SEEK_CUR);
  expect_result("r", r, 63242240);
  return xerrno(r);
}
static int test_lseek_lseek_p9690_11_1(void) {
  int r = lseek(11, 31617024, SEEK_SET);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9690_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_p9690_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9690_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p9690_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_12_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9690_12_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9690_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_13_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9690_13_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p9690_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_14_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9690_14_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_p9690_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9690_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_15_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p9690_15_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_p9690_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9690_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_16_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9690_16_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9690_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_17_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa48_18_1
// static int test_lseek_lseek_p9690_17_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p9690_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_18_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9690_18_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p9690_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9690_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_19_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p9690_19_1(void) {
//   int r = lseek(11, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_17_1
// static void setup_lseek_lseek_p9690_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p9690_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9690_20_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9690_20_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p9690_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p9690_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9690_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9690_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9690_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p967_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p967_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p967_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p967_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
static int test_lseek_lseek_p967_1_1(void) {
  int r = lseek(11, -31621120, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p967_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_p967_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p967_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p967_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p967_2_1(void) {
//   int r = lseek(11, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p967_1_1
// static void setup_lseek_lseek_p967_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p967_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p967_1_proc0
// static void setup_lseek_lseek_p967_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p967_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p967_3_1(void) {
//   int r = lseek(11, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p967_1_1
// static void setup_lseek_lseek_p967_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_p967_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p967_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p967_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p967_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p967_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p967_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_5_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p967_5_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p967_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p967_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p967_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p967_6_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p967_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p967_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p967_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_7_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p967_7_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p967_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p967_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p967_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_8_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p967_8_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p967_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p967_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p967_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p967_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p967_9_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p967_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p967_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p967_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p967_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p967_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
static int test_lseek_lseek_p964c_0_1(void) {
  int r = lseek(11, 0, SEEK_CUR);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p964c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p967_3_proc0
// static void setup_lseek_lseek_p964c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p964c_1_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_7_1
// static void setup_lseek_lseek_p964c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p964c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_proc0
// static void setup_lseek_lseek_p964c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p964c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p964c_2_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 16384);
  return xerrno(r);
}
// static int test_lseek_lseek_p964c_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p964c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
static void setup_lseek_lseek_p964c_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p964c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p964c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p964c_3_0(void) {
  int r = lseek(10, 12288, SEEK_CUR);
  expect_result("r", r, 20480);
  return xerrno(r);
}
// static int test_lseek_lseek_p964c_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p964c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p964c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_4_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p964c_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p964c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p964c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p964c_5_0(void) {
  int r = lseek(10, 4096, SEEK_CUR);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_lseek_p964c_5_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p964c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_p964c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p964c_6_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p964c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_7_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p964c_7_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p964c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p964c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p964c_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_8_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p964c_8_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p964c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p964c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p964c_9_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p964c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p964c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_10_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p964c_10_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p964c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_p964c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p964c_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_11_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 16384);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_2_0
// static int test_lseek_lseek_p964c_11_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p964c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_p964c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_12_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p964c_12_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p964c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p964c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_13_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p964c_13_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_0_1
// static void setup_lseek_lseek_p964c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p964c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_14_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p964c_14_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p964c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p964c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_15_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p964c_15_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p964c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_16_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p964c_16_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p964c_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_17_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p964c_17_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p964c_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p964c_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_18_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p964c_18_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p964c_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p964c_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_19_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_5_0
// static int test_lseek_lseek_p964c_19_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_7_1
// static void setup_lseek_lseek_p964c_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p964c_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p964c_20_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p964c_20_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p964c_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p964c_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p964c_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p964c_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p964c_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p963_0_1(void) {
//   int r = lseek(11, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_1
// static void setup_lseek_lseek_p963_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p963_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p963_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p963_1_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p963_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p963_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p963_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p963_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p963_2_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p963_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p963_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p963_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p963_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p963_3_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p963_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p963_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad8_5_proc0
// static void setup_lseek_lseek_p963_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p963_4_1(void) {
//   int r = lseek(11, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_1
// static void setup_lseek_lseek_p963_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p963_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p963_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p963_5_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p963_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p963_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p963_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p963_6_1(void) {
//   int r = lseek(11, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_1
// static void setup_lseek_lseek_p963_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p963_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p963_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p963_7_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p963_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p963_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p963_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_8_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p963_8_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p963_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p963_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p963_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p963_9_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
// static void setup_lseek_lseek_p963_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p963_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p963_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_10_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p963_10_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p963_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p963_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p963_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p963_11_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p963_11_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p963_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p963_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p963_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p963_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p963_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9624_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p9624_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9624_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9624_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9624_2_0(void) {
  int r = lseek(10, 155648, SEEK_CUR);
  expect_result("r", r, 155648);
  return xerrno(r);
}
static int test_lseek_lseek_p9624_2_1(void) {
  int r = lseek(11, 4096, SEEK_END);
  expect_result("r", r, 32768);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p9624_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 139264, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p9624_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9624_3_0(void) {
  int r = lseek(10, 8192, SEEK_CUR);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_lseek_p9624_3_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_p9624_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad8_5_proc0
// static void setup_lseek_lseek_p9624_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_4_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p9624_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9624_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9624_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_5_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_5_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_p9624_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p9624_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_6_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_p9624_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p9624_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9624_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9624_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_7_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_7_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_p9624_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9624_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_8_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_8_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_10_1
// static void setup_lseek_lseek_p9624_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p9624_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_proc0
// static void setup_lseek_lseek_p9624_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9624_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_9_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p9624_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_common
// static void setup_lseek_lseek_p9624_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p9624_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9624_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_10_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p9624_10_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static void setup_lseek_lseek_p9624_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9624_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9624_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_11_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
static int test_lseek_lseek_p9624_11_1(void) {
  int r = lseek(10, -4096, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9624_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9624_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_12_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_12_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p9624_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9624_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9624_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_13_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
static int test_lseek_lseek_p9624_13_1(void) {
  int r = lseek(11, 8192, SEEK_END);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p9624_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9624_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_14_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
static int test_lseek_lseek_p9624_14_1(void) {
  int r = lseek(11, 0, SEEK_END);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p9624_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p9624_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_15_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
static int test_lseek_lseek_p9624_15_1(void) {
  int r = lseek(11, 4096, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9624_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p9624_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p9624_16_0(void) {
  int r = lseek(10, 12288, SEEK_CUR);
  expect_result("r", r, 24576);
  return xerrno(r);
}
static int test_lseek_lseek_p9624_16_1(void) {
  int r = lseek(11, 8192, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_14_common
// static void setup_lseek_lseek_p9624_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_7_proc0
// static void setup_lseek_lseek_p9624_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_17_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_17_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9624_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_18_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
static int test_lseek_lseek_p9624_18_1(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static void setup_lseek_lseek_p9624_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9624_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p9624_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_19_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p9624_19_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p9624_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_p9624_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p9624_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_20_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p9624_20_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9624_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_21_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p9624_21_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p9624_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p9624_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p9624_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_21_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_22_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_5_0
// static int test_lseek_lseek_p9624_22_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_p9624_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_22_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p9624_23_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
// static int test_lseek_lseek_p9624_23_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p9624_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p9624_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p9624_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p9624_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p9624_23_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p960_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p960_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p960_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p960_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_2_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p960_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p960_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p960_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p960_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p960_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p960_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p960_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p960_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p960_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_5_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p960_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p960_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p960_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p960_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p960_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_7_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p960_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p960_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p960_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e28_3_proc0
// static void setup_lseek_lseek_p960_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p960_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p960_8_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p960_8_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p960_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p960_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p960_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p960_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p960_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p94_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p94_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p94_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p94_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p94_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p94_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p94_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p93_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p93_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p93_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p93_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p93_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p93_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p93_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p93_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p93_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p93_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p93_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p93_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p93_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p93_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p93_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p93_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p93_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p93_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p93_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p93_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p93_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p93_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p93_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p93_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p93_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_0_common
// static void setup_lseek_lseek_p93_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p93_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p93_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p93_7_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p93_7_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p93_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf4_1_common
// static void setup_lseek_lseek_p93_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p93_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p93_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p93_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p92c_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p92c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p92c_1_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p92c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p92c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p92c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p92c_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p92c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p92c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p92c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_3_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p92c_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p92c_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p92c_5_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p92c_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_7_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p92c_7_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p92c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p92c_8_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p92c_8_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p92c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p92c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p92c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p92c_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p928_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p928_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p928_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p928_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p928_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p928_3_0(void) {
  int r = lseek(10, 167936, SEEK_CUR);
  expect_result("r", r, 331776);
  return xerrno(r);
}
static int test_lseek_lseek_p928_3_1(void) {
  int r = lseek(10, 155648, SEEK_SET);
  expect_result("r", r, 155648);
  return xerrno(r);
}
// static void setup_lseek_lseek_p928_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9a2_3_proc0
// static void setup_lseek_lseek_p928_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p928_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_4_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p928_4_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_5_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
// static int test_lseek_lseek_p928_5_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p928_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p928_6_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p928_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p928_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p928_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_7_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p928_7_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_8_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p928_8_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p928_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p928_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p928_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p928_9_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_10_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p928_10_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p928_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p928_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p928_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_11_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p928_11_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p928_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p928_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p928_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_12_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p928_12_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_13_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_5_0
// static int test_lseek_lseek_p928_13_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p928_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p928_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_14_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p928_14_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_15_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p928_15_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_16_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
// static int test_lseek_lseek_p928_16_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p928_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p928_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_17_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 16384);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_2_0
// static int test_lseek_lseek_p928_17_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p928_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p928_18_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p928_18_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p928_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p928_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p928_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p928_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p928_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
static int test_lseek_lseek_p926_0_1(void) {
  int r = lseek(10, -31621120, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p926_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p926_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p926_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p926_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p926_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p926_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_2_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p926_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p926_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p926_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p926_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p926_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_4_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p926_4_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_5_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p926_5_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p926_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p926_6_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p926_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p926_7_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p926_7_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p926_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p926_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p926_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p926_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p926_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
static int test_lseek_lseek_p924_0_1(void) {
  int r = lseek(10, 0, SEEK_CUR);
  expect_result("r", r, 155648);
  return xerrno(r);
}
// static void setup_lseek_lseek_p924_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p924_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_1_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p924_1_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_2_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 16384);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_2_0
// static int test_lseek_lseek_p924_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p924_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p924_3_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p924_4_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p924_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p924_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p924_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p924_5_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p924_6_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p924_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p924_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p924_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_7_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_3_0
// static int test_lseek_lseek_p924_7_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_8_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p924_8_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p924_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_9_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p924_9_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p924_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p924_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p924_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p924_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_10_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p924_10_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_11_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p924_11_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p924_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p924_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p924_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_12_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p924_12_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p924_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_13_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p924_13_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p924_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_14_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p924_14_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_15_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p924_15_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p924_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p924_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_16_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_5_0
// static int test_lseek_lseek_p924_16_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p924_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p924_17_0(void) {
  int r = lseek(10, -4096, SEEK_CUR);
  expect_result("r", r, 4096);
  return xerrno(r);
}
// static int test_lseek_lseek_p924_17_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p924_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p924_18_0(void) {
//   int r = lseek(10, 12288, SEEK_CUR);
//   expect_result("r", r, 20480);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_3_0
// static int test_lseek_lseek_p924_18_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p924_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p924_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p924_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p924_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p924_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p923_0_1(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static void setup_lseek_lseek_p923_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p923_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p923_1_0(void) {
  int r = lseek(10, 31621120, SEEK_CUR);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
// static int test_lseek_lseek_p923_1_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p923_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p923_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p923_2_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p923_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p923_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p923_3_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p923_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p923_4_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p923_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p923_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p923_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_5_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p923_5_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p923_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p923_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p923_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_6_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p923_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p923_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p923_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p923_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p923_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_7_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p923_7_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p923_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p923_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p923_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p923_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p923_8_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p923_8_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p923_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p923_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p923_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p923_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p923_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p922_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p922_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_common
// static void setup_lseek_lseek_p922_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p922_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p922_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_2_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p922_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p922_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p922_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_3_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_4_0(void) {
//   int r = lseek(10, 167936, SEEK_CUR);
//   expect_result("r", r, 331776);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p928_3_0
// static int test_lseek_lseek_p922_4_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p922_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p922_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9a2_3_proc0
// static void setup_lseek_lseek_p922_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p922_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_5_0(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static int test_lseek_lseek_p922_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_14_1
// static void setup_lseek_lseek_p922_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_14_common
// static void setup_lseek_lseek_p922_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_6_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 12288);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_14_1
// static void setup_lseek_lseek_p922_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_14_common
// static void setup_lseek_lseek_p922_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p922_7_0(void) {
  int r = lseek(10, 159744, SEEK_CUR);
  expect_result("r", r, 319488);
  return xerrno(r);
}
// static int test_lseek_lseek_p922_7_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p922_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p922_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p922_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p922_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_8_0(void) {
//   int r = lseek(10, 159744, SEEK_CUR);
//   expect_result("r", r, 319488);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p922_7_0
// static int test_lseek_lseek_p922_8_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p922_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_p922_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p922_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa40_6_proc1
// static void setup_lseek_lseek_p922_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p922_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_9_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p922_9_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p922_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_common
// static void setup_lseek_lseek_p922_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p922_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p922_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_10_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static int test_lseek_lseek_p922_10_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_11_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_8_1
// static int test_lseek_lseek_p922_11_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p922_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p922_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_12_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
static int test_lseek_lseek_p922_12_1(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 32768);
  return xerrno(r);
}
// static void setup_lseek_lseek_p922_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p922_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_13_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
static int test_lseek_lseek_p922_13_1(void) {
  int r = lseek(10, 4096, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static void setup_lseek_lseek_p922_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_14_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_14_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_15_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p922_15_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p922_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p922_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_16_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p922_16_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p922_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p922_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_17_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 16384);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_2_0
// static int test_lseek_lseek_p922_17_1(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_18_1
// static void setup_lseek_lseek_p922_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p922_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p922_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p922_18_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
// static int test_lseek_lseek_p922_18_1(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p922_13_1
// static void setup_lseek_lseek_p922_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p922_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p922_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p922_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p922_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p920_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p920_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p920_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_1_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p920_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p920_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p920_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p920_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_2_0(void) {
//   int r = lseek(10, 8192, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_3_0
// static int test_lseek_lseek_p920_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p920_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p920_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p920_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_3_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p920_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p920_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p920_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_4_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p920_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p920_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p920_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p920_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_5_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p920_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p920_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p920_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p920_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p920_6_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p920_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p920_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p920_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p920_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa40_6_proc1
// static void setup_lseek_lseek_p920_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p920_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p90_0_0(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static int test_lseek_lseek_p90_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p90_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p90_1_0(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static int test_lseek_lseek_p90_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p90_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p90_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p90_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p90_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p90_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f8_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8f8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_0_proc0
// static void setup_lseek_lseek_p8f8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8f8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8f8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f8_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
static void setup_lseek_lseek_p8f8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_lseek_lseek_p8f8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_0_proc0
// static void setup_lseek_lseek_p8f8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8f8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8f8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f8_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p8f8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_2_proc0
// static void setup_lseek_lseek_p8f8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8f8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8f8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f8_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8f8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_2_proc0
// static void setup_lseek_lseek_p8f8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8f8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8f8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8f6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8f6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_1_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
// static void setup_lseek_lseek_p8f6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8f6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8f6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8f6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
static void setup_lseek_lseek_p8f6_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_lseek_lseek_p8f6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_proc0
// static void setup_lseek_lseek_p8f6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_4_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static int test_lseek_lseek_p8f6_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8f6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8f6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_5_1(void) {
//   int r = lseek(11, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_1_1
// static void setup_lseek_lseek_p8f6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f6_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f6_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f6_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8f6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8f6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8f4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8f4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8f4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8f4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8f4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_2_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8f4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f4_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_3_1(void) {
//   int r = lseek(11, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_2_1
// static void setup_lseek_lseek_p8f4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8f4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_4_1(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static void setup_lseek_lseek_p8f4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8f4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f4_5_1(void) {
  int r = lseek(11, 5062656, SEEK_SET);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8f4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f4_6_1(void) {
  int r = lseek(10, 5062656, SEEK_SET);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8f4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f4_7_1(void) {
  int r = lseek(11, 163840, SEEK_SET);
  expect_result("r", r, 163840);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8f4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f4_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f4_8_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8f4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f4_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f4_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f3_0_1(void) {
//   int r = lseek(11, -5066752, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e6_0_1
// static void setup_lseek_lseek_p8f3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f3_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_1_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
static int test_lseek_lseek_p8f3_1_1(void) {
  int r = lseek(11, -32768, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p8f3_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_2_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
static int test_lseek_lseek_p8f3_2_1(void) {
  int r = lseek(11, -28672, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
static void setup_lseek_lseek_p8f3_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f3_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_3_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static int test_lseek_lseek_p8f3_3_1(void) {
//   int r = lseek(11, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f3_2_1
static void setup_lseek_lseek_p8f3_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8f3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_proc0
// static void setup_lseek_lseek_p8f3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f3_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8f3_4_0(void) {
  int r = lseek(10, -24576, SEEK_END);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static int test_lseek_lseek_p8f3_4_1(void) {
//   int r = lseek(11, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f3_2_1
// static void setup_lseek_lseek_p8f3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_p8f3_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_5_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static int test_lseek_lseek_p8f3_5_1(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static void setup_lseek_lseek_p8f3_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p8f3_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8f3_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f3_6_0(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static int test_lseek_lseek_p8f3_6_1(void) {
//   int r = lseek(10, -32768, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a3_4_0
// static void setup_lseek_lseek_p8f3_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p8f3_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8f3_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f3_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f3_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_0_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_0_1
// static void setup_lseek_lseek_p8f2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_2_proc0
// static void setup_lseek_lseek_p8f2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_1_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_3_1
// static void setup_lseek_lseek_p8f2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f2_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f2_2_1(void) {
  int r = lseek(11, 159744, SEEK_CUR);
  expect_result("r", r, 315392);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8f2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_3_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p8f2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8f2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_4_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p8f2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8f2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_p8f2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f2_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_5_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_3_1
// static void setup_lseek_lseek_p8f2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8f2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_6_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p8f2_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8f2_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f2_7_1(void) {
  int r = lseek(11, 5062656, SEEK_CUR);
  expect_result("r", r, 10125312);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f2_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f3_0_proc0
// static void setup_lseek_lseek_p8f2_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_8_1(void) {
//   int r = lseek(11, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f2_7_1
// static void setup_lseek_lseek_p8f2_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8f2_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_5_proc0
// static void setup_lseek_lseek_p8f2_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f2_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_9_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f2_9_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p8f2_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p8f2_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_10_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f2_10_1(void) {
  int r = lseek(11, 36270080, SEEK_CUR);
  expect_result("r", r, 72540160);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f2_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f2_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f2_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f2_11_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f2_11_1(void) {
  int r = lseek(10, 7356416, SEEK_CUR);
  expect_result("r", r, 14712832);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f2_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f2_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p8f2_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f2_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f2_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_0_1(void) {
//   int r = lseek(11, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_2_1
static void setup_lseek_lseek_p8f18_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8f18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8f18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f18_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8f18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8f18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_2_1(void) {
//   int r = lseek(11, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_1_1
// static void setup_lseek_lseek_p8f18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8f18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8f18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_11_proc0
// static void setup_lseek_lseek_p8f18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_4_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_p8f18_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8f18_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_5_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static int test_lseek_lseek_p8f18_5_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8f18_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p8f18_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f18_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f18_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8f18_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f18_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8f18_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f18_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f18_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f10_0_1(void) {
  int r = lseek(11, 0, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
static void setup_lseek_lseek_p8f10_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8f10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_p8f10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f10_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p8f10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8f10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_2_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_p8f10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8f10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_3_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p8f10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f18_0_common
// static void setup_lseek_lseek_p8f10_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p8f10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f10_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f10_4_1(void) {
  int r = lseek(11, 5062656, SEEK_END);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f3_0_proc0
// static void setup_lseek_lseek_p8f10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_5_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_p8f10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8f10_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 163840, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8f10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_6_1(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static void setup_lseek_lseek_p8f10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8f10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f10_7_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_p8f10_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_11_proc0
// static void setup_lseek_lseek_p8f10_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f10_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8f10_8_1(void) {
  int r = lseek(10, 5062656, SEEK_END);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8f10_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f10_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8f10_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f10_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f10_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8f0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8f0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_4_proc0
// static void setup_lseek_lseek_p8f0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8f0_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8f0_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8f0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8f0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p8f0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8f0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8f0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8e_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8e_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p8e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8e_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d8_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d8_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8d8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p8d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p8d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d8_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d8_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p8d8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p8d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p8d8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d8_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d8_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p8d8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p8d8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p8d8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8d8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d8_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d8_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8d8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p8d8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p8d8_3_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8d8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d6_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d6_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8d6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d6_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d6_1_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_p8d6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p8d6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d6_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d6_2_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_p8d6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d6_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d6_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8d6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d6_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d6_4_1(void) {
//   int r = lseek(10, -8192, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd8_4_0
// static void setup_lseek_lseek_p8d6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d6_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p8d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d4_1_1(void) {
  int r = lseek(10, 31617024, SEEK_SET);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d4_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_2_1(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d4_1_1
// static void setup_lseek_lseek_p8d4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
static void setup_lseek_lseek_p8d4_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8d4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_3_1(void) {
//   int r = lseek(10, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_6_1
// static void setup_lseek_lseek_p8d4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_3_proc1
// static void setup_lseek_lseek_p8d4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_4_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p8d4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p8d4_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p8d4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d4_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d4_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d4_6_1(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d4_1_1
// static void setup_lseek_lseek_p8d4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8d4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d3_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d3_0_1(void) {
//   int r = lseek(10, -5066752, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a6_0_1
// static void setup_lseek_lseek_p8d3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d3_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d3_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d3_1_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static int test_lseek_lseek_p8d3_1_1(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static void setup_lseek_lseek_p8d3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p8d3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8d3_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d3_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d3_2_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static int test_lseek_lseek_p8d3_2_1(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static void setup_lseek_lseek_p8d3_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f3_3_common
// static void setup_lseek_lseek_p8d3_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
static void setup_lseek_lseek_p8d3_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8d3_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d3_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d3_3_0(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static int test_lseek_lseek_p8d3_3_1(void) {
//   int r = lseek(10, -28672, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_0
// static void setup_lseek_lseek_p8d3_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p8d3_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8d3_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8d3_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d3_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d3_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d3_4_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p8d3_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d3_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8d3_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d3_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d3_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a4_0_1
// static void setup_lseek_lseek_p8d2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_1_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_3_1
// static void setup_lseek_lseek_p8d2_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d2_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d2_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p8d2_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d2_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p8d2_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d2_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d2_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p8d2_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d2_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d2_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d2_4_1(void) {
  int r = lseek(10, 5062656, SEEK_CUR);
  expect_result("r", r, 10125312);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d2_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d2_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d2_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_5_1(void) {
//   int r = lseek(10, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_4_1
// static void setup_lseek_lseek_p8d2_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d2_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d2_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_3_proc1
// static void setup_lseek_lseek_p8d2_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d2_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d2_6_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_3_1
// static void setup_lseek_lseek_p8d2_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa48_18_proc0
// static void setup_lseek_lseek_p8d2_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d2_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d2_7_1(void) {
  int r = lseek(10, 159744, SEEK_CUR);
  expect_result("r", r, 315392);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d2_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d2_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d2_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d2_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d2_8_1(void) {
  int r = lseek(10, 31617024, SEEK_CUR);
  expect_result("r", r, 63234048);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d2_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d2_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8d2_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d2_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d2_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d18_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d18_0_1(void) {
//   int r = lseek(10, -28672, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_6_1
// static void setup_lseek_lseek_p8d18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f18_0_common
// static void setup_lseek_lseek_p8d18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p8d18_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d18_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d18_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d18_1_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8d18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d18_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d18_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d18_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d18_2_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_p8d18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d18_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d18_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d18_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d18_3_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8d18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d18_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d18_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d18_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d18_4_1(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_2_1
// static void setup_lseek_lseek_p8d18_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d18_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_4_proc0
// static void setup_lseek_lseek_p8d18_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8d18_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d18_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d10_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 28672);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a2_0_1
// static void setup_lseek_lseek_p8d10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f10_0_common
// static void setup_lseek_lseek_p8d10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p8d10_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d10_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d10_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p8d10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8d10_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d10_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d10_2_1(void) {
  int r = lseek(10, 20480, SEEK_END);
  expect_result("r", r, 24576);
  return xerrno(r);
}
static void setup_lseek_lseek_p8d10_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_lseek_lseek_p8d10_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_p8d10_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8d10_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d10_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_3_0(void) {
//   int r = lseek(10, -24576, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f3_4_0
static int test_lseek_lseek_p8d10_3_1(void) {
  int r = lseek(10, 5042176, SEEK_END);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
static void setup_lseek_lseek_p8d10_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5042176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_p8d10_3_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5042176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8d10_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d10_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_4_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d10_4_1(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static void setup_lseek_lseek_p8d10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d10_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d10_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
static int test_lseek_lseek_p8d10_5_1(void) {
  int r = lseek(10, 31617024, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8d10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d10_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8d10_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d10_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d10_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d10_6_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p8d10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8d10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8d10_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d10_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d0_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d0_1_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d0_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p8d0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8d0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8d0_2_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8d0_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8d0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8d0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8d0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8d0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8d0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8c_0_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static int test_lseek_lseek_p8c_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b8_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_0_proc0
// static void setup_lseek_lseek_p8b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8b8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b8_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p8b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_0_proc0
// static void setup_lseek_lseek_p8b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8b8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b8_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p8b8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_2_proc0
// static void setup_lseek_lseek_p8b8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8b8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b8_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
static void setup_lseek_lseek_p8b8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_p8b8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8b8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_4_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b8_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
static void setup_lseek_lseek_p8b8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_p8b8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p8b8_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_5_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b8_5_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8b8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_p8b8_3_proc0
// static void setup_lseek_lseek_p8b8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_5_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8b8_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_6_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b8_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8b8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_2_proc0
// static void setup_lseek_lseek_p8b8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8b8_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b8_7_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b8_7_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p8b8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_p8b8_4_proc0
// static void setup_lseek_lseek_p8b8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p8b8_7_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p8b8_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b6_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p8b6_1_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p8b6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p8b6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b6_2_0(void) {
  int r = lseek(10, 36270080, SEEK_END);
  expect_result("r", r, 36270080);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b6_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_3_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b6_3_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p8b6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_4_0(void) {
//   int r = lseek(10, 36270080, SEEK_END);
//   expect_result("r", r, 36270080);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_2_0
// static int test_lseek_lseek_p8b6_4_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36274176, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b6_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_5_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p8b6_5_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p8b6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p8b6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b6_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b6_6_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_5_proc0
// static void setup_lseek_lseek_p8b6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b6_7_0(void) {
  int r = lseek(10, 9986048, SEEK_END);
  expect_result("r", r, 9986048);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b6_7_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9986048, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_5_proc0
// static void setup_lseek_lseek_p8b6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_8_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b6_8_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p8b6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p8b6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_9_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b6_9_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8b6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_10_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p8b6_10_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8b6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p8b6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b6_11_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b6_11_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p8b6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b6_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b6_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b4_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_1_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b4_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8b4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8b4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_2_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b4_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8b4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_3_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b4_3_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p8b4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_4_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b4_4_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8b4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_5_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b4_5_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8b4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b4_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b4_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_6_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b4_6_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8b4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b4_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b4_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_7_0(void) {
  int r = lseek(10, 151552, SEEK_END);
  expect_result("r", r, 155648);
  return xerrno(r);
}
static int test_lseek_lseek_p8b4_7_1(void) {
  int r = lseek(11, 155648, SEEK_SET);
  expect_result("r", r, 155648);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b4_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8b4_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_8_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b4_8_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b4_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_9_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b4_9_1(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static void setup_lseek_lseek_p8b4_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8b4_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_10_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b4_10_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b4_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b4_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b4_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_11_0(void) {
  int r = lseek(10, 12288, SEEK_END);
  expect_result("r", r, 12288);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b4_11_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p8b4_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_12_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b4_12_1(void) {
//   int r = lseek(11, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9690_11_1
// static void setup_lseek_lseek_p8b4_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_4_proc0
// static void setup_lseek_lseek_p8b4_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_13_0(void) {
  int r = lseek(10, 5062656, SEEK_END);
  expect_result("r", r, 5066752);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b4_13_1(void) {
//   int r = lseek(11, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_5_1
// static void setup_lseek_lseek_p8b4_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_10_proc0
// static void setup_lseek_lseek_p8b4_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_14_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8b4_14_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p8b4_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b4_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_15_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_18_1
// static int test_lseek_lseek_p8b4_15_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_p8b4_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_p8b4_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_16_0(void) {
  int r = lseek(10, 5066752, SEEK_END);
  expect_result("r", r, 5066752);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b4_16_1(void) {
//   int r = lseek(11, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_5_1
// static void setup_lseek_lseek_p8b4_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f3_0_proc0
// static void setup_lseek_lseek_p8b4_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_17_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b4_17_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p8b4_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b4_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_18_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p8b4_18_1(void) {
//   int r = lseek(11, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_5_1
// static void setup_lseek_lseek_p8b4_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_5_proc0
// static void setup_lseek_lseek_p8b4_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_19_0(void) {
  int r = lseek(10, 9981952, SEEK_END);
  expect_result("r", r, 9986048);
  return xerrno(r);
}
static int test_lseek_lseek_p8b4_19_1(void) {
  int r = lseek(11, 9981952, SEEK_SET);
  expect_result("r", r, 9981952);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b4_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_p8b4_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b4_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_20_0(void) {
  int r = lseek(10, 9981952, SEEK_END);
  expect_result("r", r, 9981952);
  return xerrno(r);
}
static int test_lseek_lseek_p8b4_20_1(void) {
  int r = lseek(10, 9981952, SEEK_SET);
  expect_result("r", r, 9981952);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b4_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p8b4_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b4_21_0(void) {
  int r = lseek(10, 8192, SEEK_END);
  expect_result("r", r, 8192);
  return xerrno(r);
}
// static int test_lseek_lseek_p8b4_21_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p8b4_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b4_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p8b4_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_21_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_22_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b4_22_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p8b4_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8b4_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_22_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b4_23_0(void) {
//   int r = lseek(10, 151552, SEEK_END);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_7_0
// static int test_lseek_lseek_p8b4_23_1(void) {
//   int r = lseek(11, 155648, SEEK_SET);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_7_1
// static void setup_lseek_lseek_p8b4_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b4_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_11_proc0
// static void setup_lseek_lseek_p8b4_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b4_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b4_23_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b38_0_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_p8b38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8b38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p8b38_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p8b38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p8b38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p8b38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_2_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b38_2_1(void) {
//   int r = lseek(11, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p967_1_1
// static void setup_lseek_lseek_p8b38_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b38_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b38_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_3_0(void) {
//   int r = lseek(10, 9986048, SEEK_END);
//   expect_result("r", r, 9986048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_7_0
static int test_lseek_lseek_p8b38_3_1(void) {
  int r = lseek(11, -9990144, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b38_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b38_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9986048, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b38_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b38_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_4_0(void) {
//   int r = lseek(10, 9986048, SEEK_END);
//   expect_result("r", r, 9986048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_7_0
// static int test_lseek_lseek_p8b38_4_1(void) {
//   int r = lseek(11, -9990144, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b38_3_1
// static void setup_lseek_lseek_p8b38_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b38_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9990144, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b38_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b38_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b38_5_0(void) {
  int r = lseek(10, -12288, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
static int test_lseek_lseek_p8b38_5_1(void) {
  int r = lseek(11, -12288, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
static void setup_lseek_lseek_p8b38_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8b38_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p8b38_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b38_6_0(void) {
  int r = lseek(10, 7356416, SEEK_END);
  expect_result("r", r, 7356416);
  return xerrno(r);
}
static int test_lseek_lseek_p8b38_6_1(void) {
  int r = lseek(11, -7360512, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b38_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b38_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b38_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b38_7_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p8b38_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b38_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p8b38_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b38_8_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p8b38_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b38_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b38_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_9_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b38_9_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p8b38_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b38_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b38_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_10_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b38_10_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p8b38_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b38_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p8b38_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b38_11_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8b38_11_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p8b38_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b38_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b38_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b38_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b38_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b24_0_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_0_1
// static void setup_lseek_lseek_p8b24_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_2_proc0
// static void setup_lseek_lseek_p8b24_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_1_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b24_1_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p964c_0_1
// static void setup_lseek_lseek_p8b24_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8b24_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_proc0
// static void setup_lseek_lseek_p8b24_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b24_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b24_2_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p8b24_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p8b24_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_3_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
static int test_lseek_lseek_p8b24_3_1(void) {
  int r = lseek(11, 159744, SEEK_CUR);
  expect_result("r", r, 319488);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_11_proc0
// static void setup_lseek_lseek_p8b24_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_4_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
// static int test_lseek_lseek_p8b24_4_1(void) {
//   int r = lseek(11, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f2_7_1
// static void setup_lseek_lseek_p8b24_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_10_proc0
// static void setup_lseek_lseek_p8b24_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_5_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
// static int test_lseek_lseek_p8b24_5_1(void) {
//   int r = lseek(11, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f2_7_1
// static void setup_lseek_lseek_p8b24_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b24_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5066752, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b24_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b24_6_0(void) {
  int r = lseek(10, 5054464, SEEK_END);
  expect_result("r", r, 5054464);
  return xerrno(r);
}
static int test_lseek_lseek_p8b24_6_1(void) {
  int r = lseek(11, 5058560, SEEK_CUR);
  expect_result("r", r, 10121216);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b24_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5058560, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_7_0(void) {
//   int r = lseek(10, 8192, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_21_0
// static int test_lseek_lseek_p8b24_7_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p8b24_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_8_proc0
// static void setup_lseek_lseek_p8b24_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_8_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8b24_8_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p8b24_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b24_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8b24_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b24_9_0(void) {
  int r = lseek(10, 9977856, SEEK_END);
  expect_result("r", r, 9977856);
  return xerrno(r);
}
static int test_lseek_lseek_p8b24_9_1(void) {
  int r = lseek(11, 9981952, SEEK_CUR);
  expect_result("r", r, 19963904);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b24_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 3637248, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b24_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_10_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
static int test_lseek_lseek_p8b24_10_1(void) {
  int r = lseek(11, 9977856, SEEK_CUR);
  expect_result("r", r, 19959808);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b24_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9977856, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_11_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
static int test_lseek_lseek_p8b24_11_1(void) {
  int r = lseek(11, 9986048, SEEK_CUR);
  expect_result("r", r, 19968000);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b24_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9990144, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9981952, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_12_0(void) {
//   int r = lseek(10, 9986048, SEEK_END);
//   expect_result("r", r, 9986048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_7_0
// static int test_lseek_lseek_p8b24_12_1(void) {
//   int r = lseek(11, 9977856, SEEK_CUR);
//   expect_result("r", r, 19959808);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_10_1
// static void setup_lseek_lseek_p8b24_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9990144, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8b24_11_proc0
// static void setup_lseek_lseek_p8b24_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_13_0(void) {
//   int r = lseek(10, 9986048, SEEK_END);
//   expect_result("r", r, 9986048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_7_0
// static int test_lseek_lseek_p8b24_13_1(void) {
//   int r = lseek(11, 9986048, SEEK_CUR);
//   expect_result("r", r, 19968000);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_11_1
// static void setup_lseek_lseek_p8b24_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9990144, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8b24_11_proc0
// static void setup_lseek_lseek_p8b24_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b24_14_0(void) {
  int r = lseek(10, 31612928, SEEK_END);
  expect_result("r", r, 31612928);
  return xerrno(r);
}
static int test_lseek_lseek_p8b24_14_1(void) {
  int r = lseek(11, 31608832, SEEK_CUR);
  expect_result("r", r, 63225856);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b24_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31612928, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b24_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_15_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
static int test_lseek_lseek_p8b24_15_1(void) {
  int r = lseek(11, 31617024, SEEK_CUR);
  expect_result("r", r, 63234048);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b24_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_16_0(void) {
//   int r = lseek(10, 31612928, SEEK_END);
//   expect_result("r", r, 31612928);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_14_0
// static int test_lseek_lseek_p8b24_16_1(void) {
//   int r = lseek(11, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_15_1
// static void setup_lseek_lseek_p8b24_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_2_proc0
// static void setup_lseek_lseek_p8b24_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_17_0(void) {
//   int r = lseek(10, 31612928, SEEK_END);
//   expect_result("r", r, 31612928);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_14_0
static int test_lseek_lseek_p8b24_17_1(void) {
  int r = lseek(11, 31612928, SEEK_CUR);
  expect_result("r", r, 63229952);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b24_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31612928, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_18_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
// static int test_lseek_lseek_p8b24_18_1(void) {
//   int r = lseek(11, 9977856, SEEK_CUR);
//   expect_result("r", r, 19959808);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b24_10_1
// static void setup_lseek_lseek_p8b24_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8b4_19_proc0
// static void setup_lseek_lseek_p8b24_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b24_19_0(void) {
  int r = lseek(10, 28672, SEEK_END);
  expect_result("r", r, 53248);
  return xerrno(r);
}
static int test_lseek_lseek_p8b24_19_1(void) {
  int r = lseek(11, 28672, SEEK_CUR);
  expect_result("r", r, 57344);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b24_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
static void setup_lseek_lseek_p8b24_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b24_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_20_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_11_1
// static int test_lseek_lseek_p8b24_20_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p8b24_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p8b24_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8b24_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_21_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b24_21_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p8b24_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b24_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b24_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_21_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_22_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b24_22_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_11_1
// static void setup_lseek_lseek_p8b24_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8b24_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_22_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b24_23_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b24_23_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p8b24_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b24_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8b24_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b24_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b24_23_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b18_0_1(void) {
//   int r = lseek(11, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_1
// static void setup_lseek_lseek_p8b18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f10_0_common
static void setup_lseek_lseek_p8b18_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b18_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b18_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8b18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_2_0(void) {
//   int r = lseek(10, 7356416, SEEK_END);
//   expect_result("r", r, 7356416);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b38_6_0
// static int test_lseek_lseek_p8b18_2_1(void) {
//   int r = lseek(11, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_1_1
// static void setup_lseek_lseek_p8b18_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f10_0_common
// static void setup_lseek_lseek_p8b18_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_1_proc0
// static void setup_lseek_lseek_p8b18_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b18_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b18_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8b18_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_2_proc0
// static void setup_lseek_lseek_p8b18_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_4_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b18_4_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8b18_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_4_proc0
// static void setup_lseek_lseek_p8b18_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8b18_5_1(void) {
//   int r = lseek(11, -8192, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc6_1_1
// static void setup_lseek_lseek_p8b18_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b18_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_proc0
// static void setup_lseek_lseek_p8b18_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_6_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b18_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8b18_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8b18_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_7_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p8b18_7_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8b18_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8b18_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b18_8_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b18_8_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p8b18_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b18_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b18_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b18_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b18_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b10_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p8b10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f18_0_common
// static void setup_lseek_lseek_p8b10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8b10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b10_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b10_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p8b10_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b10_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_2_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b10_2_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p8b10_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_3_proc0
// static void setup_lseek_lseek_p8b10_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
static int test_lseek_lseek_p8b10_3_1(void) {
  int r = lseek(11, 31612928, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_common
// static void setup_lseek_lseek_p8b10_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_3_proc0
// static void setup_lseek_lseek_p8b10_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b10_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b10_4_0(void) {
  int r = lseek(10, 184320, SEEK_END);
  expect_result("r", r, 184320);
  return xerrno(r);
}
static int test_lseek_lseek_p8b10_4_1(void) {
  int r = lseek(11, 24576, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_common
// static void setup_lseek_lseek_p8b10_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_1_proc0
// static void setup_lseek_lseek_p8b10_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b10_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_5_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
static int test_lseek_lseek_p8b10_5_1(void) {
  int r = lseek(11, 163840, SEEK_END);
  expect_result("r", r, 163840);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8b10_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_6_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
// static int test_lseek_lseek_p8b10_6_1(void) {
//   int r = lseek(11, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_4_1
// static void setup_lseek_lseek_p8b10_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f3_0_proc0
// static void setup_lseek_lseek_p8b10_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_7_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b10_7_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p8b10_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8b10_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b10_8_0(void) {
  int r = lseek(10, 5066752, SEEK_END);
  expect_result("r", r, 5087232);
  return xerrno(r);
}
static int test_lseek_lseek_p8b10_8_1(void) {
  int r = lseek(11, 5062656, SEEK_END);
  expect_result("r", r, 5087232);
  return xerrno(r);
}
static void setup_lseek_lseek_p8b10_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8b10_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8b24_5_proc0
// static void setup_lseek_lseek_p8b10_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b10_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_9_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8b10_9_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p8b10_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p8b10_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_10_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p8b10_10_1(void) {
//   int r = lseek(11, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_4_1
// static void setup_lseek_lseek_p8b10_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_10_proc0
// static void setup_lseek_lseek_p8b10_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_11_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
static int test_lseek_lseek_p8b10_11_1(void) {
  int r = lseek(11, 5070848, SEEK_END);
  expect_result("r", r, 5070848);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b10_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5074944, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b10_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b10_12_0(void) {
  int r = lseek(10, 31596544, SEEK_END);
  expect_result("r", r, 31621120);
  return xerrno(r);
}
static int test_lseek_lseek_p8b10_12_1(void) {
  int r = lseek(11, 31592448, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
static void setup_lseek_lseek_p8b10_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31592448, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31596544, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b10_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_13_0(void) {
//   int r = lseek(10, 31596544, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b10_12_0
// static int test_lseek_lseek_p8b10_13_1(void) {
//   int r = lseek(11, 31592448, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b10_12_1
// static void setup_lseek_lseek_p8b10_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
static void setup_lseek_lseek_p8b10_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31592448, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31600640, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b10_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_14_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8b10_14_1(void) {
//   int r = lseek(11, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_7_1
// static void setup_lseek_lseek_p8b10_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b10_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_15_0(void) {
//   int r = lseek(10, 8192, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_21_0
// static int test_lseek_lseek_p8b10_15_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p8b10_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_15_proc0
// static void setup_lseek_lseek_p8b10_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_16_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8b10_16_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_9_1
// static void setup_lseek_lseek_p8b10_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b10_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p8b10_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_17_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b10_17_1(void) {
//   int r = lseek(11, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_15_1
// static void setup_lseek_lseek_p8b10_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b10_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_5_proc0
// static void setup_lseek_lseek_p8b10_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b10_18_0(void) {
  int r = lseek(10, 5058560, SEEK_END);
  expect_result("r", r, 5062656);
  return xerrno(r);
}
static int test_lseek_lseek_p8b10_18_1(void) {
  int r = lseek(11, 5062656, SEEK_END);
  expect_result("r", r, 5066752);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8b10_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5058560, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8b24_6_proc0
// static void setup_lseek_lseek_p8b10_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8b10_19_0(void) {
  int r = lseek(10, 36265984, SEEK_END);
  expect_result("r", r, 36270080);
  return xerrno(r);
}
static int test_lseek_lseek_p8b10_19_1(void) {
  int r = lseek(11, 36265984, SEEK_END);
  expect_result("r", r, 36270080);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8b10_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
static void setup_lseek_lseek_p8b10_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36265984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36265984, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b10_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_19_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b10_20_0(void) {
//   int r = lseek(10, 36270080, SEEK_END);
//   expect_result("r", r, 36270080);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_2_0
// static int test_lseek_lseek_p8b10_20_1(void) {
//   int r = lseek(10, 36270080, SEEK_END);
//   expect_result("r", r, 36270080);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b6_2_0
// static void setup_lseek_lseek_p8b10_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8b10_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b10_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b10_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b10_20_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b0_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p8b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b0_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p8b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b0_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b0_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_2_proc0
// static void setup_lseek_lseek_p8b0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_3_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p8b0_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p8b0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_4_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p8b0_4_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
static void setup_lseek_lseek_p8b0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 159744, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8b0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8b0_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_5_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p8b0_5_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_4_proc0
// static void setup_lseek_lseek_p8b0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_6_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8b0_6_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p8b0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f4_8_proc0
// static void setup_lseek_lseek_p8b0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_7_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8b0_7_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8b0_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8b0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8b0_8_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p8b0_8_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p8b0_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8b0_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8b0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8b0_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8b0_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8a_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8a_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p8a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8a_1_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8a_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p898_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p898_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p898_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p898_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p898_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p898_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p898_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p898_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p898_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p898_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p898_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p898_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p898_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p898_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p898_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p898_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p898_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_0_proc1
// static void setup_lseek_lseek_p898_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p898_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p898_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_4_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p898_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p898_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd10_7_proc1
// static void setup_lseek_lseek_p898_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p898_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p898_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_5_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p898_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p898_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd10_7_proc1
// static void setup_lseek_lseek_p898_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p898_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p898_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_6_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p898_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf18_0_common
// static void setup_lseek_lseek_p898_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd10_7_proc1
// static void setup_lseek_lseek_p898_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p898_6_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p898_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p898_7_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p898_7_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p898_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_p8f8_1_common
// static void setup_lseek_lseek_p898_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd10_7_proc1
// static void setup_lseek_lseek_p898_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p898_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p898_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p896_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p896_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p896_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p896_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p896_1_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p896_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p896_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p896_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p896_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p896_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p896_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p896_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_3_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p896_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p896_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p896_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p896_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p896_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_4_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p896_4_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p896_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p896_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa40_6_proc1
// static void setup_lseek_lseek_p896_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p896_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_5_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p896_5_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p896_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p896_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p896_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_6_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p896_6_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p896_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p896_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p896_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_7_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p896_7_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p896_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p896_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p896_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p896_8_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p896_8_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p896_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p896_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p896_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p896_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p896_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p894_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p894_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p894_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_1_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p894_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p894_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p894_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p894_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p894_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_3_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p894_3_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p894_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_4_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p894_4_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p894_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p894_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p894_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p894_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_5_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p894_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p894_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p894_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_6_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p894_6_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p894_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p894_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p894_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p894_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_7_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p894_7_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p894_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_common
// static void setup_lseek_lseek_p894_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p894_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p894_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_8_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p894_8_1(void) {
//   int r = lseek(10, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_3_0
// static void setup_lseek_lseek_p894_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p894_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p894_9_0(void) {
  int r = lseek(10, 31625216, SEEK_END);
  expect_result("r", r, 31625216);
  return xerrno(r);
}
// static int test_lseek_lseek_p894_9_1(void) {
//   int r = lseek(10, 31617024, SEEK_SET);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d4_1_1
// static void setup_lseek_lseek_p894_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p894_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p894_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_10_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
// static int test_lseek_lseek_p894_10_1(void) {
//   int r = lseek(10, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_6_1
// static void setup_lseek_lseek_p894_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p894_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p894_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_11_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p894_11_1(void) {
//   int r = lseek(10, 5062656, SEEK_SET);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f4_6_1
// static void setup_lseek_lseek_p894_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p894_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_4_proc0
// static void setup_lseek_lseek_p894_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_12_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p894_12_1(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static void setup_lseek_lseek_p894_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p894_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p894_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_13_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p894_13_1(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static void setup_lseek_lseek_p894_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p894_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
static void setup_lseek_lseek_p894_13_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p894_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p894_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_14_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p894_14_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p894_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p894_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p894_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_15_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p894_15_1(void) {
//   int r = lseek(10, 31621120, SEEK_SET);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_2_0
// static void setup_lseek_lseek_p894_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p894_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31625216, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p894_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p894_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_16_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static int test_lseek_lseek_p894_16_1(void) {
//   int r = lseek(10, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_3_0
// static void setup_lseek_lseek_p894_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p894_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p894_17_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
// static int test_lseek_lseek_p894_17_1(void) {
//   int r = lseek(10, 9981952, SEEK_SET);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_1
// static void setup_lseek_lseek_p894_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p894_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p894_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p894_18_0(void) {
  int r = lseek(10, 167936, SEEK_END);
  expect_result("r", r, 167936);
  return xerrno(r);
}
// static int test_lseek_lseek_p894_18_1(void) {
//   int r = lseek(10, 159744, SEEK_SET);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac6_3_0
// static void setup_lseek_lseek_p894_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p894_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p894_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 163840, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9a2_3_proc0
// static void setup_lseek_lseek_p894_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p894_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p893_0_1(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p926_0_1
// static void setup_lseek_lseek_p893_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p893_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p893_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p893_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_1_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p893_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p893_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p893_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p893_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_2_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p893_2_1(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p926_0_1
// static void setup_lseek_lseek_p893_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p893_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p893_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p893_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_3_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p893_3_1(void) {
//   int r = lseek(10, -31621120, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p926_0_1
// static void setup_lseek_lseek_p893_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p893_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p893_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p893_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p893_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p893_4_0(void) {
  int r = lseek(10, -28672, SEEK_END);
  expect_result("r", r, 0);
  return xerrno(r);
}
static int test_lseek_lseek_p893_4_1(void) {
  int r = lseek(10, -24576, SEEK_CUR);
  expect_result("r", r, -1);
  expect_errno(22);
  return xerrno(r);
}
// static void setup_lseek_lseek_p893_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_p893_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_proc0
// static void setup_lseek_lseek_p893_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_proc1
// static void setup_lseek_lseek_p893_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p893_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_5_0(void) {
//   int r = lseek(10, -8192, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_4_1
// static int test_lseek_lseek_p893_5_1(void) {
//   int r = lseek(10, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_6_1
// static void setup_lseek_lseek_p893_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p893_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p893_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p893_6_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p893_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p893_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_7_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p893_7_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p893_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p893_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p893_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p893_8_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p893_8_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p893_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p893_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p893_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p893_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p892_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 155648);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p924_0_1
// static void setup_lseek_lseek_p892_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p892_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p892_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_1_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p892_1_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9a4_0_1
// static void setup_lseek_lseek_p892_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p892_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p892_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p892_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p892_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p892_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p892_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p892_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_3_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static int test_lseek_lseek_p892_3_1(void) {
//   int r = lseek(10, 159744, SEEK_CUR);
//   expect_result("r", r, 319488);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p922_7_0
// static void setup_lseek_lseek_p892_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p892_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p892_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_4_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p892_4_1(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_8_1
// static void setup_lseek_lseek_p892_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p892_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p892_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_5_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p892_5_1(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_8_1
// static void setup_lseek_lseek_p892_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p892_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p892_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p892_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p892_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_6_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p892_6_1(void) {
//   int r = lseek(10, 159744, SEEK_CUR);
//   expect_result("r", r, 315392);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_7_1
// static void setup_lseek_lseek_p892_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p892_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p892_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_7_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p892_7_1(void) {
//   int r = lseek(10, 159744, SEEK_CUR);
//   expect_result("r", r, 315392);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_7_1
// static void setup_lseek_lseek_p892_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p892_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p892_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa40_6_proc1
// static void setup_lseek_lseek_p892_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p892_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_8_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p892_8_1(void) {
//   int r = lseek(10, 31617024, SEEK_CUR);
//   expect_result("r", r, 63234048);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_8_1
// static void setup_lseek_lseek_p892_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p892_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p892_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p892_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p892_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_9_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
static int test_lseek_lseek_p892_9_1(void) {
  int r = lseek(10, 31621120, SEEK_CUR);
  expect_result("r", r, 63238144);
  return xerrno(r);
}
// static void setup_lseek_lseek_p892_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31625216, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p894_15_proc0
// static void setup_lseek_lseek_p892_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p892_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p892_10_0(void) {
  int r = lseek(10, 41594880, SEEK_END);
  expect_result("r", r, 41594880);
  return xerrno(r);
}
static int test_lseek_lseek_p892_10_1(void) {
  int r = lseek(10, 41603072, SEEK_CUR);
  expect_result("r", r, 83202048);
  return xerrno(r);
}
// static void setup_lseek_lseek_p892_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
static void setup_lseek_lseek_p892_10_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 41598976, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p892_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_11_0(void) {
//   int r = lseek(10, 8192, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_21_0
// static int test_lseek_lseek_p892_11_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p892_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_12_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p892_12_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p892_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p892_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p892_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_13_0(void) {
//   int r = lseek(10, 5066752, SEEK_END);
//   expect_result("r", r, 5066752);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_16_0
// static int test_lseek_lseek_p892_13_1(void) {
//   int r = lseek(10, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_4_1
// static void setup_lseek_lseek_p892_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p892_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p892_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_14_0(void) {
//   int r = lseek(10, 31625216, SEEK_END);
//   expect_result("r", r, 31625216);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p894_9_0
// static int test_lseek_lseek_p892_14_1(void) {
//   int r = lseek(10, 31621120, SEEK_CUR);
//   expect_result("r", r, 63238144);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p892_9_1
// static void setup_lseek_lseek_p892_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p892_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p892_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_15_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p892_15_1(void) {
//   int r = lseek(10, 31621120, SEEK_CUR);
//   expect_result("r", r, 63238144);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p892_9_1
// static void setup_lseek_lseek_p892_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p892_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p892_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_16_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p892_16_1(void) {
//   int r = lseek(10, 5062656, SEEK_CUR);
//   expect_result("r", r, 10125312);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d2_4_1
// static void setup_lseek_lseek_p892_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_4_proc0
// static void setup_lseek_lseek_p892_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p892_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_17_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p892_17_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p892_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p892_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p892_18_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
static int test_lseek_lseek_p892_18_1(void) {
  int r = lseek(10, 9981952, SEEK_CUR);
  expect_result("r", r, 19963904);
  return xerrno(r);
}
// static void setup_lseek_lseek_p892_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p892_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p892_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p892_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p892_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8918_0_1(void) {
//   int r = lseek(10, -32768, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9e3_4_1
// static void setup_lseek_lseek_p8918_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f10_0_common
static void setup_lseek_lseek_p8918_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34263040, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_lseek_lseek_p8918_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36270080, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8918_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8918_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8918_1_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8918_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8918_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8918_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8918_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_2_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8918_2_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p8918_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8918_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p8918_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8918_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8918_3_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8918_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8918_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8918_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8918_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_4_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8918_4_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8918_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8918_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8918_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8918_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_5_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p8918_5_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8918_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8918_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8918_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8918_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8918_6_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static int test_lseek_lseek_p8918_6_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p8918_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8918_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8918_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8918_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8918_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8910_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p8910_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f18_0_common
// static void setup_lseek_lseek_p8910_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p8910_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8910_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8910_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p8910_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_2_0(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static int test_lseek_lseek_p8910_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p8910_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
static int test_lseek_lseek_p8910_3_1(void) {
  int r = lseek(10, 31612928, SEEK_END);
  expect_result("r", r, 31617024);
  return xerrno(r);
}
// static void setup_lseek_lseek_p8910_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_common
// static void setup_lseek_lseek_p8910_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8910_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p8910_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8910_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8910_4_0(void) {
  int r = lseek(10, 184320, SEEK_END);
  expect_result("r", r, 188416);
  return xerrno(r);
}
static int test_lseek_lseek_p8910_4_1(void) {
  int r = lseek(10, 24576, SEEK_END);
  expect_result("r", r, 32768);
  return xerrno(r);
}
static void setup_lseek_lseek_p8910_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_lseek_lseek_p8910_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8910_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d3_2_proc1
// static void setup_lseek_lseek_p8910_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8910_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_5_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static int test_lseek_lseek_p8910_5_1(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static void setup_lseek_lseek_p8910_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8910_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8910_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_6_0(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static int test_lseek_lseek_p8910_6_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static void setup_lseek_lseek_p8910_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8910_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_7_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p8910_7_1(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static void setup_lseek_lseek_p8910_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8910_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8910_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
static int test_lseek_lseek_p8910_8_0(void) {
  int r = lseek(10, 24576, SEEK_END);
  expect_result("r", r, 28672);
  return xerrno(r);
}
// static int test_lseek_lseek_p8910_8_1(void) {
//   int r = lseek(10, 20480, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_2_1
// static void setup_lseek_lseek_p8910_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_common
// static void setup_lseek_lseek_p8910_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p9e3_4_proc0
// static void setup_lseek_lseek_p8910_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d10_2_proc1
// static void setup_lseek_lseek_p8910_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p8910_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_9_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8910_9_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p8910_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8910_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8910_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_9_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_10_0(void) {
//   int r = lseek(10, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pa44_18_1
// static int test_lseek_lseek_p8910_10_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p8910_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8910_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8910_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_10_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_11_0(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static int test_lseek_lseek_p8910_11_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p8910_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p8910_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p8910_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_11_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_12_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac4_17_1
// static int test_lseek_lseek_p8910_12_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p8910_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p8910_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_12_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_13_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p8910_13_1(void) {
//   int r = lseek(10, 4096, SEEK_END);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p9624_18_1
// static void setup_lseek_lseek_p8910_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8910_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p8910_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_13_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_14_0(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static int test_lseek_lseek_p8910_14_1(void) {
//   int r = lseek(10, 5062656, SEEK_END);
//   expect_result("r", r, 5062656);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8f10_8_1
// static void setup_lseek_lseek_p8910_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_6_proc0
// static void setup_lseek_lseek_p8910_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_4_proc0
// static void setup_lseek_lseek_p8910_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_14_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_15_0(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
// static int test_lseek_lseek_p8910_15_1(void) {
//   int r = lseek(10, 9981952, SEEK_END);
//   expect_result("r", r, 9981952);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_20_0
// static void setup_lseek_lseek_p8910_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p8910_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p8910_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_15_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_16_0(void) {
//   int r = lseek(10, 8192, SEEK_END);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b4_21_0
// static int test_lseek_lseek_p8910_16_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p8910_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p8910_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p8910_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_16_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_17_0(void) {
//   int r = lseek(10, 31625216, SEEK_END);
//   expect_result("r", r, 31625216);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p894_9_0
// static int test_lseek_lseek_p8910_17_1(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static void setup_lseek_lseek_p8910_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p8910_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8910_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p8910_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_17_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p8910_18_0(void) {
//   int r = lseek(10, 31621120, SEEK_END);
//   expect_result("r", r, 31621120);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_7_1
// static int test_lseek_lseek_p8910_18_1(void) {
//   int r = lseek(10, 31625216, SEEK_END);
//   expect_result("r", r, 31625216);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p894_9_0
// static void setup_lseek_lseek_p8910_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
static void setup_lseek_lseek_p8910_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31629312, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p8910_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p8910_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p8910_18_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p890_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p890_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p890_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p890_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p890_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_1_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p890_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p890_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p890_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p890_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p890_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_2_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p890_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p890_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p890_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p890_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p890_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_3_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p890_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p890_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p890_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p890_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p890_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_4_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p890_4_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p890_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p890_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p894_13_proc1
// static void setup_lseek_lseek_p890_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p890_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_5_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p890_5_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p890_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p890_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p890_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p890_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p890_6_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p890_6_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p890_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p890_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p890_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p890_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p890_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p88_0_0(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static int test_lseek_lseek_p88_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p88_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p88_1_0(void) {
//   int r = lseek(10, 31617024, SEEK_END);
//   expect_result("r", r, 31617024);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8d10_5_1
// static int test_lseek_lseek_p88_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p88_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p88_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p87_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p87_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p87_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p87_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p87_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p87_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p87_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p87_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p87_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p87_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_p87_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_3_proc0
// static void setup_lseek_lseek_p87_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p87_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p87_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p87_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p87_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p87_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p87_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p87_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p87_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p87_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p87_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p87_3_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p87_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_p87_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pae_6_proc0
// static void setup_lseek_lseek_p87_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p87_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p87_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p86c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p86c_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p86c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p86c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_proc0
// static void setup_lseek_lseek_p86c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p86c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p86c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p86c_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p86c_1_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p86c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_p86c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_1_proc0
// static void setup_lseek_lseek_p86c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p86c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p86c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p86c_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p86c_2_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p86c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p86c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p86c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p86c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p86c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p86c_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p86c_3_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p86c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p86c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p86c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p86c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p86c_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p868_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p868_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p868_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p868_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_2_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p868_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p868_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p868_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p868_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_3_1(void) {
//   int r = lseek(11, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_17_1
// static void setup_lseek_lseek_p868_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p868_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p868_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_4_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p868_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p868_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_5_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p868_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p868_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pad0_13_proc0
// static void setup_lseek_lseek_p868_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p868_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_6_1(void) {
//   int r = lseek(11, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_4_1
// static void setup_lseek_lseek_p868_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p868_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_7_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p868_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p868_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p868_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p868_8_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p868_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p868_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p868_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p868_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p868_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p866_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p866_0_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p866_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p866_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p866_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p866_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p866_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p866_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p866_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p866_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p866_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p866_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p866_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p866_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p866_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p866_2_1(void) {
//   int r = lseek(11, -8192, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbcc_1_1
// static void setup_lseek_lseek_p866_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p866_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p866_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p866_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p866_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p866_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p866_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p866_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p866_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p866_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p866_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p866_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_0_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p864_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p864_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p864_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_1_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_1_1
// static void setup_lseek_lseek_p864_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_p864_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_1_proc0
// static void setup_lseek_lseek_p864_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p864_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_2_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p864_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_common
// static void setup_lseek_lseek_p864_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p864_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p864_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_3_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p864_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p864_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p864_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_4_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p864_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p864_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_4_proc0
// static void setup_lseek_lseek_p864_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_5_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_0_1
// static void setup_lseek_lseek_p864_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p864_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p864_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_6_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p864_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p864_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p864_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_7_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc8_7_1
// static void setup_lseek_lseek_p864_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p864_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p864_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p864_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p864_8_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p864_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p864_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p864_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p864_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p864_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p863_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p863_0_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p863_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p863_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p863_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p863_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p863_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p863_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p863_1_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p863_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_p863_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p863_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p863_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p863_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p863_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p863_2_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p863_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p863_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p863_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p863_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p863_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p863_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p863_3_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p863_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p863_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5066752, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_5_proc0
// static void setup_lseek_lseek_p863_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p863_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p863_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p862_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p862_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_0_proc0
// static void setup_lseek_lseek_p862_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p862_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_p862_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_1_proc0
// static void setup_lseek_lseek_p862_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p862_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p862_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p862_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p862_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_3_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p862_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p862_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p862_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p862_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_4_1(void) {
//   int r = lseek(11, 163840, SEEK_END);
//   expect_result("r", r, 163840);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_p8b10_5_1
// static void setup_lseek_lseek_p862_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p862_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac6_3_proc0
// static void setup_lseek_lseek_p862_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_5_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p862_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p862_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p967_3_proc0
// static void setup_lseek_lseek_p862_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_6_1(void) {
//   int r = lseek(11, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_11_1
// static void setup_lseek_lseek_p862_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p862_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_11_proc0
// static void setup_lseek_lseek_p862_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_7_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_7_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p862_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p862_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p862_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_7_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p862_8_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p862_8_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbc4_3_1
// static void setup_lseek_lseek_p862_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_3_common
// static void setup_lseek_lseek_p862_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p862_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p862_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p862_8_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p860_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p860_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p860_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p860_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_5_proc0
// static void setup_lseek_lseek_p860_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p860_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p860_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p860_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p860_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p860_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p860_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_3_proc0
// static void setup_lseek_lseek_p860_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p860_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p860_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p860_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p860_2_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p860_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p860_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_5_proc0
// static void setup_lseek_lseek_p860_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p860_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p860_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p860_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p860_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p860_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p860_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p860_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p860_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p860_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p84_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p84_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
// static void setup_lseek_lseek_p84_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p84_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p84_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p84_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p84_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p83_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p83_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p83_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p83_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p83_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p83_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p83_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p83_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p83_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p83_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_p83_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p83_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p83_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p83_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p83_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p83_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p83_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p83_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p83_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p83_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p83_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p83_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p83_3_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p83_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_9_common
// static void setup_lseek_lseek_p83_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pd4_2_proc1
// static void setup_lseek_lseek_p83_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p83_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_9_final
// static void setup_lseek_lseek_p83_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p82c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p82c_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p82c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p82c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p82c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p82c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p82c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p82c_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p82c_1_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p82c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p82c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p82c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p82c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p82c_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p82c_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p82c_2_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p82c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p82c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p82c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p82c_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p82c_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p828_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p828_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p828_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p828_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p828_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_1_1(void) {
//   int r = lseek(10, 8192, SEEK_SET);
//   expect_result("r", r, 8192);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pad0_4_0
// static void setup_lseek_lseek_p828_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p828_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p828_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p828_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p828_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_2_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p828_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p828_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p828_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p828_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p828_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_3_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p828_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p828_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p828_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p828_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p828_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_4_1(void) {
//   int r = lseek(10, 4096, SEEK_SET);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pbd0_5_1
// static void setup_lseek_lseek_p828_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p828_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p828_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p828_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p828_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_5_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p828_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p828_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p828_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p828_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p828_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p828_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p828_6_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p828_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p828_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p828_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p828_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p828_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p826_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p826_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p826_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p826_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p826_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p826_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p826_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p826_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p826_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p826_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p826_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p826_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p826_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p826_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p826_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p826_2_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p826_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p826_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p826_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p826_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p826_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p824_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p824_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p824_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p824_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p824_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_1_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p824_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_1_common
// static void setup_lseek_lseek_p824_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p824_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_1_proc1
// static void setup_lseek_lseek_p824_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p824_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_2_1(void) {
//   int r = lseek(10, -7360512, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb48_2_1
// static void setup_lseek_lseek_p824_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p824_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7356416, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc0_3_proc0
// static void setup_lseek_lseek_p824_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7360512, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb48_2_proc1
// static void setup_lseek_lseek_p824_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p824_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_3_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_1_1
// static void setup_lseek_lseek_p824_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p824_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p824_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p824_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p824_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_4_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p824_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p824_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p824_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p824_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p824_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_5_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p824_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd0_3_common
// static void setup_lseek_lseek_p824_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p824_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p824_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p824_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p824_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p824_6_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p824_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p824_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p824_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p824_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p824_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p823_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p823_0_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p823_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p823_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p823_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p823_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p823_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p823_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p823_1_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p823_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p823_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p823_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31621120, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8d4_2_proc1
// static void setup_lseek_lseek_p823_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p823_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p823_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p823_2_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p823_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc6_1_common
// static void setup_lseek_lseek_p823_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p823_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_1_proc1
// static void setup_lseek_lseek_p823_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p823_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p822_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p822_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p822_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p822_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p822_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p822_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p822_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p822_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p822_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p822_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_2_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p822_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p822_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p822_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p822_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p822_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_3_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_3_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p822_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p822_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p822_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pa44_4_proc1
// static void setup_lseek_lseek_p822_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p822_3_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_4_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_4_1(void) {
//   int r = lseek(10, 159744, SEEK_END);
//   expect_result("r", r, 159744);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pb44_4_1
// static void setup_lseek_lseek_p822_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p822_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc0
// static void setup_lseek_lseek_p822_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 159744, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb46_2_proc1
// static void setup_lseek_lseek_p822_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p822_4_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_5_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_5_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p822_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc4_6_common
// static void setup_lseek_lseek_p822_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pac4_19_proc0
// static void setup_lseek_lseek_p822_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p822_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbc6_1_final
// static void setup_lseek_lseek_p822_5_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p822_6_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p822_6_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p822_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p822_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p822_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p822_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p822_6_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p820_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p820_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p820_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p820_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p820_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p820_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p820_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p820_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p820_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p820_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p8f6_3_common
// static void setup_lseek_lseek_p820_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p820_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_2_proc1
// static void setup_lseek_lseek_p820_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_lseek_lseek_pbd8_1_final
// static void setup_lseek_lseek_p820_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p820_2_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p820_2_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p820_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_2_common
// static void setup_lseek_lseek_p820_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p820_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_9_proc0
// static void setup_lseek_lseek_p820_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p820_2_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p80_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static int test_lseek_lseek_p80_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p80_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p7_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p7_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p7_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_p7_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_p7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p7_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p7_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p7_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p7_1_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p7_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
static void setup_lseek_lseek_p7_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_lseek_lseek_p7_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p7_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p7_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p6c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p6c_0_1(void) {
//   int r = lseek(11, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf6_0_1
// static void setup_lseek_lseek_p6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
static void setup_lseek_lseek_p6c_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7356416, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p6c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p6c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p68_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p68_0_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
static void setup_lseek_lseek_p68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p68_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p68_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p68_1_1(void) {
//   int r = lseek(11, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf4_0_1
// static void setup_lseek_lseek_p68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
static void setup_lseek_lseek_p68_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_lseek_lseek_p68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p68_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p68_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p66_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p66_0_1(void) {
//   int r = lseek(11, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf3_0_1
// static void setup_lseek_lseek_p66_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p66_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_1_proc0
// static void setup_lseek_lseek_p66_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p66_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p66_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p64_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p64_0_1(void) {
//   int r = lseek(11, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf2_0_1
// static void setup_lseek_lseek_p64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_1_proc0
// static void setup_lseek_lseek_p64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p64_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p64_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p64_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p64_1_1(void) {
//   int r = lseek(11, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pac90_5_1
// static void setup_lseek_lseek_p64_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p64_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_1_proc0
// static void setup_lseek_lseek_p64_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p64_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p64_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p63_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p63_0_1(void) {
//   int r = lseek(11, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf18_0_1
// static void setup_lseek_lseek_p63_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p63_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_0_proc0
// static void setup_lseek_lseek_p63_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p63_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p63_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p62_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p62_0_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_0_1
// static void setup_lseek_lseek_p62_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p62_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_0_proc0
// static void setup_lseek_lseek_p62_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p62_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p62_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p62_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p62_1_1(void) {
//   int r = lseek(11, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf10_3_1
// static void setup_lseek_lseek_p62_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p62_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_1_proc0
// static void setup_lseek_lseek_p62_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p62_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p62_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p60_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p60_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_1
// static void setup_lseek_lseek_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_p68_1_proc0
// static void setup_lseek_lseek_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p60_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p60_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p4_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p4_0_1(void) {
//   int r = lseek(11, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pe_0_1
static void setup_lseek_lseek_p4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_lseek_lseek_p4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p4_0_final(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal
// static void setup_lseek_lseek_p4_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p4_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p4_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_lseek_p4_0_common
// static void setup_lseek_lseek_p4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p4_1_final(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal
// static void setup_lseek_lseek_p4_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p3_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p3_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p3_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p3_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p3_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_16_proc0
// static void setup_lseek_lseek_p3_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p3_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p3_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p3_1_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p3_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_lseek_lseek_pf8_0_common
// static void setup_lseek_lseek_p3_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_0_proc1
// static void setup_lseek_lseek_p3_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_lseek_lseek_pf8_17_proc0
// static void setup_lseek_lseek_p3_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_final
// static void setup_lseek_lseek_p3_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_lseek_lseek_pf8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p2c_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p2c_0_1(void) {
//   int r = lseek(10, -4096, SEEK_SET);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd6_0_1
// static void setup_lseek_lseek_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_0_common
// static void setup_lseek_lseek_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 9981952, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb58_0_proc1
// static void setup_lseek_lseek_p2c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p2c_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p28_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p28_0_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p28_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p28_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p28_1_1(void) {
//   int r = lseek(10, 0, SEEK_SET);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd4_0_1
// static void setup_lseek_lseek_p28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p28_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p28_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p28_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p28_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p26_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p26_0_1(void) {
//   int r = lseek(10, -4096, SEEK_CUR);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd3_0_1
// static void setup_lseek_lseek_p26_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p26_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p26_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p26_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p26_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p24_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p24_0_1(void) {
//   int r = lseek(10, 0, SEEK_CUR);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_0_1
// static void setup_lseek_lseek_p24_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_6_common
// static void setup_lseek_lseek_p24_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p24_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p24_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p24_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p24_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p24_1_1(void) {
//   int r = lseek(10, 4096, SEEK_CUR);
//   expect_result("r", r, 4096);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd2_6_1
// static void setup_lseek_lseek_p24_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p24_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p24_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p24_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p24_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p23_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p23_0_1(void) {
//   int r = lseek(10, -4096, SEEK_END);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd18_0_1
// static void setup_lseek_lseek_p23_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p23_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p23_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p23_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p23_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p22_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p22_0_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_0_1
// static void setup_lseek_lseek_p22_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p22_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p22_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pb50_0_proc1
// static void setup_lseek_lseek_p22_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p22_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p22_1_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p22_1_1(void) {
//   int r = lseek(10, 0, SEEK_END);
//   expect_result("r", r, 24576);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pd10_3_1
// static void setup_lseek_lseek_p22_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbc8_2_common
// static void setup_lseek_lseek_p22_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p22_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p22_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p22_1_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p20_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p20_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(22);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pf8_0_0
// static void setup_lseek_lseek_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_common
// static void setup_lseek_lseek_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_lseek_lseek_pbd8_4_proc0
// static void setup_lseek_lseek_p20_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_lseek_lseek_pbd8_0_final
// static void setup_lseek_lseek_p20_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

/*
 * calls: lseek lseek
 */
// static int test_lseek_lseek_p0_0_0(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static int test_lseek_lseek_p0_0_1(void) {
//   int r = lseek(10, 0, 999);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_lseek_lseek_pc_0_1
// static void setup_lseek_lseek_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_lseek_lseek_p4_0_common
// static void setup_lseek_lseek_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_lseek_lseek_pbd8_0_proc1
// static void setup_lseek_lseek_p0_0_final(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal
// static void setup_lseek_lseek_p0_0_procfinal(void) {
//   
// }
// ^ See setup_lseek_lseek_pbd8_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-lseek_lseek_pf8_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_1",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pf8_1_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_2",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pf8_1_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_3",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pf8_3_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_4",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pf8_4_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_5",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pf8_5_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_6",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pf8_3_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_7",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pf8_5_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_8",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pf8_4_proc0 }, { &setup_lseek_lseek_pf8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_9",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_10",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_10_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_11",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_11_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_12",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_11_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_13",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_10_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_14",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_14_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_15",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_14_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_16",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf8_17",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf6_0",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf6_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf6_1",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf6_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf6_2",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf6_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf6_3",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf6_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_2",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_4",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_5",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_5_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf4_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf3_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf3_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf3_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf3_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_1",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf2_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_2",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf2_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_3",
    &setup_lseek_lseek_pf2_3_common,
    { { &setup_lseek_lseek_pf4_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_4",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf2_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_5",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf2_5_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf4_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf2_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf4_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf18_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf4_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf18_1",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf4_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf18_2",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf4_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf18_3",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf4_5_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf4_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_1",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf4_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_2",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf4_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_3",
    &setup_lseek_lseek_pf10_3_common,
    { { &setup_lseek_lseek_pf4_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_4",
    &setup_lseek_lseek_pf10_4_common,
    { { &setup_lseek_lseek_pf4_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_5",
    &setup_lseek_lseek_pf10_3_common,
    { { &setup_lseek_lseek_pf4_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_6",
    &setup_lseek_lseek_pf10_4_common,
    { { &setup_lseek_lseek_pf4_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf10_7",
    &setup_lseek_lseek_pf10_7_common,
    { { &setup_lseek_lseek_pf10_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf0_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf4_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf0_1",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf4_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf0_2",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf4_7_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pf0_3",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf4_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pe_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pe_1",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_1",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pd8_1_proc0 }, { &setup_lseek_lseek_pd8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_2",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_3",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pd8_1_proc0 }, { &setup_lseek_lseek_pd8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_4",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pd8_1_proc0 }, { &setup_lseek_lseek_pd8_4_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_5",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_6",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pd8_6_proc0 }, { &setup_lseek_lseek_pd8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_7",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_8",
    &setup_lseek_lseek_pf8_2_common,
    { { &setup_lseek_lseek_pd8_6_proc0 }, { &setup_lseek_lseek_pd8_4_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_2_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_9",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_10",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_11",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pd8_1_proc0 }, { &setup_lseek_lseek_pd8_4_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_12",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_13",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pd8_6_proc0 }, { &setup_lseek_lseek_pd8_1_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_14",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd8_15",
    &setup_lseek_lseek_pf8_1_common,
    { { &setup_lseek_lseek_pd8_6_proc0 }, { &setup_lseek_lseek_pd8_4_proc1 } },
    &setup_lseek_lseek_pf8_1_procfinal,
    &setup_lseek_lseek_pf8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd6_0",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd6_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd6_1",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd6_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd6_2",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd6_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd6_3",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd6_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_4",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_5",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd4_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd3_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd3_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd3_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd3_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_1",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd2_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_2",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd2_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_3",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd2_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_4",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_5",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd2_7",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd18_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd18_1",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd18_2",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd18_3",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_1",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_2",
    &setup_lseek_lseek_pf18_1_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_1_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_3",
    &setup_lseek_lseek_pf10_3_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_4",
    &setup_lseek_lseek_pf10_4_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_5",
    &setup_lseek_lseek_pf10_3_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_6",
    &setup_lseek_lseek_pf10_4_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf18_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd10_7",
    &setup_lseek_lseek_pf10_7_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd10_7_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_7_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd0_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd0_1",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd0_2",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_2_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pd0_3",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pd4_3_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pc_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_16_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pc_1",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_17_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbe_0",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pbe_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbe_1",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pbe_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbe_2",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pbe_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbe_3",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pbe_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_1",
    &setup_lseek_lseek_pbd8_1_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd8_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd8_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_7",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_7_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbd0_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_2",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbcc_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbcc_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_5",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc8_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd8_4_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd8_4_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc6_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_3",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_4",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_5",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_6",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_7",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_9",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_10",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbc4_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc4_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc0_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc0_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbc0_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc0_2",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pbc0_3",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb8_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb6_0",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pb6_0_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb6_1",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pb6_0_proc0 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb6_2",
    &setup_lseek_lseek_pf6_0_common,
    { { &setup_lseek_lseek_pb6_0_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb6_3",
    &setup_lseek_lseek_pf6_1_common,
    { { &setup_lseek_lseek_pb6_0_proc0 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb58_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb58_1",
    &setup_lseek_lseek_pbd8_1_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb58_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb58_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd8_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb58_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_3",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb50_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb4c_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb4c_1",
    &setup_lseek_lseek_pbd8_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb4c_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb4c_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd8_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb4c_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb48_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_5",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb48_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb46_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb46_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb46_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb46_3",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pb46_3_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb46_4",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pb46_4_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_1",
    &setup_lseek_lseek_pb44_1_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_3",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_5",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_7",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb44_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pb44_8_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb40_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb40_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb40_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb40_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pb0_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd6_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_2",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_4",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_5",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pae_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_4",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_7",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad8_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_1",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pad0_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_8",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_13",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_17_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pad0_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_19",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pad0_20",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_2",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pace_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_7",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pace_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pac90_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac90_2_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_8",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_12",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_14_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_17_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_15_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pac90_16_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_18_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_19",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac90_20",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_5",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_6",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_7_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac6_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_2",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_3",
    &setup_lseek_lseek_pac4_3_common,
    { { &setup_lseek_lseek_pac4_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_5",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_6",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_7",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_8",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pac4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_9",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_10",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_11",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_12",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_13",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_14",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_15",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_16",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_17",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_18",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pac4_18_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_19",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac90_2_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_20",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_21",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_22",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_22_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac4_23",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pac4_23_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_3",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_7",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pac0_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa8_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa8_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_4",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_5",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa6_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa58_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pad0_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_9",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_11",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_12",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa50_13_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pad0_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa50_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa4c_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_9",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_10",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa48_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pa48_18_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pa48_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_4",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa46_6",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_3",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_4",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_5",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_6",
    &setup_lseek_lseek_pac4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_3_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_8",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_9",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_10",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_11",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_12",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_13",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_14",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pa44_14_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_3_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_16",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_17",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pad0_4_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa44_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_0, 0, "lseek" },
      { &test_lseek_lseek_pa44_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_2",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbd0_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa40_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pa40_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa0_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_pa0_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd4_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9f_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9f_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9f_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9f_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9ec_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ec_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9ea_7_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ea_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_p9e6_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e6_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9ea_7_0, 0, "lseek" },
      { &test_lseek_lseek_p9e5_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_5",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_18_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_7",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_8",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e5_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_0",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_1",
    &setup_lseek_lseek_p9e3_1_common,
    { { &setup_lseek_lseek_p9e3_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_p9e3_1_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_2",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9e3_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_1_0, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_4",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e3_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_1",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_2",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_3",
    &setup_lseek_lseek_pac4_3_common,
    { { &setup_lseek_lseek_p9e28_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_4",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_5",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_6",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_7",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_8",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pac6_7_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e28_8_0, 0, "lseek" },
      { &test_lseek_lseek_p9e28_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e28_9_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_10",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e28_11",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e0_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e0_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e0_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9e0_3",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9c_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9b_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9b_1",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9b_2",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9b_3",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ac_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ac_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9ac_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ac_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ac_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9ac_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a8_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a6_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a6_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a6_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a6_3",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a6_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_1",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9ea_7_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a4_7",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a3_0",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a3_1",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_p9a3_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_1_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a3_2",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9a3_2_proc0 }, { &setup_lseek_lseek_p9a3_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9a3_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a3_3",
    &setup_lseek_lseek_p9e3_1_common,
    { { &setup_lseek_lseek_p9a3_2_proc0 }, { &setup_lseek_lseek_p9a3_3_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_p9e3_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a3_4",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_p9e3_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9a3_4_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_1",
    &setup_lseek_lseek_p9e3_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_2",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p9a2_3_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9a2_3_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_4",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p9a2_5_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9a2_5_0, 0, "lseek" },
      { &test_lseek_lseek_p9a2_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_6",
    &setup_lseek_lseek_p9a2_6_common,
    { { &setup_lseek_lseek_p9a2_6_proc0 }, { &setup_lseek_lseek_p9a2_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_p9a3_4_0, 0, "lseek" },
      { &test_lseek_lseek_p9a2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_7",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a2_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a0_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a0_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbcc_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9a0_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p98_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd3_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_1",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_2",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_3",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_4",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_5",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p97_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_4",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p96c_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p9690_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9690_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_7",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_8",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_10",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_11",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_p9690_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9690_11_0, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa48_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_19",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pad0_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9690_20",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_1",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_p967_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p967_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_p967_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p967_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p967_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p967_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p967_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p967_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p964c_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_1",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_p964c_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p964c_2_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_5_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_7",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_10",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_11",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_2_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_19",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_5_0, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p964c_20",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_1",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_2",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pad8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_4",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_6",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_9",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p963_11",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_0",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_1",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_2",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9624_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_2_0, 0, "lseek" },
      { &test_lseek_lseek_p9624_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pad8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_4",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_5",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_6",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_7",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_8",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_9",
    &setup_lseek_lseek_pac4_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_10",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_11",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_12",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_13",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_p9624_13_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_14",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_14_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_15_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_16",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pac6_7_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_16_0, 0, "lseek" },
      { &test_lseek_lseek_p9624_16_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_17",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_18_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_19",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_20",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_21",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_22",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_5_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p9624_23",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_3",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_4",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_7",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_p9e28_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p960_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p94_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p94_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_0",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_1",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_2",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_3",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_4",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_5",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_6",
    &setup_lseek_lseek_pf4_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p93_7",
    &setup_lseek_lseek_pf4_1_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p92c_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p9a2_3_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p928_3_0, 0, "lseek" },
      { &test_lseek_lseek_p928_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_8",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_9",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_10",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_11",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_5_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_2_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p928_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p926_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_1",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p926_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_0",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p924_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_2_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_7",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9690_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_8",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_9",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_10",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_11",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_12",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_13",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_14",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_15",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_16",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_5_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_17",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p924_17_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p924_18",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_3_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p923_1_0, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_4",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_5",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p923_8",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_0",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_1",
    &setup_lseek_lseek_p9e3_1_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_2",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p9a2_3_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p928_3_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_5",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_1_1, 0, "lseek" },
      { &test_lseek_lseek_pa44_14_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_6",
    &setup_lseek_lseek_pa44_14_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pa44_14_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p922_7_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_8",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pa40_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_p922_7_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_9",
    &setup_lseek_lseek_p9e3_1_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_10",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc8_11_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_11",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb48_8_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_12",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_p922_12_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_13",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_p922_13_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_14",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_15",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_16",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_17",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p964c_2_0, 0, "lseek" },
      { &test_lseek_lseek_pac4_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p922_18",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_p922_13_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_3_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p920_6",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pa40_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p90_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p90_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd2_6_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f8_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f8_1",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f8_2",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f8_3",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_3",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc6_2_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f6_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_5",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8f4_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f4_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f3_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_1",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p8f3_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_4_1, 0, "lseek" },
      { &test_lseek_lseek_p8f3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p8f3_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_6_1, 0, "lseek" },
      { &test_lseek_lseek_p8f3_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_3",
    &setup_lseek_lseek_p8f3_3_common,
    { { &setup_lseek_lseek_p9e3_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pac6_6_1, 0, "lseek" },
      { &test_lseek_lseek_p8f3_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p8f3_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f3_4_0, 0, "lseek" },
      { &test_lseek_lseek_p8f3_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_4_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f3_6",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9e3_4_1, 0, "lseek" },
      { &test_lseek_lseek_p9a3_4_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p964c_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f2_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f2_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f3_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f2_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_8",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8f4_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f2_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f2_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f2_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f2_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f2_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_0",
    &setup_lseek_lseek_p8f18_0_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc6_2_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f18_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_0",
    &setup_lseek_lseek_p8f10_0_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_3",
    &setup_lseek_lseek_p8f18_0_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f3_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f10_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f10_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f10_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f10_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f0_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f0_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f0_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8f0_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8e_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d8_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d8_1",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d8_2",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d8_3",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d6_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d6_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d6_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d6_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d6_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd8_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d4_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d4_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_3",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pb46_3_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d4_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d4_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d3_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d3_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p9e3_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d3_2",
    &setup_lseek_lseek_p8f3_3_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_p8d3_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pac6_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d3_3",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_p9e3_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac6_6_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d3_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_5",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pb46_3_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pa48_18_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb48_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_7_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d2_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d18_0",
    &setup_lseek_lseek_p8f18_0_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d18_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d18_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d18_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d18_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_4_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_0",
    &setup_lseek_lseek_p8f10_0_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9a2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_2",
    &setup_lseek_lseek_p8d10_2_common,
    { { &setup_lseek_lseek_p8d10_2_proc0 }, { &setup_lseek_lseek_p8d10_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d10_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_p8d10_3_proc0 }, { &setup_lseek_lseek_p8d10_3_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f3_4_0, 0, "lseek" },
      { &test_lseek_lseek_p8d10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pa44_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_p8d10_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d10_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d0_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d0_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8d0_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8c_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd18_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_1",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pae_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_2",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_3",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_p8b8_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_4",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_p8b8_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_5",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_p8b8_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_6",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pae_2_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b8_7",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_p8b8_4_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b6_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b6_2_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_3",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b6_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b6_2_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_5",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_6",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_p8f6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b6_7_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_9",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_10",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b6_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_5",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b4_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_6",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b4_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_7",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_10",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b4_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_11_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_12",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p9690_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_13",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbc4_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_13_0, 0, "lseek" },
      { &test_lseek_lseek_p8f4_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_14",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_15",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_18_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_16",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f3_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8f4_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_17",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_19",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_p8b4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_19_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_19_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_20",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_20_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_21",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_21_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_22",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b4_23",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p967_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_3",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b38_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b6_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b38_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b38_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b6_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b38_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_5",
    &setup_lseek_lseek_p8b38_5_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b38_5_0, 0, "lseek" },
      { &test_lseek_lseek_p8b38_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b38_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b38_6_0, 0, "lseek" },
      { &test_lseek_lseek_p8b38_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_7",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_9",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b38_11",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p964c_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_p964c_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_p8b24_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8f2_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_5",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b24_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8f2_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b24_6_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_21_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_9",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b24_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b24_9_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_12",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b6_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_13",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b6_7_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_14",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b24_14_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b24_14_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_14_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p8b24_15_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_16",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b24_14_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_15_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_17",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b24_17_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b24_14_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_10_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_19",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p8b24_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b24_19_0, 0, "lseek" },
      { &test_lseek_lseek_p8b24_19_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_20",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_11_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_21",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_22",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pbc8_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b24_23",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_0",
    &setup_lseek_lseek_p8f10_0_common,
    { { &setup_lseek_lseek_p8b18_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_2",
    &setup_lseek_lseek_p8f10_0_common,
    { { &setup_lseek_lseek_pbc0_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b38_6_0, 0, "lseek" },
      { &test_lseek_lseek_p9e3_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_5",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pbc6_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b18_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_0",
    &setup_lseek_lseek_p8f18_0_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_3",
    &setup_lseek_lseek_p8d10_2_common,
    { { &setup_lseek_lseek_pac4_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p8b10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_4",
    &setup_lseek_lseek_p8d10_2_common,
    { { &setup_lseek_lseek_p9e3_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b10_4_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_p8b10_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f3_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8f10_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_8",
    &setup_lseek_lseek_p8b10_8_common,
    { { &setup_lseek_lseek_p8b24_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8b10_8_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_8_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_10_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_p8f10_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b10_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_12",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p8b10_12_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b10_12_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_12_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_13",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p8b10_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b10_12_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_12_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_14",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_15_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_21_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_16",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_9_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_17",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pad0_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_15_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_18",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_p8b24_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b10_18_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_18_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_19",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_p8b10_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b10_19_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_19_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b10_20",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8b10_20_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b6_2_0, 0, "lseek" },
      { &test_lseek_lseek_p8b6_2_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_2_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8b0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f4_8_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8b0_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8a_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8a_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_0",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_1",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_2",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_3",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd4_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_4",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd10_7_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_5",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd10_7_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_6",
    &setup_lseek_lseek_pf18_0_common,
    { { &setup_lseek_lseek_pd10_7_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p898_7",
    &setup_lseek_lseek_p8f8_1_common,
    { { &setup_lseek_lseek_pd10_7_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_3",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pa40_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_5",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p896_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_6",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_7",
    &setup_lseek_lseek_pbd8_1_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_3_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p894_9_0, 0, "lseek" },
      { &test_lseek_lseek_p8d4_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8f4_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pb46_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_p8f4_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_12",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_13",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p894_13_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_14",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p894_15_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_2_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_16",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_pac6_3_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_17",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_20_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p894_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_p9a2_3_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p894_18_0, 0, "lseek" },
      { &test_lseek_lseek_pac6_3_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p926_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p926_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_3",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p926_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_4",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_p8d10_2_proc0 }, { &setup_lseek_lseek_p8d10_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p893_4_0, 0, "lseek" },
      { &test_lseek_lseek_p893_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_5",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_4_1, 0, "lseek" },
      { &test_lseek_lseek_pbcc_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_6",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p893_8",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p924_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_p9a4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_p922_7_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_5",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_7_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_7",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pa40_6_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_7_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_8",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_9",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p894_15_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p892_9_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_p892_10_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p892_10_0, 0, "lseek" },
      { &test_lseek_lseek_p892_10_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_21_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_12",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_13",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_16_0, 0, "lseek" },
      { &test_lseek_lseek_p8d2_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_14",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p894_9_0, 0, "lseek" },
      { &test_lseek_lseek_p892_9_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p892_9_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_16",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_4_proc0 }, { &setup_lseek_lseek_pbc6_6_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_p8d2_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_17",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p892_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p892_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_0",
    &setup_lseek_lseek_p8f10_0_common,
    { { &setup_lseek_lseek_p8918_0_proc0 }, { &setup_lseek_lseek_p8918_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9e3_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_2",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8918_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_0",
    &setup_lseek_lseek_p8f18_0_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p9624_18_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_3",
    &setup_lseek_lseek_p8d10_2_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_p8910_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_4",
    &setup_lseek_lseek_p8910_4_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_p8d3_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8910_4_0, 0, "lseek" },
      { &test_lseek_lseek_p8910_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc1 }, { &setup_lseek_lseek_pb46_2_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_pa44_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_6",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pbc4_3_1, 0, "lseek" },
      { &test_lseek_lseek_pac4_17_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_7",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_7_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_8",
    &setup_lseek_lseek_pbd8_1_common,
    { { &setup_lseek_lseek_p9e3_4_proc0 }, { &setup_lseek_lseek_p8d10_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8910_8_0, 0, "lseek" },
      { &test_lseek_lseek_p8d10_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_9",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_10",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pa44_18_1, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_11",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pb44_4_1, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_12",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pac4_17_1, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_13",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_p9624_18_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_14",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc6_6_proc0 }, { &setup_lseek_lseek_pb46_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8f10_8_1, 0, "lseek" },
      { &test_lseek_lseek_p8f10_8_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_15",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb58_0_proc1 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_20_0, 0, "lseek" },
      { &test_lseek_lseek_p8b4_20_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_16",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8b4_21_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_17",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p894_9_0, 0, "lseek" },
      { &test_lseek_lseek_p8d10_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p8910_18",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8910_18_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_7_1, 0, "lseek" },
      { &test_lseek_lseek_p894_9_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_4",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p894_13_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_5",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p890_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8d4_2_proc1 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p88_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pd10_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p88_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_p8d10_5_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p87_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p87_1",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pae_3_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p87_2",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p87_3",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pae_6_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p86c_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p86c_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbc0_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p86c_2",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p86c_3",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pad0_17_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_4",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_5",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pad0_13_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_4_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_7",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p868_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p866_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p866_1",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p866_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbcc_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p866_3",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbd8_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_1_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_2",
    &setup_lseek_lseek_pb50_1_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_3",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd0_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_5",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pac90_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_6",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_7",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbc8_7_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p864_8",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p863_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p863_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p863_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p863_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p8f6_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd0_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_1",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pbc4_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_2",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_3",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac6_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_p8b10_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_5",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p967_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_6",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc4_11_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_11_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_7",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p862_8",
    &setup_lseek_lseek_pbc4_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbc4_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p860_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p860_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_3_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p860_2",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbc8_5_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p860_3",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p84_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p83_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p83_1",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p83_2",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p83_3",
    &setup_lseek_lseek_pf8_9_common,
    { { &setup_lseek_lseek_pd4_2_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_9_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p82c_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p82c_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p82c_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pad0_4_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_4",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pbd0_5_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_5",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p828_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p826_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p826_1",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p826_2",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_1",
    &setup_lseek_lseek_pbc8_1_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb58_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbc0_3_proc0 }, { &setup_lseek_lseek_pb48_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pb48_2_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_3",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_1_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_4",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_5",
    &setup_lseek_lseek_pbd0_3_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p824_6",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p823_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p823_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_p8d4_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p823_2",
    &setup_lseek_lseek_pbc6_1_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_1_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb50_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_1",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbc8_9_proc0 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_2",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pac4_19_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_3",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pa44_4_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_4",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pb46_2_proc0 }, { &setup_lseek_lseek_pb46_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pb44_4_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_5",
    &setup_lseek_lseek_pbc4_6_common,
    { { &setup_lseek_lseek_pac4_19_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbc6_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p822_6",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p820_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p820_1",
    &setup_lseek_lseek_p8f6_3_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pb50_2_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_1_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p820_2",
    &setup_lseek_lseek_pbd8_2_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbc8_9_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p80_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_4_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pf8_0_0, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p7_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_p7_0_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p7_1",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_p7_1_proc0 }, { &setup_lseek_lseek_pf8_0_proc1 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p6c_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_p6c_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf6_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p68_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_p68_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p68_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf4_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p66_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf3_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p64_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf2_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p64_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pac90_5_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p63_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p68_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf18_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p62_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p68_0_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p62_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf10_3_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p60_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_p68_1_proc0 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p4_0",
    &setup_lseek_lseek_p4_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_procfinal,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pe_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p4_1",
    &setup_lseek_lseek_p4_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_procfinal,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 0, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p3_0",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_0_proc1 }, { &setup_lseek_lseek_pf8_16_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p3_1",
    &setup_lseek_lseek_pf8_0_common,
    { { &setup_lseek_lseek_pf8_0_proc1 }, { &setup_lseek_lseek_pf8_17_proc0 } },
    &setup_lseek_lseek_pf8_0_procfinal,
    &setup_lseek_lseek_pf8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p2c_0",
    &setup_lseek_lseek_pbd8_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pb58_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd6_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p28_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p28_1",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd4_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p26_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd3_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p24_0",
    &setup_lseek_lseek_pbd8_6_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p24_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd2_6_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p23_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd18_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p22_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pb50_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_0_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p22_1",
    &setup_lseek_lseek_pbc8_2_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pd10_3_1, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p20_0",
    &setup_lseek_lseek_pbd8_4_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_4_proc0 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_final,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pf8_0_0, 1, "lseek" } },
    &cleanup },
  { "fs-lseek_lseek_p0_0",
    &setup_lseek_lseek_p4_0_common,
    { { &setup_lseek_lseek_pbd8_0_proc1 }, { &setup_lseek_lseek_pbd8_0_proc1 } },
    &setup_lseek_lseek_pbd8_0_procfinal,
    &setup_lseek_lseek_pbd8_0_procfinal,
    { { &test_lseek_lseek_pc_0_1, 0, "lseek" },
      { &test_lseek_lseek_pc_0_1, 1, "lseek" } },
    &cleanup },
//+++ common
  {}
};
