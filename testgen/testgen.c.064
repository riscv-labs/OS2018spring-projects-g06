//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: link mmap
 */
static int test_link_mmap_pf8_0_0(void) {
  int r = link("__f0", "__f1");
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static int test_link_mmap_pf8_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static void setup_link_mmap_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_link_mmap_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_link_mmap_pf8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_link_mmap_pf8_0_final(void) {
  unlink("__i0");
}
static void setup_link_mmap_pf8_0_procfinal(void) {
  
}

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
static void setup_link_mmap_pf8_1_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_link_mmap_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
static void setup_link_mmap_pf8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_link_mmap_pf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
static void setup_link_mmap_pf8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_link_mmap_pf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_link_mmap_pf8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i2", 0x0);
}
// static void setup_link_mmap_pf8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
static void setup_link_mmap_pf8_4_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
}
// static void setup_link_mmap_pf8_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pf8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pf8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_link_mmap_pf8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_link_mmap_pf8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
static int test_link_mmap_pf8_7_0(void) {
  int r = link("__f0", "__f0");
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
// static int test_link_mmap_pf8_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pf8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_6_proc0
// static void setup_link_mmap_pf8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_8_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
static void setup_link_mmap_pf8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_link_mmap_pf8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_9_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
static void setup_link_mmap_pf8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_link_mmap_pf8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_10_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_11_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_4_common
static void setup_link_mmap_pf8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_link_mmap_pf8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_11_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pf8_11_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_12_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_12_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_link_mmap_pf8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_link_mmap_pf8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
static void setup_link_mmap_pf8_12_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_link_mmap_pf8_12_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_13_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pf8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pf8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_13_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_14_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_6_common
// static void setup_link_mmap_pf8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_10_proc0
// static void setup_link_mmap_pf8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_14_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_15_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pf8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_pf8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_15_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_16_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf8_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pf8_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_pf8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_16_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_17_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf8_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pf8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_17_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_18_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_pf8_18_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf8_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_6_proc0
// static void setup_link_mmap_pf8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_18_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_19_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_pf8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_19_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_20_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf8_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pf8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_20_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_21_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
// static void setup_link_mmap_pf8_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_10_proc0
// static void setup_link_mmap_pf8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf8_21_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf8_22_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf8_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pf8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf8_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_pf8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf8_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf8_22_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pf6_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
static void setup_link_mmap_pf6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_link_mmap_pf6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_link_mmap_pf6_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_link_mmap_pf6_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_link_mmap_pf6_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
static void setup_link_mmap_pf6_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_link_mmap_pf6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pf6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
static void setup_link_mmap_pf6_3_final(void) {
  unlink("__i0");
  unlink("__i2");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_link_mmap_pf6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
static void setup_link_mmap_pf6_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_link_mmap_pf6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pf6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pf6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pf6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_6_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf6_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pf6_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
static void setup_link_mmap_pf6_7_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_link_mmap_pf6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pf6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pf6_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pf6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_9_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pf6_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_10_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf6_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pf6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pf6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_11_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf6_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pf6_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pf6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pf6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_12_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf6_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pf6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pf6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf6_13_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf6_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pf6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pf6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pf6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pf6_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pf6_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pf4_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static void setup_link_mmap_pf4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
static void setup_link_mmap_pf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_link_mmap_pf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf4_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
static void setup_link_mmap_pf4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf4_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf4_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
static void setup_link_mmap_pf4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_2_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pf4_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf4_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
static void setup_link_mmap_pf4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf4_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf4_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pf4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pf4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pf4_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_5_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf4_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
static void setup_link_mmap_pf4_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pf4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf4_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf4_6_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf4_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pf4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pf4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf4_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pf0_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_link_mmap_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf0_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pf0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pf0_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pf0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pf0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pf0_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pec_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pec_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pec_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pec_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pec_2_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pec_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pec_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pec_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_4_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pec_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pec_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pec_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pec_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pec_5_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pec_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pec_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pec_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pec_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pec_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe6_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static void setup_link_mmap_pe6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pe6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pe6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pe6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pe6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_2_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pe6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pe6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pe6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pe6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pe6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pe6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_6_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pe6_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pe6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pe6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pe6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_9_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe6_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pe6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe6_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pe6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pe6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_11_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe6_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pe6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pe6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pe6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_12_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe6_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pe6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pe6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe6_13_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe6_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pe6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pe6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pe6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pe6_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pe6_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe5_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pe5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pe5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe5_1_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
static void setup_link_mmap_pe5_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_1_1
static void setup_link_mmap_pe5_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_3_common
// static void setup_link_mmap_pe5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_2_common
// static void setup_link_mmap_pe5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_4_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pe5_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe5_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pe5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_1_common
// static void setup_link_mmap_pe5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_2_common
static void setup_link_mmap_pe5_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_link_mmap_pe5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pe5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pe5_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_1_1
static void setup_link_mmap_pe5_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pe5_8_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pe5_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_9_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pe5_9_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe5_10_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pe5_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_8_common
// static void setup_link_mmap_pe5_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pe5_10_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_11_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
static void setup_link_mmap_pe5_11_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_11_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_12_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_3_common
// static void setup_link_mmap_pe5_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_12_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_13_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_11_common
// static void setup_link_mmap_pe5_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_13_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_14_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_5_common
// static void setup_link_mmap_pe5_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_14_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_15_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
static void setup_link_mmap_pe5_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_15_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pe5_15_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_16_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_15_common
// static void setup_link_mmap_pe5_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_16_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pe5_16_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_17_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_15_common
// static void setup_link_mmap_pe5_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_17_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pe5_17_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_18_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_2_common
// static void setup_link_mmap_pe5_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_18_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_19_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pe5_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_19_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_20_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe5_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_1_common
// static void setup_link_mmap_pe5_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_20_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_21_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
static void setup_link_mmap_pe5_21_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_21_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_22_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
static void setup_link_mmap_pe5_22_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pe5_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_22_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_23_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_5_common
// static void setup_link_mmap_pe5_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_23_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_23_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_24_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_22_common
// static void setup_link_mmap_pe5_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pe5_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_24_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe5_24_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_25_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pe5_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_21_common
// static void setup_link_mmap_pe5_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_25_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_26_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pe5_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pe5_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_26_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe5_27_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe5_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_10_1
// static void setup_link_mmap_pe5_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_21_common
// static void setup_link_mmap_pe5_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pe5_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe5_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe5_27_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
static int test_link_mmap_pe0_0_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static void setup_link_mmap_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe0_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pe0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pe0_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pe0_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pe0_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pe0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pe0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pe0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pe0_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pd8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_pd8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_4_common
// static void setup_link_mmap_pd8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i2", 0x0);
// }
// ^ See setup_link_mmap_pf8_4_proc0
// static void setup_link_mmap_pd8_4_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pd8_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd8_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pd8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_6_common
// static void setup_link_mmap_pd8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_6_proc0
// static void setup_link_mmap_pd8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_7_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd8_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pd8_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_8_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_6_common
// static void setup_link_mmap_pd8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_10_proc0
// static void setup_link_mmap_pd8_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_9_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pd8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pd8_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pd8_10_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_11_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pd8_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_pd8_11_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pd8_11_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_12_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_6_proc0
// static void setup_link_mmap_pd8_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_12_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_13_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_4_common
// static void setup_link_mmap_pd8_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i2", 0x0);
// }
// ^ See setup_link_mmap_pf8_11_proc0
// static void setup_link_mmap_pd8_13_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pd8_13_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_14_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pd8_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_14_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_15_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
// static void setup_link_mmap_pd8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_6_proc0
// static void setup_link_mmap_pd8_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_15_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_16_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd8_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pd8_16_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_16_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_17_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
// static void setup_link_mmap_pd8_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_10_proc0
// static void setup_link_mmap_pd8_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_17_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_18_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd8_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_link_mmap_pf8_10_proc0
// static void setup_link_mmap_pd8_18_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd8_18_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_19_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd8_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_pd8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_19_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_20_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd8_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd8_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_pd8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_20_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_21_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd8_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_pd8_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_21_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd8_22_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd8_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pd8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd8_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_pd8_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd8_22_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pd6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pd6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pd6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pd6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_2_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pd6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pd6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pd6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pd6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pd6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pd6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pd6_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pd6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_8_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd6_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pd6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pd6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_9_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pd6_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd6_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pd6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pd6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_11_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd6_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pd6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pd6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_12_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd6_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pd6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pd6_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pd6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd6_13_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd6_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pd6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pd6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pd6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pd6_13_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pd6_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd4_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_1_common
// static void setup_link_mmap_pd4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd4_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd4_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_2_common
// static void setup_link_mmap_pd4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_2_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pd4_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd4_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_3_common
// static void setup_link_mmap_pd4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd4_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd4_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pd4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pd4_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_5_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd4_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_5_common
// static void setup_link_mmap_pd4_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd4_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd4_6_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd4_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pd4_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd4_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd4_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pd4_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd4_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd0_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pd0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pd0_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pd0_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pd0_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pd0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pd0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pd0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pd0_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pcc_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pcc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pcc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pcc_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pcc_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pcc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pcc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pcc_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pcc_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pcc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pcc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pcc_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pcc_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pcc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pcc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pcc_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_4_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pcc_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pcc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pcc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pcc_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pcc_5_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pcc_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pcc_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pcc_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pcc_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pcc_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pc6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pc6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pc6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pc6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_2_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pc6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_2_common
// static void setup_link_mmap_pc6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pc6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pc6_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pc6_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_7_common
// static void setup_link_mmap_pc6_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pc6_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_3_common
// static void setup_link_mmap_pc6_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_7_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_3_final
// static void setup_link_mmap_pc6_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_1_common
// static void setup_link_mmap_pc6_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_9_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc6_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pc6_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc6_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_0_common
// static void setup_link_mmap_pc6_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_10_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pc6_10_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_11_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc6_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pc6_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pc6_11_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pc6_11_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_12_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc6_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_11_common
// static void setup_link_mmap_pc6_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_12_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pc6_12_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc6_13_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc6_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pc6_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf6_6_common
// static void setup_link_mmap_pc6_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pc6_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pc6_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_1_final
// static void setup_link_mmap_pc6_13_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pc5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_1_common
// static void setup_link_mmap_pc5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_3_common
// static void setup_link_mmap_pc5_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_1_common
// static void setup_link_mmap_pc5_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_2_common
// static void setup_link_mmap_pc5_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_15_common
// static void setup_link_mmap_pc5_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_5_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pc5_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_10_1
// static void setup_link_mmap_pc5_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_2_common
// static void setup_link_mmap_pc5_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_2_common
// static void setup_link_mmap_pc5_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_8_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_8_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_1_1
// static void setup_link_mmap_pc5_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_11_common
// static void setup_link_mmap_pc5_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_8_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_9_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_9_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_3_common
// static void setup_link_mmap_pc5_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_9_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_10_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_10_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_11_common
// static void setup_link_mmap_pc5_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_10_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_11_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_11_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_5_common
// static void setup_link_mmap_pc5_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_11_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_12_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_12_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_1_1
// static void setup_link_mmap_pc5_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_8_common
// static void setup_link_mmap_pc5_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pc5_12_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_13_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_13_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_8_common
// static void setup_link_mmap_pc5_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pc5_13_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_14_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_14_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_12_common
// static void setup_link_mmap_pc5_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_14_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pc5_14_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_15_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_15_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_8_common
// static void setup_link_mmap_pc5_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_15_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pc5_15_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_16_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_16_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_2_common
// static void setup_link_mmap_pc5_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_16_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pc5_16_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_17_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_17_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_10_1
// static void setup_link_mmap_pc5_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_15_common
// static void setup_link_mmap_pc5_17_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_17_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pc5_17_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_18_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_18_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_15_common
// static void setup_link_mmap_pc5_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_18_final(void) {
//   unlink("__i0");
//   unlink("__i2");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_4_final
// static void setup_link_mmap_pc5_18_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_19_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_19_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_22_common
// static void setup_link_mmap_pc5_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_19_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_20_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_20_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf4_5_common
// static void setup_link_mmap_pc5_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_20_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_21_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_21_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_22_common
// static void setup_link_mmap_pc5_21_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc5_21_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_22_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_22_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pc5_22_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_22_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_23_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_23_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pc5_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_21_common
// static void setup_link_mmap_pc5_23_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_23_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_24_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_24_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pc5_24_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_24_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_25_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc5_25_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_1_common
// static void setup_link_mmap_pc5_25_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_pc5_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_25_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_26_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_26_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pc5_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pc5_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_26_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc5_27_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc5_27_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_10_1
// static void setup_link_mmap_pc5_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pe5_21_common
// static void setup_link_mmap_pc5_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc5_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_pc5_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc5_27_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_0_common
// static void setup_link_mmap_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc0_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_0
// static int test_link_mmap_pc0_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pc0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_1_common
// static void setup_link_mmap_pc0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pc0_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pc0_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_7_0
// static int test_link_mmap_pc0_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pc0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pc0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pc0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pc0_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
static int test_link_mmap_pb8_0_0(void) {
  int r = link("__f0", "__f1");
  expect_result("r", r, 0);
  return xerrno(r);
}
// static int test_link_mmap_pb8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
static void setup_link_mmap_pb8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_link_mmap_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb8_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
static void setup_link_mmap_pb8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_link_mmap_pb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pb8_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pb8_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_pb8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb8_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
static void setup_link_mmap_pb8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_link_mmap_pb8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb8_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb8_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb8_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_pb8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
static void setup_link_mmap_pb8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_link_mmap_pb8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_pb8_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb6_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pb6_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pb6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pb6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb6_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_pb6_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pb6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pb6_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pb6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb6_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_pb6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pb6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pb6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb6_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_pb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_pb6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pb6_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pb6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb4_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb4_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_pb4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
static void setup_link_mmap_pb4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_link_mmap_pb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb4_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb4_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb4_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb4_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
static void setup_link_mmap_pb4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_link_mmap_pb4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_pb4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pb4_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pb0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pb0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pac_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pac_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pac_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pac_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pac_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pac_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pac_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa6_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa6_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pa6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_pa6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pa6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pa6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pa6_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa6_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa6_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pa6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_pa6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_pa6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pa6_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pa6_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa6_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa6_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pa6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_pa6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pa6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pa6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_pa6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa6_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa6_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_pa6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_pa6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_pa6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_pa6_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_pa6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa50_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pa50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pa50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_pa50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pa50_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa50_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_pa50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_pa50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_pa50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pa50_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa50_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_pa50_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_pa50_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_pa50_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pa50_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
static int test_link_mmap_pa50_3_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e27000UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pa50_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
static void setup_link_mmap_pa50_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_link_mmap_pa50_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pa50_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa50_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_3_1
// static void setup_link_mmap_pa50_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_pa50_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_pa50_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pa50_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
static int test_link_mmap_pa50_5_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e27000UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pa50_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pa50_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_pa50_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pa50_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa50_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_5_1
// static void setup_link_mmap_pa50_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_pa50_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_pa50_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_6_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_pa50_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa50_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
static int test_link_mmap_pa50_7_1(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e28000UL);
  
  return xerrno(r);
}
// static void setup_link_mmap_pa50_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pa50_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_pa50_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa50_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pa50_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_pa0_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_pa0_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p98_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p98_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_p98_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p98_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p98_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_link_mmap_pb8_2_proc0
// static void setup_link_mmap_p98_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p98_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
// static void setup_link_mmap_p98_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_link_mmap_pb8_3_proc0
// static void setup_link_mmap_p98_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_p98_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p98_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_p98_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p98_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p98_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_link_mmap_pb8_5_proc0
// static void setup_link_mmap_p98_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p98_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p98_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p98_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p98_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_18_common
// static void setup_link_mmap_p98_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p98_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_link_mmap_pb8_6_proc0
// static void setup_link_mmap_p98_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_link_mmap_pf8_1_final
// static void setup_link_mmap_p98_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p96_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p96_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p96_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_p96_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p96_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p96_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p96_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p96_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p96_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p96_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_p96_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p96_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p96_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_p96_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p96_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p96_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p96_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_p96_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p96_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p96_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p96_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p96_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p96_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p96_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_p96_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p96_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p96_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_p96_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p94_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p94_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p94_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p94_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p94_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p94_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_p94_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p90_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p90_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p90_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p8c_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p8c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_p8c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p8c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p8c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p8c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p8c_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p8c_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p8c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_p8c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p8c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p8c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p8c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p8c_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p86_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p86_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p86_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_p86_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p86_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p86_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p86_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p86_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p86_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p86_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_p86_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p86_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p86_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_p86_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p86_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p86_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p86_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_0_common
// static void setup_link_mmap_p86_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p86_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p86_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p86_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p86_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p86_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p86_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb6_1_common
// static void setup_link_mmap_p86_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p86_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p86_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_7_final
// static void setup_link_mmap_p86_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_p850_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p850_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p850_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p850_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_1_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_p850_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_p850_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p850_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_p850_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_2_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_p850_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_p850_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p850_2_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_p850_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_3_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_3_1
// static void setup_link_mmap_p850_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p850_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_p850_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p850_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_4_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_4_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_p850_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p850_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pb4_0_proc0
// static void setup_link_mmap_p850_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p850_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_5_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_5_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_3_1
// static void setup_link_mmap_p850_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_p850_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_p850_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_p850_5_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_6_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_6_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_5_1
// static void setup_link_mmap_p850_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p850_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_p850_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p850_6_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p850_7_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p850_7_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1e27000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pa50_5_1
// static void setup_link_mmap_p850_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pb4_1_common
// static void setup_link_mmap_p850_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p850_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 31617024, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pa50_3_proc0
// static void setup_link_mmap_p850_7_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_12_final
// static void setup_link_mmap_p850_7_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p80_0_0(void) {
//   int r = link("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pb8_0_0
// static int test_link_mmap_p80_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_link_mmap_pf8_7_common
// static void setup_link_mmap_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p80_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
static int test_link_mmap_p70_0_0(void) {
  int r = link("__f0", "__f0");
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static int test_link_mmap_p70_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_p70_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_link_mmap_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p70_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p70_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p70_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_p70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_1_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p70_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p70_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p70_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
static void setup_link_mmap_p70_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_link_mmap_p70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_p70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p70_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p70_3_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p70_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p70_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_p70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_3_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p70_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p70_4_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p70_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p70_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p70_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_p70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p70_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p70_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p6c_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p6c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
static void setup_link_mmap_p6c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_link_mmap_p6c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p6c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p6c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p6c_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p6c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p6c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p6c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p68_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p68_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p68_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p68_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p60_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p60_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p60_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p60_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p60_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p58_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p58_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_p58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p58_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p58_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p58_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p58_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_p58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p58_1_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p58_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4c_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p4c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p4c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p4c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p4c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p4c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4c_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p4c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p4c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p4c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p4c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p4c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4a_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_p4a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p4a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p4a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p4a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p4a_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4a_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_1_1
static void setup_link_mmap_p4a_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_link_mmap_p4a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p4a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p4a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p4a_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4a_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_p4a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p4a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p4a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p4a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p4a_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p4a_3_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p4a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_10_1
// static void setup_link_mmap_p4a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_link_mmap_p4a_1_common
// static void setup_link_mmap_p4a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p4a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p4a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p4a_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p40_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p40_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_p40_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p40_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p40_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p30_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p30_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p30_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_link_mmap_pf8_2_proc0
// static void setup_link_mmap_p30_1_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p30_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p30_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p30_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p30_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p30_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_3_proc0
// static void setup_link_mmap_p30_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p30_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p30_3_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p30_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p30_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p30_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_link_mmap_pf8_9_proc0
// static void setup_link_mmap_p30_3_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p30_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p30_4_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p30_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf8_0_1
// static void setup_link_mmap_p30_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p30_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p30_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_link_mmap_pf8_12_proc0
// static void setup_link_mmap_p30_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p30_4_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p2c_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p2c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p2c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p2c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p2c_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p2c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf6_0_1
// static void setup_link_mmap_p2c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p2c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p2c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p2c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p2c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p28_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p28_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf4_0_1
// static void setup_link_mmap_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p28_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p20_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p20_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pf0_0_1
// static void setup_link_mmap_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p20_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p20_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p18_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p18_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_0_1
// static void setup_link_mmap_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p18_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p18_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p18_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p18_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pec_2_1
// static void setup_link_mmap_p18_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p18_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p18_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p18_1_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p18_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0c_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0c_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p0c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p0c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p0c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc0
// static void setup_link_mmap_p0c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p0c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0c_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0c_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe6_0_1
// static void setup_link_mmap_p0c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_link_mmap_p6c_0_common
// static void setup_link_mmap_p0c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_0_proc1
// static void setup_link_mmap_p0c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_link_mmap_pf6_4_proc0
// static void setup_link_mmap_p0c_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_final
// static void setup_link_mmap_p0c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_link_mmap_pf6_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0a_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0a_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_p0a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p0a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p0a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p0a_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p0a_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0a_1_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0a_1_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_0_1
// static void setup_link_mmap_p0a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_link_mmap_p4a_1_common
// static void setup_link_mmap_p0a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p0a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_p0a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p0a_1_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0a_2_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0a_2_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_p0a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_link_mmap_p70_2_common
// static void setup_link_mmap_p0a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p0a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pf4_0_proc0
// static void setup_link_mmap_p0a_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p0a_2_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p0a_3_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p0a_3_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe5_5_1
// static void setup_link_mmap_p0a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_link_mmap_p4a_1_common
// static void setup_link_mmap_p0a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p0a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_link_mmap_pe5_6_proc0
// static void setup_link_mmap_p0a_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_link_mmap_pf8_0_final
// static void setup_link_mmap_p0a_3_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

/*
 * calls: link mmap
 */
// static int test_link_mmap_p00_0_0(void) {
//   int r = link("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_link_mmap_p70_0_0
// static int test_link_mmap_p00_0_1(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_link_mmap_pe0_0_1
// static void setup_link_mmap_p00_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_link_mmap_p70_0_common
// static void setup_link_mmap_p00_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p00_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_link_mmap_pf8_0_proc1
// static void setup_link_mmap_p00_0_final(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal
// static void setup_link_mmap_p00_0_procfinal(void) {
//   
// }
// ^ See setup_link_mmap_pf8_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-link_mmap_pf8_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_2",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_3",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_4",
    &setup_link_mmap_pf8_4_common,
    { { &setup_link_mmap_pf8_4_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_5",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_6",
    &setup_link_mmap_pf8_6_common,
    { { &setup_link_mmap_pf8_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_7",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_8",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_9",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_9_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_10",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_10_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_11",
    &setup_link_mmap_pf8_4_common,
    { { &setup_link_mmap_pf8_11_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_12",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf8_12_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_13",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_9_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_14",
    &setup_link_mmap_pf8_6_common,
    { { &setup_link_mmap_pf8_10_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_15",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_16",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_12_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_17",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_18",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_19",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_20",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_9_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_21",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_10_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf8_22",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_12_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_0",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_1",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_2",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_3",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_4",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_5",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_6",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_7",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_8",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_9",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_10",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_11",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_12",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf6_13",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_1",
    &setup_link_mmap_pf4_1_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_2",
    &setup_link_mmap_pf4_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_3",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_4",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_5",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf4_6",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf0_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf0_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pf0_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_2",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_3",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_4",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pec_5",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_0",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_1",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_2",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_3",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_4",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_5",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_6",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_7",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_8",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_9",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_10",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_11",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_12",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe6_13",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_1",
    &setup_link_mmap_pe5_1_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_2",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_3",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_4",
    &setup_link_mmap_pf4_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_5",
    &setup_link_mmap_pf4_1_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_6",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_7",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_8",
    &setup_link_mmap_pe5_8_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_9",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_10",
    &setup_link_mmap_pe5_8_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_11",
    &setup_link_mmap_pe5_11_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_12",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_13",
    &setup_link_mmap_pe5_11_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_14",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_15",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_16",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_17",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_18",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_19",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_20",
    &setup_link_mmap_pe5_1_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_21",
    &setup_link_mmap_pe5_21_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_22",
    &setup_link_mmap_pe5_22_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_23",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_24",
    &setup_link_mmap_pe5_22_common,
    { { &setup_link_mmap_pe5_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_25",
    &setup_link_mmap_pe5_21_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_26",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe5_27",
    &setup_link_mmap_pe5_21_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe0_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe0_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pe0_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_2",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_3",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_4",
    &setup_link_mmap_pf8_4_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_4_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_5",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_6",
    &setup_link_mmap_pf8_6_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_7",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_8",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_9_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_9",
    &setup_link_mmap_pf8_6_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_10_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_10",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_9_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_11",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_12_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_12",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_13",
    &setup_link_mmap_pf8_4_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_11_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_14",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_15",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_16",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_9_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_17",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_10_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_18",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_10_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_19",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_20",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_12_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_21",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd8_22",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_12_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_0",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_1",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_2",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_3",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_4",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_5",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_6",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_7",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_8",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_9",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_10",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_11",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_12",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd6_13",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_1",
    &setup_link_mmap_pf4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_2",
    &setup_link_mmap_pf4_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_3",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_4",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_5",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd4_6",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd0_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd0_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pd0_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_2",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_3",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_4",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pcc_5",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_0",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_1",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_2",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_3",
    &setup_link_mmap_pf6_2_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_4",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_5",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_6",
    &setup_link_mmap_pf6_7_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_7",
    &setup_link_mmap_pf6_3_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_3_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_8",
    &setup_link_mmap_pf6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_9",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_10",
    &setup_link_mmap_pf6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_11",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_12",
    &setup_link_mmap_pf6_11_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc6_13",
    &setup_link_mmap_pf6_6_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_1",
    &setup_link_mmap_pe5_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_2",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_3",
    &setup_link_mmap_pf4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_4",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_5",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_6",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_7",
    &setup_link_mmap_pe5_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_8",
    &setup_link_mmap_pe5_11_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_9",
    &setup_link_mmap_pf4_3_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_10",
    &setup_link_mmap_pe5_11_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_11",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_12",
    &setup_link_mmap_pe5_8_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_13",
    &setup_link_mmap_pe5_8_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_14",
    &setup_link_mmap_pf8_12_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_15",
    &setup_link_mmap_pe5_8_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_16",
    &setup_link_mmap_pf4_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_17",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_18",
    &setup_link_mmap_pe5_15_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_4_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_19",
    &setup_link_mmap_pe5_22_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_20",
    &setup_link_mmap_pf4_5_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_21",
    &setup_link_mmap_pe5_22_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_22",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_23",
    &setup_link_mmap_pe5_21_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_24",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_25",
    &setup_link_mmap_pe5_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_26",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc5_27",
    &setup_link_mmap_pe5_21_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc0_0",
    &setup_link_mmap_pf8_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc0_1",
    &setup_link_mmap_pf8_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pf8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pc0_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pf8_7_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_1",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pb8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_3",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pb8_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_4",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_9_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_5",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pb8_5_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb8_6",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pb8_6_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb6_0",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb6_1",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb6_2",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb6_3",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb4_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pb4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb4_1",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pb4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pb0_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pac_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pac_1",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa6_0",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa6_1",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa6_2",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa6_3",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pb4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_1",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pb4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_2",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pb4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_3",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pa50_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_4",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pa50_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_3_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_5",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pa50_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_6",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pa50_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa50_7",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pa50_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_7_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_pa0_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_1",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_2",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_3",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb8_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_4",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_9_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_5",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb8_5_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p98_6",
    &setup_link_mmap_pf8_18_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb8_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_1_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p96_0",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p96_1",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p96_2",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p96_3",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p94_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p94_1",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p90_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p8c_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p8c_1",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p86_0",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p86_1",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p86_2",
    &setup_link_mmap_pb6_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p86_3",
    &setup_link_mmap_pb6_1_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_7_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_1",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_2",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_3",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pa50_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_4",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pb4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_5",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pa50_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_3_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_6",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pa50_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p850_7",
    &setup_link_mmap_pb4_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pa50_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_12_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pa50_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p80_0",
    &setup_link_mmap_pf8_7_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_pb8_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p70_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p70_1",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_2_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p70_2",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_3_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p70_3",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_9_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p70_4",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_12_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p6c_0",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p6c_1",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p68_0",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p60_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p58_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p58_1",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4c_0",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4c_1",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_4_proc0 }, { &setup_link_mmap_pf6_0_proc1 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4a_0",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4a_1",
    &setup_link_mmap_p4a_1_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_1_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4a_2",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p4a_3",
    &setup_link_mmap_p4a_1_common,
    { { &setup_link_mmap_pf4_0_proc0 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_10_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p40_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 0, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p30_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p30_1",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_2_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p30_2",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_3_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p30_3",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_9_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p30_4",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_12_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf8_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p2c_0",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p2c_1",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p28_0",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf4_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p20_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pf0_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p18_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pec_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p18_1",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pec_2_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0c_0",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_0_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0c_1",
    &setup_link_mmap_p6c_0_common,
    { { &setup_link_mmap_pf6_0_proc1 }, { &setup_link_mmap_pf6_4_proc0 } },
    &setup_link_mmap_pf6_0_procfinal,
    &setup_link_mmap_pf6_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe6_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0a_0",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0a_1",
    &setup_link_mmap_p4a_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_0_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0a_2",
    &setup_link_mmap_p70_2_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf4_0_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p0a_3",
    &setup_link_mmap_p4a_1_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pe5_6_proc0 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_final,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe5_5_1, 1, "mmap" } },
    &cleanup },
  { "fs-link_mmap_p00_0",
    &setup_link_mmap_p70_0_common,
    { { &setup_link_mmap_pf8_0_proc1 }, { &setup_link_mmap_pf8_0_proc1 } },
    &setup_link_mmap_pf8_0_procfinal,
    &setup_link_mmap_pf8_0_procfinal,
    { { &test_link_mmap_p70_0_0, 0, "link" },
      { &test_link_mmap_pe0_0_1, 1, "mmap" } },
    &cleanup },
//+++ common
  {}
};
