//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_pe_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static int test_mmap_munmap_pe_0_1(void) {
  int* va = (int*) 0x12345601000UL;
  int r = munmap(va, 4096);
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_mmap_munmap_pe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
static void setup_mmap_munmap_pe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_munmap_pe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_munmap_pe_0_final(void) {
  
}
static void setup_mmap_munmap_pe_0_procfinal(void) {
  
}

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_1_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pe_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_munmap_pe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
static void setup_mmap_munmap_pe_2_final(void) {
  unlink("__i0");
}
// static void setup_mmap_munmap_pe_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pe_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_munmap_pe_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
static void setup_mmap_munmap_pe_3_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_munmap_pe_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pe_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_munmap_pe_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pe_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_6_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pe_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_7_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_munmap_pe_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_9_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pe_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_munmap_pe_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_11_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pe_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pe_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pe_16_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_munmap_pe_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pe_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
static void setup_mmap_munmap_pe_16_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_munmap_pe_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pe_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_18_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pe_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pe_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pe_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pe_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pe_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pe_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pe_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_26_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pe_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pe_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pe_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pe_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pe_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pe_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_30_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
static void setup_mmap_munmap_pe_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pe_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_31_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pe_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pe_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pe_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pe_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pe_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pe_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pe_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pe_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
static int test_mmap_munmap_pc_0_1(void) {
  int* va = (int*) 0x12345600000UL;
  int r = munmap(va, 4096);
  expect_result("r", r, 0);
  return xerrno(r);
}
// static void setup_mmap_munmap_pc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pc_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pc_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pe_6_proc0
// static void setup_mmap_munmap_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_1_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pc_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pc_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_pc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_5_proc0
// static void setup_mmap_munmap_pc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pc_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pc_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_pc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pe_7_proc0
// static void setup_mmap_munmap_pc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_3_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_pc_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pc_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_0
// static int test_mmap_munmap_pc_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_pc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_8_proc0
// static void setup_mmap_munmap_pc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pc_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_pb8_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_munmap_pb8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
static void setup_mmap_munmap_pb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_mmap_munmap_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_munmap_pb8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_munmap_pb8_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_mmap_munmap_pb8_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pb8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pb8_0_0
// static int test_mmap_munmap_pb8_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
static void setup_mmap_munmap_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_munmap_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_pb8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_pb8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pb0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pb8_0_0
// static int test_mmap_munmap_pb0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc0
// static void setup_mmap_munmap_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_pb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_pb0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pb0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pb8_0_0
// static int test_mmap_munmap_pb0_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_1_proc0
// static void setup_mmap_munmap_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_pb0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_pb0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_pa8_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_munmap_pa8_0_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_munmap_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_1_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_2_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_16_common
static void setup_mmap_munmap_pa8_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_3_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pa8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_munmap_pa8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_munmap_pa8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_4_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pa8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_mmap_munmap_pa8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i2", 0x0);
}
// static void setup_mmap_munmap_pa8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
static void setup_mmap_munmap_pa8_4_final(void) {
  unlink("__i2");
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_munmap_pa8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_5_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_16_common
static void setup_mmap_munmap_pa8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_6_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_16_common
static void setup_mmap_munmap_pa8_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_6_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_7_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_8_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_16_common
static void setup_mmap_munmap_pa8_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_9_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_9_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_10_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_10_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_11_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_11_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_12_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
}
// static void setup_mmap_munmap_pa8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_13_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
}
// static void setup_mmap_munmap_pa8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_14_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_14_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_15_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_15_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_16_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_16_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pa8_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_16_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_17_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_17_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_17_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_18_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_18_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_19_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_19_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_19_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_20_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_20_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_20_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_20_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_21_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_21_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_16_common
static void setup_mmap_munmap_pa8_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_21_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_22_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_22_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_22_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_23_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_23_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pa8_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_23_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_24_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_24_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pa8_24_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_munmap_pa8_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i1", 0x1000);
}
// static void setup_mmap_munmap_pa8_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_24_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_25_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_25_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_26_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_26_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_26_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x2000);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_27_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_27_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_27_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x1000);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_27_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_28_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_28_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_28_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_29_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_29_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_29_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_30_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_30_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_30_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x1e27000);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_mmap_munmap_pa8_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_30_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_31_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_31_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_31_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_31_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_31_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_32_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_32_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_33_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_33_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_33_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_34_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_34_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_34_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_34_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_35_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_35_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345600000, 0, "__i1", 0x1e27000);
}
// static void setup_mmap_munmap_pa8_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_35_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_36_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_36_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_36_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_36_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_37_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_37_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_37_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x1e27000);
  init_map_file(0x12345600000, 1, "__i1", 0x1e27000);
}
// static void setup_mmap_munmap_pa8_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_37_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_38_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_38_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_38_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_38_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_39_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_39_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_39_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_39_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_40_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_40_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_40_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_40_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_40_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_40_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_40_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_41_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_41_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_41_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_41_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_41_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_41_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_41_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_42_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_42_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_42_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_42_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_42_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_42_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_42_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_43_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_43_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_43_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_43_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_43_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_43_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_43_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_44_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_44_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_44_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_44_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_44_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_44_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_44_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_45_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_45_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_45_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_45_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_45_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_45_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_45_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_46_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_46_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_46_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_46_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_46_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_46_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_46_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_47_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_47_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_47_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_47_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_47_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_47_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_47_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_48_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_48_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_48_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_48_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i1", 0x26000);
}
// static void setup_mmap_munmap_pa8_48_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_48_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_48_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_49_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_49_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_49_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_49_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_49_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_49_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_49_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_50_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_50_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_50_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_50_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x26000);
}
// static void setup_mmap_munmap_pa8_50_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_50_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_50_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_51_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_51_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_51_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_51_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_51_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_51_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_51_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_52_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_52_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_52_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_52_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_52_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_52_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_52_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_53_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_53_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_53_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_53_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_53_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_53_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_53_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_54_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_54_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_54_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_4_common
static void setup_mmap_munmap_pa8_54_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i2", 0x0);
}
// static void setup_mmap_munmap_pa8_54_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_54_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pa8_4_final
// static void setup_mmap_munmap_pa8_54_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_55_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_55_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_55_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pa8_55_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_55_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_55_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_55_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_56_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_56_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_56_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_24_common
static void setup_mmap_munmap_pa8_56_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_56_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_56_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_56_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_57_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_57_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_57_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_57_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_57_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_57_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_57_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_58_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_58_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_58_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_58_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_58_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_58_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_58_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_59_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_59_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_59_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_59_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_59_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_59_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_59_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_60_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_60_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_60_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_60_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x2000);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_60_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_60_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_60_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_61_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_61_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_61_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_61_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_61_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_61_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_61_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_62_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_62_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_62_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_62_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_62_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_62_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_62_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_63_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_63_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_63_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_63_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_63_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_63_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_63_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_64_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_64_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_64_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_64_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_64_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_64_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_64_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_65_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_65_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_65_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_4_common
static void setup_mmap_munmap_pa8_65_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_mmap_munmap_pa8_65_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_65_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pa8_4_final
// static void setup_mmap_munmap_pa8_65_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_66_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_66_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_66_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pa8_66_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_66_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_66_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_66_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_67_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_67_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_67_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_24_common
static void setup_mmap_munmap_pa8_67_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_67_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_67_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_67_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_68_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_68_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_68_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_68_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_68_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_68_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_68_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_69_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_69_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_69_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_69_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_69_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_69_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_69_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_70_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_70_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_70_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_70_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_70_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_70_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_70_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_71_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_71_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_71_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_71_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_71_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_71_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_71_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_72_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_72_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_72_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_72_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_72_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_72_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_72_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_73_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_73_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_73_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_73_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_73_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_73_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_73_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_74_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_74_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_74_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_74_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_pa8_74_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_74_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_74_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_75_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_75_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_75_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_75_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_75_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_75_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_75_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_76_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_76_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_76_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_76_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_76_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_76_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_76_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_77_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_77_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_77_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_77_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_77_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_77_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_77_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_78_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_78_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_78_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_78_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 0, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_78_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_78_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_78_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_79_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_79_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_79_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_4_common
static void setup_mmap_munmap_pa8_79_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i2", 0x0);
}
// static void setup_mmap_munmap_pa8_79_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_79_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pa8_4_final
// static void setup_mmap_munmap_pa8_79_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_80_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_80_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_80_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_3_common
static void setup_mmap_munmap_pa8_80_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_80_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_80_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_80_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_81_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_81_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_81_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_24_common
static void setup_mmap_munmap_pa8_81_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_munmap_pa8_81_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_81_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_3_final
// static void setup_mmap_munmap_pa8_81_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_82_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_82_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_82_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_pa8_82_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i1", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_82_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_82_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_pa8_82_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_83_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_83_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_83_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_83_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_83_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_83_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_83_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_84_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_84_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_84_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_84_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_84_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_84_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_84_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_85_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_85_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
static void setup_mmap_munmap_pa8_85_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_mmap_munmap_pa8_85_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_85_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_85_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_85_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_86_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_86_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_86_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_86_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x1000);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_86_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_86_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_86_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_87_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_87_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_87_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_87_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_pa8_87_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_87_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_87_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_88_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_88_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_88_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_88_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345601000, 1, 0);
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_munmap_pa8_88_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_88_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_88_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_89_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_89_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_89_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_89_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_89_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_89_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_89_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_90_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_90_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_90_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_90_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 0, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_90_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_90_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_90_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_91_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_91_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_91_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
static void setup_mmap_munmap_pa8_91_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_91_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_91_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_91_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa8_92_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa8_92_1(void) {
//   int* va = (int*) 0x12345601000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pe_0_1
// static void setup_mmap_munmap_pa8_92_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_pa8_92_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345601000, 1, "__i0", 0x0);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_pa8_92_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa8_92_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa8_92_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_pa0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pa8_0_0
// static int test_mmap_munmap_pa0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p9_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_munmap_p9_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p9_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p9_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p9_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p9_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p9_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p9_0_0
// static int test_mmap_munmap_p8_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p8_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p70_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p70_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_0_0
// static int test_mmap_munmap_p70_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pe_7_proc0
// static void setup_mmap_munmap_p70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_1_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_0_0
// static int test_mmap_munmap_p70_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p70_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_5_proc0
// static void setup_mmap_munmap_p70_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p70_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p70_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p70_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_3_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_3_0
// static int test_mmap_munmap_p70_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p70_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_5_proc0
// static void setup_mmap_munmap_p70_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p70_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_0_0
// static int test_mmap_munmap_p70_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p70_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_8_proc0
// static void setup_mmap_munmap_p70_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p70_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_0_0
// static int test_mmap_munmap_p70_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pe_6_proc0
// static void setup_mmap_munmap_p70_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_6_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_3_0
// static int test_mmap_munmap_p70_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pe_7_proc0
// static void setup_mmap_munmap_p70_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_7_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_3_0
// static int test_mmap_munmap_p70_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p70_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pe_8_proc0
// static void setup_mmap_munmap_p70_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p70_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p70_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_3_0
// static int test_mmap_munmap_p70_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p70_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p70_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pe_6_proc0
// static void setup_mmap_munmap_p70_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p70_9_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p70_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p50_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_0_0
// static int test_mmap_munmap_p50_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p50_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p50_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p50_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p70_3_0
// static int test_mmap_munmap_p50_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p50_1_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p50_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p38_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_munmap_p38_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc0
// static void setup_mmap_munmap_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p38_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p38_0_0
// static int test_mmap_munmap_p38_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_p38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_1_proc0
// static void setup_mmap_munmap_p38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_p38_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_p38_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p30_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p38_0_0
// static int test_mmap_munmap_p30_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc0
// static void setup_mmap_munmap_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p30_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p38_0_0
// static int test_mmap_munmap_p30_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_munmap_pb8_0_common
// static void setup_mmap_munmap_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_1_proc0
// static void setup_mmap_munmap_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_munmap_pb8_0_proc1
// static void setup_mmap_munmap_p30_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_final
// static void setup_mmap_munmap_p30_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_munmap_pb8_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p2c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p2c_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p2c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p2c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p2c_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p2c_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p2c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pa8_17_proc0
// static void setup_mmap_munmap_p2c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pa8_14_proc0
// static void setup_mmap_munmap_p2c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p2c_4_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p2c_4_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_munmap_p2c_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_5_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_munmap_p2c_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_6_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pa8_17_proc0
// static void setup_mmap_munmap_p2c_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_7_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pa8_14_proc0
// static void setup_mmap_munmap_p2c_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_8_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_20_proc0
// static void setup_mmap_munmap_p2c_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_8_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_9_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_p2c_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_munmap_p2c_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p2c_10_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_munmap_p2c_10_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p2c_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_10_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_11_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
// static void setup_mmap_munmap_p2c_11_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_mmap_munmap_p2c_9_proc0
// static void setup_mmap_munmap_p2c_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_12_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_p2c_12_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_munmap_p2c_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_12_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_13_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_13_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_13_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_munmap_pa8_17_proc0
// static void setup_mmap_munmap_p2c_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_13_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_14_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_14_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_munmap_pa8_14_proc0
// static void setup_mmap_munmap_p2c_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_15_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
// static void setup_mmap_munmap_p2c_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_munmap_p2c_12_proc0
// static void setup_mmap_munmap_p2c_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_15_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_16_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_16_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_p2c_16_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_munmap_p2c_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_17_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_17_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_17_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
static void setup_mmap_munmap_p2c_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_munmap_p2c_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_18_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_18_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_18_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_munmap_p2c_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_18_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_19_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_19_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_19_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
// static void setup_mmap_munmap_p2c_19_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_munmap_p2c_17_proc0
// static void setup_mmap_munmap_p2c_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_19_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_20_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_20_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_20_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_3_common
// static void setup_mmap_munmap_p2c_20_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_mmap_munmap_p2c_16_proc0
// static void setup_mmap_munmap_p2c_20_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_20_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_munmap_pe_16_final
// static void setup_mmap_munmap_p2c_20_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_21_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_21_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_21_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_21_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_munmap_p2c_21_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_21_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_21_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_22_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_22_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_22_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_22_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_munmap_p2c_22_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_22_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_22_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_23_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_23_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_23_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_23_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_23_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_23_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_23_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_24_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_24_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_24_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_85_common
static void setup_mmap_munmap_p2c_24_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_24_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_24_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_24_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_25_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_25_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_25_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_25_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_25_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_25_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_25_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_26_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p2c_26_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_26_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_26_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_19_proc0
// static void setup_mmap_munmap_p2c_26_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_26_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_26_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_27_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_27_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_27_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_27_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_18_proc0
// static void setup_mmap_munmap_p2c_27_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_27_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_27_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_28_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_28_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_28_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_28_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_28_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_28_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_28_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_29_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_29_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_29_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_29_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_29_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_29_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_29_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_30_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_30_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_30_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_30_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_munmap_p2c_28_proc0
// static void setup_mmap_munmap_p2c_30_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_30_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_30_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_31_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p2c_31_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
static void setup_mmap_munmap_p2c_31_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_munmap_p2c_31_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_15_proc0
// static void setup_mmap_munmap_p2c_31_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_31_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_31_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_32_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_4_0
// static int test_mmap_munmap_p2c_32_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_32_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_p2c_31_common
static void setup_mmap_munmap_p2c_32_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x5000);
}
// static void setup_mmap_munmap_p2c_32_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_32_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_32_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_33_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_33_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_33_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_33_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 0, "__i0", 0x1000);
}
// static void setup_mmap_munmap_p2c_33_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_33_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_33_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_34_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_4_0
// static int test_mmap_munmap_p2c_34_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_34_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_34_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x1000);
// }
// ^ See setup_mmap_munmap_p2c_29_proc0
// static void setup_mmap_munmap_p2c_34_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_34_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_34_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_35_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_35_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_35_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
static void setup_mmap_munmap_p2c_35_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_munmap_p2c_35_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_35_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_35_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_36_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_36_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_36_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_36_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_munmap_p2c_25_proc0
// static void setup_mmap_munmap_p2c_36_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_36_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_36_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_37_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_4_0
// static int test_mmap_munmap_p2c_37_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_37_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_37_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x1000);
// }
// ^ See setup_mmap_munmap_p2c_28_proc0
// static void setup_mmap_munmap_p2c_37_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_37_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_37_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_38_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_38_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_38_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_38_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_18_proc0
// static void setup_mmap_munmap_p2c_38_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_38_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_38_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p2c_39_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p2c_39_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p2c_39_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p2c_39_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_munmap_pa8_15_proc0
// static void setup_mmap_munmap_p2c_39_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p2c_39_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p2c_39_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p24_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_0_0
// static int test_mmap_munmap_p24_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p24_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p24_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p24_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p24_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p24_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p24_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_1_0
// static int test_mmap_munmap_p24_1_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p24_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p24_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p24_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p24_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p24_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p24_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_10_0
// static int test_mmap_munmap_p24_2_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p24_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_2_common
// static void setup_mmap_munmap_p24_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p24_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p24_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p24_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p24_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p2c_4_0
// static int test_mmap_munmap_p24_3_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p24_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_munmap_pe_5_common
// static void setup_mmap_munmap_p24_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_munmap_pa8_0_proc0
// static void setup_mmap_munmap_p24_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p24_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_munmap_pe_2_final
// static void setup_mmap_munmap_p24_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
static int test_mmap_munmap_p1_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_munmap_p1_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p1_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p1_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p1_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p1_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p1_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

/*
 * calls: mmap munmap
 */
// static int test_mmap_munmap_p0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_p1_0_0
// static int test_mmap_munmap_p0_0_1(void) {
//   int* va = (int*) 0x12345600000UL;
//   int r = munmap(va, 4096);
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_munmap_pc_0_1
// static void setup_mmap_munmap_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_common
// static void setup_mmap_munmap_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_munmap_pe_0_proc1
// static void setup_mmap_munmap_p0_0_final(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal
// static void setup_mmap_munmap_p0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_munmap_pe_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-mmap_munmap_pe_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_1",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_1_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_2",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_2_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_3",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pe_3_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_4",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_4_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_5",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_6",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_6_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_7",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_7_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_8",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_8_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_9",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_9_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_10",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_10_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_11",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_11_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_12",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_12_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_13",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_13_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_14",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_14_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_15",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_15_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_16",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pe_16_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_17",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_18",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_18_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_19",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_19_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_20",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_20_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_21",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_21_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_22",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_22_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_23",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_23_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_24",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pe_24_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_25",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_25_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_26",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pe_26_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_27",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pe_27_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_28",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_28_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_29",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_29_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_30",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_30_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_31",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_31_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pe_32",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_32_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pc_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pc_1",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_6_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pc_2",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pc_3",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_7_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pc_4",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_8_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pe_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pb8_0",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_0_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_pb8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pb8_1",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_1_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_pb8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pb0_0",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_0_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_pb8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pb0_1",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_1_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_pb8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_0",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_1",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_1_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_2",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pa8_2_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_3",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_3_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_4",
    &setup_mmap_munmap_pa8_4_common,
    { { &setup_mmap_munmap_pa8_4_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pa8_4_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_5",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pa8_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_6",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pa8_6_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_7",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_7_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_8",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pa8_8_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_9",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_9_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_10",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_10_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_11",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_11_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_12",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_12_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_13",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_13_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_14",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_14_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_15",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_15_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_16",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pa8_16_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_17",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_18",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_18_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_19",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_19_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_20",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_20_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_21",
    &setup_mmap_munmap_pe_16_common,
    { { &setup_mmap_munmap_pa8_21_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_22",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_22_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_23",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pa8_23_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_24",
    &setup_mmap_munmap_pa8_24_common,
    { { &setup_mmap_munmap_pa8_24_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_25",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_25_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_26",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_26_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_27",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_27_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_28",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_28_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_29",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_29_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_30",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_30_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_31",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_31_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_32",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_32_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_33",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_33_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_34",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_34_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_35",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_35_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_36",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_36_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_37",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_37_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_38",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_38_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_39",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_39_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_40",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_40_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_41",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_41_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_42",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_42_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_43",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_43_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_44",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_44_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_45",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_45_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_46",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_46_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_47",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_47_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_48",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_48_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_49",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_49_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_50",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_50_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_51",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_51_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_52",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_52_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_53",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_53_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_54",
    &setup_mmap_munmap_pa8_4_common,
    { { &setup_mmap_munmap_pa8_54_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pa8_4_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_55",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pa8_55_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_56",
    &setup_mmap_munmap_pa8_24_common,
    { { &setup_mmap_munmap_pa8_56_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_57",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_57_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_58",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_58_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_59",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_59_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_60",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_60_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_61",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_61_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_62",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_62_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_63",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_63_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_64",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_64_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_65",
    &setup_mmap_munmap_pa8_4_common,
    { { &setup_mmap_munmap_pa8_65_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pa8_4_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_66",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pa8_66_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_67",
    &setup_mmap_munmap_pa8_24_common,
    { { &setup_mmap_munmap_pa8_67_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_68",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_68_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_69",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_69_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_70",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_70_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_71",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_71_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_72",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_72_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_73",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_73_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_74",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_74_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_75",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_75_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_76",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_76_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_77",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_77_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_78",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_78_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_79",
    &setup_mmap_munmap_pa8_4_common,
    { { &setup_mmap_munmap_pa8_79_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pa8_4_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_80",
    &setup_mmap_munmap_pe_3_common,
    { { &setup_mmap_munmap_pa8_80_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_81",
    &setup_mmap_munmap_pa8_24_common,
    { { &setup_mmap_munmap_pa8_81_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_3_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_82",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_pa8_82_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_83",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_83_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_84",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_84_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_85",
    &setup_mmap_munmap_pa8_85_common,
    { { &setup_mmap_munmap_pa8_85_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_86",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_86_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_87",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_87_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_88",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_88_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_89",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_89_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_90",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_90_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_91",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_91_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa8_92",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_92_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pe_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_pa0_0",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_pa8_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p9_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p9_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p8_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p9_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_1",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_7_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_2",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_3",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_4",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_5",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_8_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_6",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_6_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_7",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_7_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_8",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pe_8_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p70_9",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_6_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p50_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p50_1",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p70_3_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p38_0",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_0_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_p38_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p38_1",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_1_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_p38_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p30_0",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_0_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_p38_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p30_1",
    &setup_mmap_munmap_pb8_0_common,
    { { &setup_mmap_munmap_pb8_1_proc0 }, { &setup_mmap_munmap_pb8_0_proc1 } },
    &setup_mmap_munmap_pb8_0_procfinal,
    &setup_mmap_munmap_pb8_0_final,
    { { &test_mmap_munmap_p38_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_0",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_1",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_2",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_3",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_14_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_4",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_4_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_4_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_5",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_5_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_6",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_7",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_14_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_8",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_20_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_9",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_9_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_10",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_11",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_9_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_12",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_12_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_13",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_14",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_14_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_15",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_12_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_16",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_16_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_17",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_18",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_18_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_19",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_17_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_20",
    &setup_mmap_munmap_pa8_3_common,
    { { &setup_mmap_munmap_p2c_16_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_16_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_21",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_21_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_22",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_22_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_23",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_23_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_24",
    &setup_mmap_munmap_pa8_85_common,
    { { &setup_mmap_munmap_p2c_24_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_25",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_25_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_26",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_19_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_27",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_18_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_28",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_28_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_29",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_29_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_30",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_28_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_31",
    &setup_mmap_munmap_p2c_31_common,
    { { &setup_mmap_munmap_pa8_15_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_32",
    &setup_mmap_munmap_p2c_31_common,
    { { &setup_mmap_munmap_p2c_32_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_4_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_33",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_33_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_34",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_29_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_4_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_35",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_35_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_36",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_25_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_37",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_p2c_28_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_4_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_38",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_18_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p2c_39",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_15_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p24_0",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p24_1",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_1_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p24_2",
    &setup_mmap_munmap_pe_2_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_10_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p24_3",
    &setup_mmap_munmap_pe_5_common,
    { { &setup_mmap_munmap_pa8_0_proc0 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_2_final,
    { { &test_mmap_munmap_p2c_4_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p1_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p1_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 0, "munmap" } },
    &cleanup },
  { "fs-mmap_munmap_p0_0",
    &setup_mmap_munmap_pe_0_common,
    { { &setup_mmap_munmap_pe_0_proc1 }, { &setup_mmap_munmap_pe_0_proc1 } },
    &setup_mmap_munmap_pe_0_procfinal,
    &setup_mmap_munmap_pe_0_procfinal,
    { { &test_mmap_munmap_p1_0_0, 0, "mmap" },
      { &test_mmap_munmap_pc_0_1, 1, "munmap" } },
    &cleanup },
//+++ common
  {}
};
