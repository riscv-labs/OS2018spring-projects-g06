//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: open read
 */
static int test_open_read_pfe_0_0(void) {
  int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
  expect_result("r", r, -1);
  expect_errno(17);
  return xerrno(r);
}
static int test_open_read_pfe_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_open_read_pfe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pfe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_read_pfe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_open_read_pfe_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_open_read_pfe_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: open read
 */
// static int test_open_read_pfe_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pfe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pfe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pfe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
static void setup_open_read_pfe_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_open_read_pfe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfd8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
static int test_open_read_pfd8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_open_read_pfd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pfd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_open_read_pfd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pfd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pfd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfd8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pfd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pfd8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pfd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pfd8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pfd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfd0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
static int test_open_read_pfd0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_open_read_pfd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pfd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
static void setup_open_read_pfd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_open_read_pfd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pfd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfd0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pfd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_1_common
// static void setup_open_read_pfd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pfd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pfd0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pfd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
static int test_open_read_pfc_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_open_read_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pfc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pfc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pfc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pfa_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfa_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pfa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_open_read_pfa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_open_read_pfa_0_final(void) {
  unlink("__i0");
}
static void setup_open_read_pfa_0_procfinal(void) {
  
}

/*
 * calls: open read
 */
// static int test_open_read_pfa_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pfa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pfa_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pfa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pfa_1_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_open_read_pfa_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pf8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pf8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pf8_0_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_open_read_pf8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pf8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pf8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pf8_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pf0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfa_0_common
// static void setup_open_read_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pf0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pf0_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pee_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pee_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pee_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfe_0_common
// static void setup_open_read_pee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pee_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pee_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pee_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pee_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfe_1_common
// static void setup_open_read_pee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pee_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pee_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_ped8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_ped8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_ped8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_0_common
// static void setup_open_read_ped8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_ped8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_ped8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_ped8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_ped8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_ped8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_ped8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_1_common
// static void setup_open_read_ped8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_ped8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_ped8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_ped8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_ped0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_ped0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_ped0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_ped0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_ped0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_ped0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_ped0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_ped0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_ped0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_ped0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_ped0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_ped0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_ped0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_ped0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pec_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pec_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_0_common
// static void setup_open_read_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pec_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pec_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_1_common
// static void setup_open_read_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pec_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pea_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pea_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pea_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfa_0_common
// static void setup_open_read_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_0_proc0
// static void setup_open_read_pea_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pea_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pea_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pea_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfa_1_common
// static void setup_open_read_pea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_1_proc0
// static void setup_open_read_pea_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pea_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pe8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pe8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
// static void setup_open_read_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pf8_1_proc0
// static void setup_open_read_pe8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pe8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pe8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pe8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_0_common
// static void setup_open_read_pe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pf8_0_proc0
// static void setup_open_read_pe8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_pe8_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pe0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_EXCL | O_CREAT, 0666);
//   expect_result("r", r, -1);
//   expect_errno(17);
//   return xerrno(r);
// }
// ^ See test_open_read_pfe_0_0
// static int test_open_read_pe0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfa_0_common
// static void setup_open_read_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
static int test_open_read_pdf8_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_read_pdf8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pdf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pdf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pdf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pdf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pdf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdf8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pdf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pdf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pdf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
static void setup_open_read_pdf8_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_open_read_pdf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdee_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdee_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pdee_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pdee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pdee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pdee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pdee_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdee_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdee_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pdee_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pdee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pdee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pdee_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pdee_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdea_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdea_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pdea_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pdea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pdea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pdea_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pdea_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdea_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdea_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pdea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_pdea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pdea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pdea_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pdea_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pde4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pde4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pde4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pde4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pde4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pde4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pde4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pde4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pde4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pde4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pde4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pde4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pde4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pde4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdde_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdde_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pdde_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
static void setup_open_read_pdde_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pdde_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pdde_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pdde_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdde_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdde_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pdde_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pdde_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pdde_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pdde_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pdde_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pdc8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pdc8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pdc8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pdc8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pdc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pdc8_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pdc8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pda_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pda_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pda_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pda_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pda_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pda_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pda_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd78_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pd78_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pd78_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pd78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd78_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd78_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pd78_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pd78_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pd78_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd6e_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd6e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pd6e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd6e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd6e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pd6e_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pd6e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd6e_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd6e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_pd6e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_0_common
// static void setup_open_read_pd6e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd6e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pd6e_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pd6e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd6a_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd6a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pd6a_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd6a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pd6a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pd6a_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pd6a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd6a_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd6a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pd6a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdee_0_common
// static void setup_open_read_pd6a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pd6a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pd6a_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pd6a_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd64_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd64_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pd64_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pd64_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_pd64_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd64_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd64_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pd64_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pde4_1_common
// static void setup_open_read_pd64_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pd64_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pd64_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pd64_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd5c_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd5c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pd5c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pda_0_common
// static void setup_open_read_pd5c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pd5c_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pd5c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pd5c_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd5c_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd5c_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pd5c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdc8_0_common
// static void setup_open_read_pd5c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pd5c_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5062656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pd5c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pd5c_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd48_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pd48_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pd48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pd48_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdde_1_proc0
// static void setup_open_read_pd48_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_pd48_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pd2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pd2_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pd2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pda_0_common
// static void setup_open_read_pd2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pd2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pd2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pd2_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
static int test_open_read_pcf8_0_0(void) {
  int r = open("__f0", O_RDWR | O_CREAT, 0666);
  
  return xerrno(r);
}
// static int test_open_read_pcf8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pcf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pcf8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pcf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pcf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pcf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcf8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pcf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pcf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pcf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pcf8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pcf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcee_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcee_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_pcee_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_pcee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pcee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pcee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pcee_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcee_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcee_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pcee_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pcee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pcee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pcee_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pcee_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcea_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcea_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pcea_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdee_0_common
// static void setup_open_read_pcea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pcea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pcea_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pcea_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcea_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcea_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pcea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_pcea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pcea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pcea_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pcea_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pce4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pce4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pce4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pce4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pce4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pce4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pce4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pce4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pce4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pce4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pce4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pce4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pce4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pce4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcdc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcdc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pcdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
// static void setup_open_read_pcdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdde_0_proc0
// static void setup_open_read_pcdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pcdc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pcdc_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pcdc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pcdc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pcdc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdde_1_common
static void setup_open_read_pcdc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pcdc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pcdc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pcdc_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pccc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pccc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pccc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pccc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pccc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pccc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_pccc_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pccc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pccc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pccc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_open_read_pccc_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pccc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pccc_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pccc_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pca_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pca_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pca_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pca_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pca_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pca_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pca_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc78_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pc78_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pc78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pc78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pc78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc78_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc78_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pc78_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pc78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pc78_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pc78_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc6e_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc6e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_pc6e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_pc6e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc6e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pc6e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pc6e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc6e_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc6e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_pc6e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_pc6e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc6e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pc6e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pc6e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc6a_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc6a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pc6a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_0_common
// static void setup_open_read_pc6a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pc6a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pc6a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pc6a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc6a_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc6a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pc6a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd8_1_common
// static void setup_open_read_pc6a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pc6a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pc6a_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pc6a_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc64_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc64_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pc64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_0_common
// static void setup_open_read_pc64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pc64_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pc64_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc64_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc64_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_pc64_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_1_common
// static void setup_open_read_pc64_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pc64_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pc64_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_pc64_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc58_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc58_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pc58_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
// static void setup_open_read_pc58_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pc58_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_0_proc0
// static void setup_open_read_pc58_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pc58_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc58_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc58_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_pc58_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdde_1_common
// static void setup_open_read_pc58_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pc58_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_1_proc0
// static void setup_open_read_pc58_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_pc58_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc48_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc48_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pc48_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pc48_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pc48_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pc48_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pc48_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc48_1_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc48_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pc48_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_pc48_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
static void setup_open_read_pc48_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pc48_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_pc48_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pc2_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_pc2_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pc2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pca_0_common
// static void setup_open_read_pc2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pc2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pc2_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pc2_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pbf0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pbf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pbf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_pbf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_pbf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pbf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pbf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pbdc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pbdc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_pbdc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_pbdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pbdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pbdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pbdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pbd4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pbd4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pbd4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_pbd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_pbd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_pbd4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pbd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pbc8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pbc8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pbc8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_pbc8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pbc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pbc8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pbc8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pbb8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pbb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_pbb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_open_read_pbb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 25747456, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pbb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pbb8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pbb8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pb90_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pb90_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pb90_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_open_read_pb90_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_pb90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pb90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_pb90_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pb4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pb4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_pb4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_open_read_pb4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pb4_0_final(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal
// static void setup_open_read_pb4_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pac8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pac8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_pac8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_pac8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_pac8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_pac8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_pac8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_pa4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pdf8_0_0
// static int test_open_read_pa4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_pa4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_read_pb4_0_common
// static void setup_open_read_pa4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pa4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_pa4_0_final(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal
// static void setup_open_read_pa4_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p9f0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p9f0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p9f0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p9f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p9f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p9f0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p9f0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p9dc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p9dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_p9dc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p9dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p9dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p9dc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p9dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p9d4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p9d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p9d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_read_p9dc_0_common
// static void setup_open_read_p9d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p9d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p9d4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p9d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p9c8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p9c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p9c8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p9c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p9c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p9c8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p9c8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p9b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p9b8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p9b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_read_pbb8_0_common
static void setup_open_read_p9b8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9990144, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_p9b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p9b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p9b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p990_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p990_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p990_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_read_pbb8_0_common
// static void setup_open_read_p990_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdde_0_proc0
// static void setup_open_read_p990_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p990_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p990_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p94_0_0(void) {
//   int r = open("__f0", O_RDWR | O_CREAT, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_pcf8_0_0
// static int test_open_read_p94_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_read_pb4_0_common
// static void setup_open_read_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p94_0_final(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal
// static void setup_open_read_p94_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
static int test_open_read_p7f0_0_0(void) {
  int r = open("__f0", O_RDWR | O_TRUNC, 0666);
  
  return xerrno(r);
}
// static int test_open_read_p7f0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p7f0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p7f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7f0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p7f0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7f0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7f0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p7f0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p7f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7f0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p7f0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7dc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_p7dc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p7dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7dc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p7dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7dc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7dc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p7dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdee_0_common
// static void setup_open_read_p7dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p7dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7dc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p7dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7d4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p7d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pd6e_0_common
// static void setup_open_read_p7d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p7d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p7d4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p7d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7d4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7d4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_p7d4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p7d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p7d4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p7d4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7c8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p7c8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p7c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7c8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p7c8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7c8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7c8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p7c8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7c8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p7c8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p7c8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p7c8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7bc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7bc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p7bc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
static void setup_open_read_p7bc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 36655104, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_open_read_p7bc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p7bc_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p7bc_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p7bc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p7bc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_p7bc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p7bc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pc48_1_proc1
// static void setup_open_read_p7bc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p7bc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_p7bc_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p790_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p790_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p790_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_p7bc_1_common
// static void setup_open_read_p790_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdde_1_proc0
// static void setup_open_read_p790_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p790_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_p790_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p74_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p74_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pda_0_common
// static void setup_open_read_p74_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p74_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p74_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6f0_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6f0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p6f0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6f0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6f0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p6f0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p6f0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6f0_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6f0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p6f0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6f0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6f0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p6f0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p6f0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6dc_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_p6dc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p6dc_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p6dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6dc_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6dc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p6dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_p6dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p6dc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p6dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6d4_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p6d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pd6a_0_common
// static void setup_open_read_p6d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p6d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p6d4_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p6d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6d4_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6d4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_p6d4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p6d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p6d4_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p6d4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6c8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p6c8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p6c8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pdf8_1_final
// static void setup_open_read_p6c8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6c8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6c8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p6c8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p6c8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p6c8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p6c8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p6c8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6b8_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6b8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p6b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pda_0_common
// static void setup_open_read_p6b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p6b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pd5c_0_proc1
// static void setup_open_read_p6b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p6b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p6b8_1_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p6b8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p6b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdc8_0_common
// static void setup_open_read_p6b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p6b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 5062656, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pd5c_1_proc1
// static void setup_open_read_p6b8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_p6b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p690_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p690_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p690_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p690_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p690_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pccc_0_proc0
// static void setup_open_read_p690_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_p690_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p64_0_0(void) {
//   int r = open("__f0", O_RDWR | O_TRUNC, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p7f0_0_0
// static int test_open_read_p64_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pda_0_common
// static void setup_open_read_p64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p64_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p64_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
static int test_open_read_p5f_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  
  return xerrno(r);
}
// static int test_open_read_p5f_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p5f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pcf8_0_common
// static void setup_open_read_p5f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p5f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5f_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p5f_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5f_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5f_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p5f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pcf8_1_common
// static void setup_open_read_p5f_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p5f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5f_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p5f_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5dc_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p5dc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_p5dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p5dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5dc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p5dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5dc_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5dc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p5dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_p5dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p5dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5dc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p5dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5d4_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p5d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_p5d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p5d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p5d4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p5d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5d4_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5d4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p5d4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_p5d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p5d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p5d4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p5d4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5c8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p5c8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pce4_0_common
// static void setup_open_read_p5c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p5c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5c8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p5c8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5c8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5c8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p5c8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pce4_1_common
// static void setup_open_read_p5c8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p5c8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p5c8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p5c8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5b8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5b8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p5b8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
// static void setup_open_read_p5b8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdde_0_proc0
// static void setup_open_read_p5b8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p5b8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p5b8_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p5b8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p5b8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p5b8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_0_common
// static void setup_open_read_p5b8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pcdc_1_proc0
// static void setup_open_read_p5b8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p5b8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_p5b8_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p598_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p598_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p598_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p598_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 24576, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pb90_0_proc0
// static void setup_open_read_p598_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p598_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p598_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p598_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p598_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p598_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_open_read_p598_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 16384, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pdc8_0_proc0
// static void setup_open_read_p598_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p598_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_p598_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p54_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p54_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p54_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pca_0_common
// static void setup_open_read_p54_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p54_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p54_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p54_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4f_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4f_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p4f_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pc78_0_common
// static void setup_open_read_p4f_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4f_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p4f_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p4f_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4f_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4f_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p4f_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pc78_1_common
// static void setup_open_read_p4f_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4f_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p4f_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p4f_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4dc_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4dc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p4dc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_p4dc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4dc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p4dc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p4dc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4dc_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4dc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p4dc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_p4dc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4dc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p4dc_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p4dc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4d4_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4d4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p4d4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfd0_0_common
// static void setup_open_read_p4d4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p4d4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p4d4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p4d4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4d4_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4d4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p4d4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_ped0_1_common
// static void setup_open_read_p4d4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p4d4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p4d4_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p4d4_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4c8_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4c8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p4c8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_0_common
// static void setup_open_read_p4c8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4c8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p4c8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p4c8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4c8_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4c8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p4c8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pfc_1_common
// static void setup_open_read_p4c8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p4c8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p4c8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_1_final
// static void setup_open_read_p4c8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4b_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4b_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p4b_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pf8_1_common
// static void setup_open_read_p4b_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p4b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_0_proc0
// static void setup_open_read_p4b_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p4b_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p4b_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p4b_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p4b_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pdde_1_common
// static void setup_open_read_p4b_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p4b_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_1_proc0
// static void setup_open_read_p4b_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_1_final
// static void setup_open_read_p4b_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p490_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p490_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p490_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pc48_0_common
// static void setup_open_read_p490_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p490_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pc48_0_proc1
// static void setup_open_read_p490_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p490_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p490_1_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p490_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p490_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pc48_1_common
// static void setup_open_read_p490_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p490_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pc48_1_proc1
// static void setup_open_read_p490_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_open_read_pf8_0_final
// static void setup_open_read_p490_1_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p44_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   
//   return xerrno(r);
// }
// ^ See test_open_read_p5f_0_0
// static int test_open_read_p44_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p44_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_open_read_pca_0_common
// static void setup_open_read_p44_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p44_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p44_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p44_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
static int test_open_read_p3c_0_0(void) {
  int r = open("__f0", O_RDWR, 0666);
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
// static int test_open_read_p3c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
static void setup_open_read_p3c_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p3c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p3c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p3b_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p3b_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
static void setup_open_read_p3b_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p3b_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p3b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p3b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p3b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p3a_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p3a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_p3a_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p3a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p3a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p3a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p3a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p38_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p38_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_open_read_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p34_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p34_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
static void setup_open_read_p34_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_open_read_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_0_proc0
// static void setup_open_read_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p34_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p34_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p30_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
static void setup_open_read_p30_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_open_read_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pf8_1_proc0
// static void setup_open_read_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p30_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p30_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p2_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p2_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p2_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_read_pb4_0_common
// static void setup_open_read_p2_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p2_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p2_0_final(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal
// static void setup_open_read_p2_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p1c_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p1c_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p1c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_read_p3c_0_common
// static void setup_open_read_p1c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p1c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc0
// static void setup_open_read_p1c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p1c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p1b_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p1b_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd8_0_1
// static void setup_open_read_p1b_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_read_p3b_0_common
// static void setup_open_read_p1b_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p1b_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p1b_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p1b_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p1a_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p1a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p1a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_read_p3a_0_common
// static void setup_open_read_p1a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc1
// static void setup_open_read_p1a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd0_0_proc0
// static void setup_open_read_p1a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p1a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p18_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p18_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_open_read_p38_0_common
// static void setup_open_read_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfe_0_proc1
// static void setup_open_read_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_open_read_pfd8_0_proc0
// static void setup_open_read_p18_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_final
// static void setup_open_read_p18_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_open_read_pfe_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p14_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p14_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfd0_0_1
// static void setup_open_read_p14_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_open_read_p34_0_common
// static void setup_open_read_p14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p14_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pfa_0_proc0
// static void setup_open_read_p14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p14_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p10_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p10_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfc_0_1
// static void setup_open_read_p10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_open_read_p30_0_common
// static void setup_open_read_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_open_read_pf8_1_proc0
// static void setup_open_read_p10_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_open_read_pfa_0_final
// static void setup_open_read_p10_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

/*
 * calls: open read
 */
// static int test_open_read_p0_0_0(void) {
//   int r = open("__f0", O_RDWR, 0666);
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_open_read_p3c_0_0
// static int test_open_read_p0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_open_read_pfe_0_1
// static void setup_open_read_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_open_read_pb4_0_common
// static void setup_open_read_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_open_read_pfa_0_proc1
// static void setup_open_read_p0_0_final(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal
// static void setup_open_read_p0_0_procfinal(void) {
//   
// }
// ^ See setup_open_read_pfa_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-open_read_pfe_0",
    &setup_open_read_pfe_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfe_1",
    &setup_open_read_pfe_1_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfd8_0",
    &setup_open_read_pfd8_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfd8_1",
    &setup_open_read_pfd8_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfd0_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfd0_1",
    &setup_open_read_pfd8_1_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfc_0",
    &setup_open_read_pfc_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfc_1",
    &setup_open_read_pfc_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfa_0",
    &setup_open_read_pfa_0_common,
    { { &setup_open_read_pfa_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pfa_1",
    &setup_open_read_pfa_1_common,
    { { &setup_open_read_pfa_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pf8_0",
    &setup_open_read_pf8_0_common,
    { { &setup_open_read_pf8_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pf8_1",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pf8_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pf0_0",
    &setup_open_read_pfa_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pee_0",
    &setup_open_read_pfe_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pee_1",
    &setup_open_read_pfe_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_ped8_0",
    &setup_open_read_pfd8_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_ped8_1",
    &setup_open_read_pfd8_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_ped0_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_ped0_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pec_0",
    &setup_open_read_pfc_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pec_1",
    &setup_open_read_pfc_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pea_0",
    &setup_open_read_pfa_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pea_1",
    &setup_open_read_pfa_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pe8_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pf8_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pe8_1",
    &setup_open_read_pf8_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pf8_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pe0_0",
    &setup_open_read_pfa_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pfe_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pdf8_0",
    &setup_open_read_pdf8_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdf8_1",
    &setup_open_read_pdf8_1_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdee_0",
    &setup_open_read_pdee_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdee_1",
    &setup_open_read_pdee_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdea_0",
    &setup_open_read_pdea_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdea_1",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pde4_0",
    &setup_open_read_pde4_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pde4_1",
    &setup_open_read_pde4_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdde_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pdde_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdde_1",
    &setup_open_read_pdde_1_common,
    { { &setup_open_read_pdde_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pdc8_0",
    &setup_open_read_pdc8_0_common,
    { { &setup_open_read_pdc8_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pda_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pd78_0",
    &setup_open_read_pd78_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd78_1",
    &setup_open_read_pd78_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd6e_0",
    &setup_open_read_pd6e_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd6e_1",
    &setup_open_read_pfd8_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd6a_0",
    &setup_open_read_pd6a_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd6a_1",
    &setup_open_read_pdee_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd64_0",
    &setup_open_read_pd64_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd64_1",
    &setup_open_read_pde4_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd5c_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pd5c_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd5c_1",
    &setup_open_read_pdc8_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pd5c_1_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd48_0",
    &setup_open_read_pd48_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pdde_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pd2_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pcf8_0",
    &setup_open_read_pcf8_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcf8_1",
    &setup_open_read_pcf8_1_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcee_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcee_1",
    &setup_open_read_pcee_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcea_0",
    &setup_open_read_pdee_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcea_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pce4_0",
    &setup_open_read_pce4_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pce4_1",
    &setup_open_read_pce4_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcdc_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pdde_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pcdc_1",
    &setup_open_read_pdde_1_common,
    { { &setup_open_read_pcdc_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pccc_0",
    &setup_open_read_pccc_0_common,
    { { &setup_open_read_pccc_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pccc_1",
    &setup_open_read_pccc_1_common,
    { { &setup_open_read_pccc_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pca_0",
    &setup_open_read_pca_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pc78_0",
    &setup_open_read_pc78_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc78_1",
    &setup_open_read_pc78_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc6e_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc6e_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc6a_0",
    &setup_open_read_pfd8_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc6a_1",
    &setup_open_read_pfd8_1_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc64_0",
    &setup_open_read_pfc_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc64_1",
    &setup_open_read_pfc_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc58_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc58_1",
    &setup_open_read_pdde_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc48_0",
    &setup_open_read_pc48_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pc48_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc48_1",
    &setup_open_read_pc48_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pc48_1_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pc2_0",
    &setup_open_read_pca_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pbf0_0",
    &setup_open_read_pbf0_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pbdc_0",
    &setup_open_read_pbdc_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pbd4_0",
    &setup_open_read_pbd4_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pbc8_0",
    &setup_open_read_pbc8_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pbb8_0",
    &setup_open_read_pbb8_0_common,
    { { &setup_open_read_pbb8_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pb90_0",
    &setup_open_read_pb90_0_common,
    { { &setup_open_read_pb90_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pb4_0",
    &setup_open_read_pb4_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_procfinal,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_pac8_0",
    &setup_open_read_pac8_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_pa4_0",
    &setup_open_read_pb4_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_procfinal,
    { { &test_open_read_pdf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p9f0_0",
    &setup_open_read_p9f0_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p9dc_0",
    &setup_open_read_p9dc_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p9d4_0",
    &setup_open_read_p9dc_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p9c8_0",
    &setup_open_read_p9c8_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p9b8_0",
    &setup_open_read_pbb8_0_common,
    { { &setup_open_read_p9b8_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p990_0",
    &setup_open_read_pbb8_0_common,
    { { &setup_open_read_pdde_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p94_0",
    &setup_open_read_pb4_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_procfinal,
    { { &test_open_read_pcf8_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7f0_0",
    &setup_open_read_p7f0_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7f0_1",
    &setup_open_read_p7f0_1_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7dc_0",
    &setup_open_read_p7dc_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7dc_1",
    &setup_open_read_pdee_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7d4_0",
    &setup_open_read_pd6e_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7d4_1",
    &setup_open_read_p7d4_1_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7c8_0",
    &setup_open_read_p7c8_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7c8_1",
    &setup_open_read_p7c8_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7bc_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_p7bc_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p7bc_1",
    &setup_open_read_p7bc_1_common,
    { { &setup_open_read_pc48_1_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p790_0",
    &setup_open_read_p7bc_1_common,
    { { &setup_open_read_pdde_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p74_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p6f0_0",
    &setup_open_read_p6f0_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6f0_1",
    &setup_open_read_p6f0_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6dc_0",
    &setup_open_read_p6dc_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6dc_1",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6d4_0",
    &setup_open_read_pd6a_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6d4_1",
    &setup_open_read_p6d4_1_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6c8_0",
    &setup_open_read_p6c8_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pdf8_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6c8_1",
    &setup_open_read_p6c8_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6b8_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pd5c_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p6b8_1",
    &setup_open_read_pdc8_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pd5c_1_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p690_0",
    &setup_open_read_p690_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pccc_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p64_0",
    &setup_open_read_pda_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p7f0_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p5f_0",
    &setup_open_read_pcf8_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5f_1",
    &setup_open_read_pcf8_1_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5dc_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5dc_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5d4_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5d4_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5c8_0",
    &setup_open_read_pce4_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5c8_1",
    &setup_open_read_pce4_1_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5b8_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pdde_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p5b8_1",
    &setup_open_read_pf8_0_common,
    { { &setup_open_read_pcdc_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p598_0",
    &setup_open_read_p598_0_common,
    { { &setup_open_read_pb90_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p598_1",
    &setup_open_read_p598_1_common,
    { { &setup_open_read_pdc8_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p54_0",
    &setup_open_read_pca_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p4f_0",
    &setup_open_read_pc78_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4f_1",
    &setup_open_read_pc78_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4dc_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4dc_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4d4_0",
    &setup_open_read_pfd0_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4d4_1",
    &setup_open_read_ped0_1_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4c8_0",
    &setup_open_read_pfc_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4c8_1",
    &setup_open_read_pfc_1_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4b_0",
    &setup_open_read_pf8_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p4b_1",
    &setup_open_read_pdde_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_1_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p490_0",
    &setup_open_read_pc48_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pc48_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p490_1",
    &setup_open_read_pc48_1_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pc48_1_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pf8_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p44_0",
    &setup_open_read_pca_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p5f_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p3c_0",
    &setup_open_read_p3c_0_common,
    { { &setup_open_read_pfe_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p3b_0",
    &setup_open_read_p3b_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p3a_0",
    &setup_open_read_p3a_0_common,
    { { &setup_open_read_pfd0_0_proc0 }, { &setup_open_read_pfd0_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p38_0",
    &setup_open_read_p38_0_common,
    { { &setup_open_read_pfd8_0_proc0 }, { &setup_open_read_pfe_0_proc1 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p34_0",
    &setup_open_read_p34_0_common,
    { { &setup_open_read_pfa_0_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p30_0",
    &setup_open_read_p30_0_common,
    { { &setup_open_read_pf8_1_proc0 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p2_0",
    &setup_open_read_pb4_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_procfinal,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-open_read_p1c_0",
    &setup_open_read_p3c_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfe_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p1b_0",
    &setup_open_read_p3b_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd8_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p1a_0",
    &setup_open_read_p3a_0_common,
    { { &setup_open_read_pfd0_0_proc1 }, { &setup_open_read_pfd0_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p18_0",
    &setup_open_read_p38_0_common,
    { { &setup_open_read_pfe_0_proc1 }, { &setup_open_read_pfd8_0_proc0 } },
    &setup_open_read_pfe_0_procfinal,
    &setup_open_read_pfe_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p14_0",
    &setup_open_read_p34_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfd0_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p10_0",
    &setup_open_read_p30_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pf8_1_proc0 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_final,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfc_0_1, 1, "read" } },
    &cleanup },
  { "fs-open_read_p0_0",
    &setup_open_read_pb4_0_common,
    { { &setup_open_read_pfa_0_proc1 }, { &setup_open_read_pfa_0_proc1 } },
    &setup_open_read_pfa_0_procfinal,
    &setup_open_read_pfa_0_procfinal,
    { { &test_open_read_p3c_0_0, 0, "open" },
      { &test_open_read_pfe_0_1, 1, "read" } },
    &cleanup },
//+++ common
  {}
};
