//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: mmap rename
 */
static int test_mmap_rename_pf0_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
static int test_mmap_rename_pf0_0_1(void) {
  int r = rename("__f0", "__f0");
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_mmap_rename_pf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_pf0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_rename_pf0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_mmap_rename_pf0_0_final(void) {
  unlink("__i0");
}
static void setup_mmap_rename_pf0_0_procfinal(void) {
  
}

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pf0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
static void setup_mmap_rename_pf0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 0, 0);
}
// static void setup_mmap_rename_pf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pf0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pf0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pf0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
static void setup_mmap_rename_pf0_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x0);
}
// static void setup_mmap_rename_pf0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pf0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pf0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_pf0_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_pf0_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x0);
}
// static void setup_mmap_rename_pf0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
static void setup_mmap_rename_pf0_3_final(void) {
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_rename_pf0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_4_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pf0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
static void setup_mmap_rename_pf0_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_anon(0x12345600000, 1, 0);
}
// static void setup_mmap_rename_pf0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pf0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pf0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_5_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pf0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_3_common
static void setup_mmap_rename_pf0_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x0);
}
// static void setup_mmap_rename_pf0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pf0_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pf0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pf0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pf0_6_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pf0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
static void setup_mmap_rename_pf0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x0);
}
// static void setup_mmap_rename_pf0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pf0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pf0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
static int test_mmap_rename_pe8_0_1(void) {
  int r = rename("__f0", "__f1");
  expect_result("r", r, 0);
  return xerrno(r);
}
static void setup_mmap_rename_pe8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pe8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_pe8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_rename_pf0_1_proc0
// static void setup_mmap_rename_pe8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe8_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
static void setup_mmap_rename_pe8_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i0", 0x2000);
}
// static void setup_mmap_rename_pe8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe8_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pe8_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_pe8_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i2", 0x2000);
}
// static void setup_mmap_rename_pe8_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
static void setup_mmap_rename_pe8_4_final(void) {
  unlink("__i1");
  unlink("__i2");
  unlink("__i0");
}
// static void setup_mmap_rename_pe8_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pe8_5_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_pe8_5_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 0, "__i1", 0x2000);
}
// static void setup_mmap_rename_pe8_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
static void setup_mmap_rename_pe8_5_final(void) {
  unlink("__i0");
  unlink("__i1");
}
// static void setup_mmap_rename_pe8_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_pe8_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_rename_pf0_4_proc0
// static void setup_mmap_rename_pe8_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe8_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_7_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_5_common
static void setup_mmap_rename_pe8_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i1", 0x2000);
}
// static void setup_mmap_rename_pe8_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pe8_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_8_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pe8_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pe8_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_rename_pf0_1_proc0
// static void setup_mmap_rename_pe8_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pe8_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_9_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_8_common
// static void setup_mmap_rename_pe8_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x2000);
// }
// ^ See setup_mmap_rename_pe8_5_proc0
// static void setup_mmap_rename_pe8_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_9_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pe8_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_10_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_10_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_10_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_pe8_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_rename_pf0_4_proc0
// static void setup_mmap_rename_pe8_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_10_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe8_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_11_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_11_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_4_common
static void setup_mmap_rename_pe8_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i2", 0x2000);
}
// static void setup_mmap_rename_pe8_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_11_final(void) {
//   unlink("__i1");
//   unlink("__i2");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pe8_4_final
// static void setup_mmap_rename_pe8_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_12_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_12_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_pe8_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x2000);
// }
// ^ See setup_mmap_rename_pe8_3_proc0
// static void setup_mmap_rename_pe8_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_12_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe8_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_13_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_13_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_13_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
static void setup_mmap_rename_pe8_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  init_map_file(0x12345600000, 1, "__i0", 0x2000);
}
// static void setup_mmap_rename_pe8_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_13_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe8_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_14_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_14_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_8_common
// static void setup_mmap_rename_pe8_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x2000);
// }
// ^ See setup_mmap_rename_pe8_7_proc0
// static void setup_mmap_rename_pe8_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_14_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pe8_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe8_15_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe8_15_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe8_15_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_pe8_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x2000);
// }
// ^ See setup_mmap_rename_pe8_13_proc0
// static void setup_mmap_rename_pe8_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe8_15_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe8_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pe0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_rename_pf0_1_proc0
// static void setup_mmap_rename_pe0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pe0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_rename_pf0_2_proc0
// static void setup_mmap_rename_pe0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_3_common
// static void setup_mmap_rename_pe0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i1", 0x0);
// }
// ^ See setup_mmap_rename_pf0_3_proc0
// static void setup_mmap_rename_pe0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pe0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_rename_pf0_4_proc0
// static void setup_mmap_rename_pe0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_3_common
// static void setup_mmap_rename_pe0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i1", 0x0);
// }
// ^ See setup_mmap_rename_pf0_5_proc0
// static void setup_mmap_rename_pe0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_pe0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pe0_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pe0_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pe0_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pe0_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_rename_pf0_6_proc0
// static void setup_mmap_rename_pe0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pe0_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pe0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pc_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
static int test_mmap_rename_pc_0_1(void) {
  int r = rename("__f0", "__f0");
  expect_result("r", r, -1);
  expect_errno(2);
  return xerrno(r);
}
static void setup_mmap_rename_pc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_mmap_rename_pc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_0_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_pc_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pc_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_pc_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_pc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 0, 0);
// }
// ^ See setup_mmap_rename_pf0_1_proc0
// static void setup_mmap_rename_pc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_1_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_pc_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pc_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
static void setup_mmap_rename_pc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
// static void setup_mmap_rename_pc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 0, "__i0", 0x0);
// }
// ^ See setup_mmap_rename_pf0_2_proc0
// static void setup_mmap_rename_pc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pc_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pc_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_pc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_pc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_anon(0x12345600000, 1, 0);
// }
// ^ See setup_mmap_rename_pf0_4_proc0
// static void setup_mmap_rename_pc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_3_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_pc_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pc_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_0
// static int test_mmap_rename_pc_4_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_pc_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_rename_pc_2_common
// static void setup_mmap_rename_pc_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   init_map_file(0x12345600000, 1, "__i0", 0x0);
// }
// ^ See setup_mmap_rename_pf0_6_proc0
// static void setup_mmap_rename_pc_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pc_4_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pc_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_pbc_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_rename_pbc_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_pbc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_pbc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_rename_pbc_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_mmap_rename_pbc_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_mmap_rename_pbc_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pbc_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pbc_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_pbc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pbc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pbc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
static void setup_mmap_rename_pbc_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_mmap_rename_pbc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pbc_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pbc_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pbc_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
static void setup_mmap_rename_pbc_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_mmap_rename_pbc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pbc_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pbc_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pbc_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pbc_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pbc_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_pbc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pbc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pbc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pbc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pba_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pba_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pba_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pba_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pba_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pba_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pba_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
static void setup_mmap_rename_pba_1_final(void) {
  unlink("__i2");
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_rename_pba_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pba_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pba_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pba_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pba_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pba_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pba_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pba_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pba_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_pba_4_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pba_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pba_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
static void setup_mmap_rename_pba_4_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_mmap_rename_pba_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_5_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pba_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_4_common
// static void setup_mmap_rename_pba_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pba_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_4_final
// static void setup_mmap_rename_pba_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_6_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pba_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_1_common
// static void setup_mmap_rename_pba_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pba_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_6_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_1_final
// static void setup_mmap_rename_pba_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_7_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_7_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pba_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_3_common
// static void setup_mmap_rename_pba_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pba_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pba_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_8_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_8_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pba_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_2_common
// static void setup_mmap_rename_pba_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pba_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pba_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pba_9_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pba_9_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pba_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_0_common
// static void setup_mmap_rename_pba_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pba_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pba_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pba_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb8_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_pb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pb8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb8_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_pb8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pb8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb8_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb8_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_pb8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb8_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pb8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb8_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb8_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_pb8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_pb8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb0_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
static void setup_mmap_rename_pb0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_mmap_rename_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pb0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pb0_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pbc_0_0
// static int test_mmap_rename_pb0_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_pb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_rename_pb0_0_common
// static void setup_mmap_rename_pb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_pb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_pb0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_pb0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_pac_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, 1250999402496);
  return xerrno(r);
}
// static int test_mmap_rename_pac_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
static void setup_mmap_rename_pac_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pac_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pac_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pac_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_pac_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_pac_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_pac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pac_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pac_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_paa_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_paa_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_paa_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
static void setup_mmap_rename_paa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 8192, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_paa_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_paa_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_paa_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_paa_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_paa_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_paa_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_paa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_paa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
static void setup_mmap_rename_paa_1_final(void) {
  unlink("__i2");
  unlink("__i1");
  unlink("__i0");
}
// static void setup_mmap_rename_paa_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_paa_2_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_paa_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_paa_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_paa_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_paa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_paa_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_paa_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_paa_3_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_paa_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_paa_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_paa_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_paa_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_paa_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_paa_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_paa_4_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_paa_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_paa_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_paa_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_paa_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_paa_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_paa_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pa8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_pa8_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pa8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_pa8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pa8_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pa8_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_pa8_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pac_1_common
// static void setup_mmap_rename_pa8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_pa8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pa8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_pa0_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, 1250999402496);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pac_0_0
// static int test_mmap_rename_pa0_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_rename_pc_2_common
// static void setup_mmap_rename_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p98_0_0(void) {
  int* va = (int*) 0x12345600000UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_rename_p98_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p98_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p98_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p98_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p98_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p98_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p94_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p98_0_0
// static int test_mmap_rename_p94_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p94_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p94_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p94_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p94_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p94_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p94_1_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p98_0_0
// static int test_mmap_rename_p94_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p94_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p94_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p94_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p94_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p94_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p90_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p98_0_0
// static int test_mmap_rename_p90_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p90_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p90_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p8_0_0(void) {
//   int* va = (int*) 0x12345600000UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED | MAP_FIXED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p98_0_0
// static int test_mmap_rename_p8_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_p8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p8_0_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_p8_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p78_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p78_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p78_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p78_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p78_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p78_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p78_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p78_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p78_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p6c_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_0_0
// static int test_mmap_rename_p6c_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p6c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p6c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p6c_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p6c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_0_0
// static int test_mmap_rename_p6c_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p6c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p6c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p6c_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p6c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_1_0
// static int test_mmap_rename_p6c_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p6c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p6c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p6c_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p6c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_1_0
// static int test_mmap_rename_p6c_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p6c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p6c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p6c_3_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p6c_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p64_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_0_0
// static int test_mmap_rename_p64_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p64_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p64_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p64_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_1_0
// static int test_mmap_rename_p64_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p64_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p64_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p64_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p64_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p64_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p50_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_0_0
// static int test_mmap_rename_p50_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p50_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_p50_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p50_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p50_0_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_p50_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p50_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p78_1_0
// static int test_mmap_rename_p50_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p50_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_p50_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p50_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p50_1_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_p50_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p3c_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(19);
  return xerrno(r);
}
// static int test_mmap_rename_p3c_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p3c_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_p3c_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3c_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3c_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p3c_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3c_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3c_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p3c_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_p3c_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3c_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3c_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3c_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3c_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3c_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p3c_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_p3c_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3c_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3c_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p3c_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3c_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3c_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p3c_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_p3c_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3c_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3c_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3c_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_0_common
// static void setup_mmap_rename_p3a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p3a_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_1_common
// static void setup_mmap_rename_p3a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_1_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_1_final
// static void setup_mmap_rename_p3a_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_2_common
// static void setup_mmap_rename_p3a_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3a_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3a_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_3_common
// static void setup_mmap_rename_p3a_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3a_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3a_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_4_common
// static void setup_mmap_rename_p3a_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p3a_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_4_final
// static void setup_mmap_rename_p3a_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_4_common
// static void setup_mmap_rename_p3a_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3a_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_4_final
// static void setup_mmap_rename_p3a_5_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_1_common
// static void setup_mmap_rename_p3a_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3a_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_6_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pba_1_final
// static void setup_mmap_rename_p3a_6_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_7_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_3_common
// static void setup_mmap_rename_p3a_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3a_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3a_7_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_8_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_8_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_8_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_2_common
// static void setup_mmap_rename_p3a_8_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3a_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_8_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p3a_8_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p3a_9_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p3a_9_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p3a_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pba_0_common
// static void setup_mmap_rename_p3a_9_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p3a_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p3a_9_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p3a_9_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p38_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p38_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p38_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p38_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_p38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p38_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p38_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p38_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p38_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p38_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_0_common
// static void setup_mmap_rename_p38_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p38_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p38_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p38_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p38_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p38_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p38_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pbc_1_common
// static void setup_mmap_rename_p38_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p38_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p38_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_1_final
// static void setup_mmap_rename_p38_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p30_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p30_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_rename_pb0_0_common
// static void setup_mmap_rename_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc0
// static void setup_mmap_rename_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p30_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(19);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p3c_0_0
// static int test_mmap_rename_p30_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_mmap_rename_pb0_0_common
// static void setup_mmap_rename_p30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_2_proc0
// static void setup_mmap_rename_p30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_mmap_rename_pbc_0_proc1
// static void setup_mmap_rename_p30_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_final
// static void setup_mmap_rename_p30_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_mmap_rename_pbc_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2e_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2e_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p2e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2e_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2e_1_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2e_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_p2e_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_p2e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2e_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2e_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_1_0
// static int test_mmap_rename_p2e_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
static void setup_mmap_rename_p2e_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_p2e_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2e_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2e_3_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2e_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_1_common
// static void setup_mmap_rename_p2e_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2e_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2e_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_3_0
// static int test_mmap_rename_p2e_4_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_2_common
// static void setup_mmap_rename_p2e_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2e_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2e_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2e_5_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_2_common
// static void setup_mmap_rename_p2e_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_5_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2e_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2e_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2e_6_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_1_common
// static void setup_mmap_rename_p2e_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2e_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2e_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p2e_7_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p2e_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_2_common
// static void setup_mmap_rename_p2e_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2e_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2e_7_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2e_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2b0_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p2b0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2b0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2b0_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_paa_1_common
// static void setup_mmap_rename_p2b0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_1_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_paa_1_final
// static void setup_mmap_rename_p2b0_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2b0_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_paa_2_common
// static void setup_mmap_rename_p2b0_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2b0_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_paa_3_common
// static void setup_mmap_rename_p2b0_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p2b0_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p2b0_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_4_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p2b0_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p2b0_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p2b0_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 8192, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_paa_0_proc0
// static void setup_mmap_rename_p2b0_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_5_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p2b0_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_6_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x16de000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_6_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_6_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_6_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_paa_1_final
// static void setup_mmap_rename_p2b0_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_7_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x8ea000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_7_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_7_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_7_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 9347072, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2b0_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_8_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x261000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_8_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_8_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_8_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2494464, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_8_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_8_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p2b0_8_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_9_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1fa3000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_9_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_9_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i2", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i2", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2b0_6_common
static void setup_mmap_rename_p2b0_9_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 33173504, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_9_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_9_final(void) {
//   unlink("__i2");
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_paa_1_final
// static void setup_mmap_rename_p2b0_9_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_10_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x22f1000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_10_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_10_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_p2b0_10_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 20480, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p2b0_6_proc0
// static void setup_mmap_rename_p2b0_10_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_10_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_10_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_11_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_3_0
// static int test_mmap_rename_p2b0_11_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_11_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_paa_2_common
static void setup_mmap_rename_p2b0_11_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 28672, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_11_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_11_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_11_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_12_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_3_0
// static int test_mmap_rename_p2b0_12_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_12_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p2b0_12_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 28672, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p2b0_11_proc0
// static void setup_mmap_rename_p2b0_12_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_12_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2b0_12_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_13_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x705000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_13_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_13_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_13_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 7360512, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_13_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_13_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_13_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_14_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x705000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_14_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_14_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2b0_7_common
// static void setup_mmap_rename_p2b0_14_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7360512, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p2b0_13_proc0
// static void setup_mmap_rename_p2b0_14_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_14_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p2b0_14_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_15_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x705000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2b0_14_0
// static int test_mmap_rename_p2b0_15_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_15_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i2", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i2", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i2", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_p2b0_15_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 7360512, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p2b0_13_proc0
// static void setup_mmap_rename_p2b0_15_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
static void setup_mmap_rename_p2b0_15_final(void) {
  unlink("__i0");
  unlink("__i1");
  unlink("__i2");
}
// static void setup_mmap_rename_p2b0_15_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p2b0_16_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p2b0_16_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_16_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i1", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i0", "__f1");
  if (r < 0) setup_error("link");
}
// static void setup_mmap_rename_p2b0_16_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p2b0_16_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_16_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_16_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_17_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x20ae000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_17_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_17_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_17_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 34267136, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_17_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_17_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p2b0_17_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_18_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x20ae000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_18_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p2b0_18_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2b0_8_common
// static void setup_mmap_rename_p2b0_18_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 34267136, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p2b0_17_proc0
// static void setup_mmap_rename_p2b0_18_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_18_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p2b0_18_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p2b0_19_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x263000UL);
  
  return xerrno(r);
}
// static int test_mmap_rename_p2b0_19_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
static void setup_mmap_rename_p2b0_19_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = link("__i0", "__f0");
  if (r < 0) setup_error("link");
  r = link("__i1", "__f1");
  if (r < 0) setup_error("link");
}
static void setup_mmap_rename_p2b0_19_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 2502656, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p2b0_19_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p2b0_19_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p2b0_19_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p29_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p29_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p29_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p29_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pac_1_common
// static void setup_mmap_rename_p29_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p29_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p29_2_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_2_common
static void setup_mmap_rename_p29_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_mmap_rename_p29_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p29_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p29_3_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pac_1_common
// static void setup_mmap_rename_p29_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p29_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_4_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p29_4_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i1", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_2_common
// static void setup_mmap_rename_p29_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 4096, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_p29_2_proc0
// static void setup_mmap_rename_p29_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_4_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_mmap_rename_pe8_5_final
// static void setup_mmap_rename_p29_4_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_5_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_1_0
// static int test_mmap_rename_p29_5_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_5_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_1_common
// static void setup_mmap_rename_p29_5_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_5_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_5_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p29_5_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_6_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p29_6_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_6_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p29_6_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_6_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_6_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p29_6_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p29_7_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_3_0
// static int test_mmap_rename_p29_7_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p29_7_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_p2e_1_common
// static void setup_mmap_rename_p29_7_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p29_7_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p29_7_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p29_7_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p24_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_0_0
// static int test_mmap_rename_p24_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p24_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_rename_pc_2_common
// static void setup_mmap_rename_p24_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p24_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p24_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p24_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p24_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_1_0
// static int test_mmap_rename_p24_1_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
static void setup_mmap_rename_p24_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_mmap_rename_p24_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p24_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p24_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p24_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p24_2_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x0UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_6_0
// static int test_mmap_rename_p24_2_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p24_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_mmap_rename_pc_2_common
// static void setup_mmap_rename_p24_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p24_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p24_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p24_2_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p24_3_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ | PROT_WRITE, MAP_SHARED, 10, 0x1000UL);
//   
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p2e_3_0
// static int test_mmap_rename_p24_3_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p24_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_mmap_rename_p24_1_common
// static void setup_mmap_rename_p24_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_mmap_rename_pac_0_proc0
// static void setup_mmap_rename_p24_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p24_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p24_3_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
static int test_mmap_rename_p18_0_0(void) {
  int* va = (int*) 0x0UL;
  long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
  expect_result("r", r, -1);
  expect_errno(9);
  return xerrno(r);
}
// static int test_mmap_rename_p18_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pf0_0_1
// static void setup_mmap_rename_p18_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p18_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p18_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p18_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p18_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p14_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p18_0_0
// static int test_mmap_rename_p14_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p14_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i0", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_0_common
// static void setup_mmap_rename_p14_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p14_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p14_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p14_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p14_1_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p18_0_0
// static int test_mmap_rename_p14_1_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p14_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
//   r = link("__i1", "__f1");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pe8_1_common
// static void setup_mmap_rename_p14_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p14_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p14_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_3_final
// static void setup_mmap_rename_p14_1_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p10_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p18_0_0
// static int test_mmap_rename_p10_0_1(void) {
//   int r = rename("__f0", "__f1");
//   expect_result("r", r, 0);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pe8_0_1
// static void setup_mmap_rename_p10_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = link("__i0", "__f0");
//   if (r < 0) setup_error("link");
// }
// ^ See setup_mmap_rename_pf0_0_common
// static void setup_mmap_rename_p10_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p10_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p10_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_mmap_rename_pf0_0_final
// static void setup_mmap_rename_p10_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

/*
 * calls: mmap rename
 */
// static int test_mmap_rename_p0_0_0(void) {
//   int* va = (int*) 0x0UL;
//   long r = (intptr_t) mmap(va, 4096, PROT_READ, MAP_SHARED, 10, 0x0UL);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_p18_0_0
// static int test_mmap_rename_p0_0_1(void) {
//   int r = rename("__f0", "__f0");
//   expect_result("r", r, -1);
//   expect_errno(2);
//   return xerrno(r);
// }
// ^ See test_mmap_rename_pc_0_1
// static void setup_mmap_rename_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_mmap_rename_pc_0_common
// static void setup_mmap_rename_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_mmap_rename_pf0_0_proc1
// static void setup_mmap_rename_p0_0_final(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal
// static void setup_mmap_rename_p0_0_procfinal(void) {
//   
// }
// ^ See setup_mmap_rename_pf0_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-mmap_rename_pf0_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_1",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_1_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_2",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_2_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_3",
    &setup_mmap_rename_pf0_3_common,
    { { &setup_mmap_rename_pf0_3_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_4",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_5",
    &setup_mmap_rename_pf0_3_common,
    { { &setup_mmap_rename_pf0_5_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pf0_6",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_6_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_1",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_2",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_1_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_3",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pe8_3_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_4",
    &setup_mmap_rename_pe8_4_common,
    { { &setup_mmap_rename_pe8_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_4_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_5",
    &setup_mmap_rename_pe8_5_common,
    { { &setup_mmap_rename_pe8_5_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_6",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_7",
    &setup_mmap_rename_pe8_5_common,
    { { &setup_mmap_rename_pe8_7_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_8",
    &setup_mmap_rename_pe8_8_common,
    { { &setup_mmap_rename_pf0_1_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_9",
    &setup_mmap_rename_pe8_8_common,
    { { &setup_mmap_rename_pe8_5_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_10",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_11",
    &setup_mmap_rename_pe8_4_common,
    { { &setup_mmap_rename_pe8_11_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_4_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_12",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pe8_3_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_13",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pe8_13_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_14",
    &setup_mmap_rename_pe8_8_common,
    { { &setup_mmap_rename_pe8_7_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe8_15",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pe8_13_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_1",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_1_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_2",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_2_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_3",
    &setup_mmap_rename_pf0_3_common,
    { { &setup_mmap_rename_pf0_3_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_4",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_5",
    &setup_mmap_rename_pf0_3_common,
    { { &setup_mmap_rename_pf0_5_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pe0_6",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_6_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pc_0",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pc_1",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_1_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pc_2",
    &setup_mmap_rename_pc_2_common,
    { { &setup_mmap_rename_pf0_2_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pc_3",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_4_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pc_4",
    &setup_mmap_rename_pc_2_common,
    { { &setup_mmap_rename_pf0_6_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pf0_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pbc_0",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pbc_1",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pbc_2",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pbc_3",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_0",
    &setup_mmap_rename_pba_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_1",
    &setup_mmap_rename_pba_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_2",
    &setup_mmap_rename_pba_2_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_3",
    &setup_mmap_rename_pba_3_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_4",
    &setup_mmap_rename_pba_4_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_4_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_5",
    &setup_mmap_rename_pba_4_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_4_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_6",
    &setup_mmap_rename_pba_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_7",
    &setup_mmap_rename_pba_3_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_8",
    &setup_mmap_rename_pba_2_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pba_9",
    &setup_mmap_rename_pba_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb8_0",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb8_1",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb8_2",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb8_3",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb0_0",
    &setup_mmap_rename_pb0_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pb0_1",
    &setup_mmap_rename_pb0_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_pbc_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pac_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pac_1",
    &setup_mmap_rename_pac_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_paa_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_paa_1",
    &setup_mmap_rename_paa_1_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_paa_1_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_paa_2",
    &setup_mmap_rename_paa_2_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_paa_3",
    &setup_mmap_rename_paa_3_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_paa_4",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pa8_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pa8_1",
    &setup_mmap_rename_pac_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_pa0_0",
    &setup_mmap_rename_pc_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_pac_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p98_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p98_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p94_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p98_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p94_1",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p98_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p90_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p98_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p8_0",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_p98_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p78_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p78_1",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_1_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p6c_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p6c_1",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p78_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p6c_2",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_1_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p6c_3",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p78_1_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p64_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p64_1",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p78_1_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p50_0",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_p78_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p50_1",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_p78_1_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3c_0",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3c_1",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3c_2",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3c_3",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_0",
    &setup_mmap_rename_pba_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_1",
    &setup_mmap_rename_pba_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_2",
    &setup_mmap_rename_pba_2_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_3",
    &setup_mmap_rename_pba_3_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_4",
    &setup_mmap_rename_pba_4_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_4_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_5",
    &setup_mmap_rename_pba_4_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_4_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_6",
    &setup_mmap_rename_pba_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pba_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_7",
    &setup_mmap_rename_pba_3_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_8",
    &setup_mmap_rename_pba_2_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p3a_9",
    &setup_mmap_rename_pba_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p38_0",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p38_1",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p38_2",
    &setup_mmap_rename_pbc_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p38_3",
    &setup_mmap_rename_pbc_1_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_1_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p30_0",
    &setup_mmap_rename_pb0_0_common,
    { { &setup_mmap_rename_pbc_0_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p30_1",
    &setup_mmap_rename_pb0_0_common,
    { { &setup_mmap_rename_pbc_2_proc0 }, { &setup_mmap_rename_pbc_0_proc1 } },
    &setup_mmap_rename_pbc_0_procfinal,
    &setup_mmap_rename_pbc_0_final,
    { { &test_mmap_rename_p3c_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_1",
    &setup_mmap_rename_p2e_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_1_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_2",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_1_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_3",
    &setup_mmap_rename_p2e_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_4",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_5",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_6",
    &setup_mmap_rename_p2e_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2e_7",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_1",
    &setup_mmap_rename_paa_1_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_paa_1_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_2",
    &setup_mmap_rename_paa_2_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_3",
    &setup_mmap_rename_paa_3_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_4",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_5",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_paa_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_6",
    &setup_mmap_rename_p2b0_6_common,
    { { &setup_mmap_rename_p2b0_6_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_paa_1_final,
    { { &test_mmap_rename_p2b0_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_7",
    &setup_mmap_rename_p2b0_7_common,
    { { &setup_mmap_rename_p2b0_7_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2b0_7_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_8",
    &setup_mmap_rename_p2b0_8_common,
    { { &setup_mmap_rename_p2b0_8_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p2b0_8_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_9",
    &setup_mmap_rename_p2b0_6_common,
    { { &setup_mmap_rename_p2b0_9_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_paa_1_final,
    { { &test_mmap_rename_p2b0_9_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_10",
    &setup_mmap_rename_p2b0_10_common,
    { { &setup_mmap_rename_p2b0_6_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2b0_10_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_11",
    &setup_mmap_rename_paa_2_common,
    { { &setup_mmap_rename_p2b0_11_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_12",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_p2b0_11_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_13",
    &setup_mmap_rename_p2b0_13_common,
    { { &setup_mmap_rename_p2b0_13_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2b0_13_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_14",
    &setup_mmap_rename_p2b0_7_common,
    { { &setup_mmap_rename_p2b0_13_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2b0_14_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_15",
    &setup_mmap_rename_p2b0_15_common,
    { { &setup_mmap_rename_p2b0_13_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_p2b0_15_final,
    { { &test_mmap_rename_p2b0_14_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_16",
    &setup_mmap_rename_p2b0_16_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_17",
    &setup_mmap_rename_p2b0_17_common,
    { { &setup_mmap_rename_p2b0_17_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2b0_17_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_18",
    &setup_mmap_rename_p2b0_8_common,
    { { &setup_mmap_rename_p2b0_17_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p2b0_18_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p2b0_19",
    &setup_mmap_rename_p2b0_19_common,
    { { &setup_mmap_rename_p2b0_19_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p2b0_19_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_1",
    &setup_mmap_rename_pac_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_2",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_p29_2_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_3",
    &setup_mmap_rename_pac_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_4",
    &setup_mmap_rename_p2e_2_common,
    { { &setup_mmap_rename_p29_2_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pe8_5_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_5",
    &setup_mmap_rename_p2e_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_1_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_6",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p29_7",
    &setup_mmap_rename_p2e_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p24_0",
    &setup_mmap_rename_pc_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p24_1",
    &setup_mmap_rename_p24_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_1_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p24_2",
    &setup_mmap_rename_pc_2_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_6_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p24_3",
    &setup_mmap_rename_p24_1_common,
    { { &setup_mmap_rename_pac_0_proc0 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p2e_3_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p18_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p18_0_0, 0, "mmap" },
      { &test_mmap_rename_pf0_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p14_0",
    &setup_mmap_rename_pe8_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p18_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p14_1",
    &setup_mmap_rename_pe8_1_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_3_final,
    { { &test_mmap_rename_p18_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p10_0",
    &setup_mmap_rename_pf0_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_final,
    { { &test_mmap_rename_p18_0_0, 0, "mmap" },
      { &test_mmap_rename_pe8_0_1, 0, "rename" } },
    &cleanup },
  { "fs-mmap_rename_p0_0",
    &setup_mmap_rename_pc_0_common,
    { { &setup_mmap_rename_pf0_0_proc1 }, { &setup_mmap_rename_pf0_0_proc1 } },
    &setup_mmap_rename_pf0_0_procfinal,
    &setup_mmap_rename_pf0_0_procfinal,
    { { &test_mmap_rename_p18_0_0, 0, "mmap" },
      { &test_mmap_rename_pc_0_1, 0, "rename" } },
    &cleanup },
//+++ common
  {}
};
