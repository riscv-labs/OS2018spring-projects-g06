//+++ common
#define _GNU_SOURCE 1
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <setjmp.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/mman.h>
#include <stdint.h>
#include <stdbool.h>
#include "fstest.h"

__attribute__((__unused__)) static void
init_map_anon(uintptr_t va, bool writable, char value)
{
  char *r = mmap((void*)va, 4096, PROT_READ | PROT_WRITE,
                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
  if (r == MAP_FAILED) setup_error("mmap");
  *r = value;
  if (!writable) {
    int r2 = mprotect(r, 4096, PROT_READ);
    if (r2 < 0) setup_error("mprotect");
  }
  // Ensure test cores don't shoot down the setup core
  xinvalidate(r, 4096);
}

__attribute__((__unused__)) static void
init_map_file(uintptr_t va, bool writable, const char *fname, off_t offset)
{
  int fd = open(fname, O_RDWR);
  if (fd < 0) setup_error("open");
  void *r = mmap((void*)va, 4096, PROT_READ | (writable ? PROT_WRITE : 0),
                 MAP_SHARED | MAP_FIXED, fd, offset);
  if (r == MAP_FAILED) setup_error("mmap");
  close(fd);
}

__attribute__((__weak__)) const char dataval0[4096] = {0};
__attribute__((__weak__)) const char dataval1[4096] = {1};
__attribute__((__weak__)) const char dataval2[4096] = {2};
__attribute__((__weak__)) const char dataval3[4096] = {3};
__attribute__((__weak__)) const char dataval4[4096] = {4};
__attribute__((__weak__)) const char dataval5[4096] = {5};
__attribute__((__weak__)) const char dataval6[4096] = {6};
__attribute__((__weak__)) const char dataval7[4096] = {7};
__attribute__((__weak__)) const char dataval8[4096] = {8};
__attribute__((__weak__)) const char dataval9[4096] = {9};
__attribute__((__weak__)) const char dataval10[4096] = {10};
__attribute__((__weak__)) const char dataval11[4096] = {11};
__attribute__((__weak__)) const char dataval12[4096] = {12};
__attribute__((__weak__)) const char dataval13[4096] = {13};
__attribute__((__weak__)) const char dataval14[4096] = {14};
__attribute__((__weak__)) const char dataval15[4096] = {15};
__attribute__((__weak__)) char datavalbuf[4096];

//+++ tests

/*
 * calls: read read
 */
static int test_read_read_pfe_0_0(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
static int test_read_read_pfe_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, -1);
  expect_errno(9);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_read_read_pfe_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pfe_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pfe_0_final(void) {
  unlink("__i0");
  close(20);
  close(21);
}
static void setup_read_read_pfe_0_procfinal(void) {
  close(20);
  close(21);
}

/*
 * calls: read read
 */
// static int test_read_read_pfe_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_pfe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc0
// static void setup_read_read_pfe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
static void setup_read_read_pfe_1_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
}
// static void setup_read_read_pfe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfe_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfe_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_pfe_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfe_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pfe_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pfe_2_final(void) {
  unlink("__i0");
  close(20);
  close(21);
  close(22);
  close(23);
}
static void setup_read_read_pfe_2_procfinal(void) {
  close(20);
  close(21);
  close(22);
  close(23);
}

/*
 * calls: read read
 */
// static int test_read_read_pfe_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfe_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_pfe_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfe_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc0
// static void setup_read_read_pfe_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
static void setup_read_read_pfe_3_final(void) {
  unlink("__i0");
  unlink("__i1");
  close(20);
  close(21);
  close(22);
  close(23);
}
// static void setup_read_read_pfe_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfe_4_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfe_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pfe_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
static void setup_read_read_pfe_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfe_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfe_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pfe_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_pfd8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_read_read_pfd8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pfd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_pfd8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pfd8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pfd8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd8_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfd8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_pfd8_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfd8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_0_proc0
// static void setup_read_read_pfd8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfd8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pfd8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd8_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfd8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_pfd8_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfd8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_1_proc0
// static void setup_read_read_pfd8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pfd8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pfd8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_pfd0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_read_read_pfd0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pfd0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pfd0_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfd0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pfd0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfd0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc0
// static void setup_read_read_pfd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc1
// static void setup_read_read_pfd0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pfd0_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfc_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_pfc_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_read_read_pfc_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_0_proc0
// static void setup_read_read_pfc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pfc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfc_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pfc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_1_proc0
// static void setup_read_read_pfc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pfc_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pfc_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfc_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfc_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pfc_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfc_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_1_proc0
// static void setup_read_read_pfc_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pfc_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pfc_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfc_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfc_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pfc_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pfc_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd8_0_proc0
// static void setup_read_read_pfc_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfc_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pfc_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfa_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfa_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pfa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfa_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfa_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pfa_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pfa_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pfa_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pfa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pfa_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pfa_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pfa_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
static void setup_read_read_pfa_1_final(void) {
  unlink("__i1");
  unlink("__i0");
  close(20);
  close(21);
}
// static void setup_read_read_pfa_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pf8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pf8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pf8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pf8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pf8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pf8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pf8_0_proc0
// static void setup_read_read_pf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pf8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pf8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pf0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pf0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
// static void setup_read_read_pf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pf0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pee_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pee_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pee_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
// static void setup_read_read_pee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pee_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pee_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pee_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pee_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_2_common
static void setup_read_read_pee_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pee_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pee_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pee_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pee_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pee_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pee_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_1_common
// static void setup_read_read_pee_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pee_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pee_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pee_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pee_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pee_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pee_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_3_common
// static void setup_read_read_pee_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc0
// static void setup_read_read_pee_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc1
// static void setup_read_read_pee_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pee_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_ped8_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, -1);
  expect_errno(11);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_read_read_ped8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_ped8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
static void setup_read_read_ped8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_ped8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_ped8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_ped8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_ped8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
// static void setup_read_read_ped8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc0
static void setup_read_read_ped8_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_ped8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_ped8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped8_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_ped8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_ped8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_2_common
// static void setup_read_read_ped8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_ped8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_ped8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_ped8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped8_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_ped8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_ped8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_ped8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc0
// static void setup_read_read_ped8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_ped8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_ped8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_ped0_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_read_read_ped0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_ped0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_ped0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_ped0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_ped0_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_ped0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_ped0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_ped0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_ped0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc0
// static void setup_read_read_ped0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc1
// static void setup_read_read_ped0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_ped0_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pec_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static int test_read_read_pec_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 0);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_read_read_pec_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_pec_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pec_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pec_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pec_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pec_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pec_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pec_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_3_common
// static void setup_read_read_pec_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pec_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pec_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pec_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pec_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pec_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pec_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_1_common
// static void setup_read_read_pec_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc0
// static void setup_read_read_pec_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pec_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pec_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pec_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pec_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pec_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_2_common
// static void setup_read_read_pec_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc0
// static void setup_read_read_pec_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pec_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pec_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pea_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pea_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_pea_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
static void setup_read_read_pea_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pea_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pea_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pea_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pea_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_pea_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
static void setup_read_read_pea_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pea_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pea_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pe8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pe8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pe8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pf8_0_common
// static void setup_read_read_pe8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pe8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pe8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pe8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pe8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pe8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_pe8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pe8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pe8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_1_proc1
// static void setup_read_read_pe8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pe8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pe0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_pe0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pe0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
// static void setup_read_read_pe0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pe0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pe0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pe0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pdf8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
static void setup_read_read_pdf8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdf8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdf8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdf8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pdf8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
static void setup_read_read_pdf8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdf8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdf8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf8_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pdf8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_pdf8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_1_proc0
// static void setup_read_read_pdf8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdf8_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf8_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pdf8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_2_common
// static void setup_read_read_pdf8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_0_proc0
// static void setup_read_read_pdf8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdf8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pdf8_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf6_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pdf6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
static void setup_read_read_pdf6_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdf6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdf6_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf6_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pdf6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_pdf6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pdf6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdf6_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf6_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf6_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pdf6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
static void setup_read_read_pdf6_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdf6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdf6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdf6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf6_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf6_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pdf6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_2_common
// static void setup_read_read_pdf6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_2_proc0
// static void setup_read_read_pdf6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdf6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pdf6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf6_4_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf6_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pdf6_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pdf6_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdf6_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdf6_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdf6_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf4_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pdf4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pdf4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdf4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc1
// static void setup_read_read_pdf4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdf4_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf4_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pdf4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pdf4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf4_0_proc0
// static void setup_read_read_pdf4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc1
// static void setup_read_read_pdf4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdf4_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pdf0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pdf0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pdf0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdf0_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdf0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdf0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pdf0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pdf0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pdf0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pdf0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdf0_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pde8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pde8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pde8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pde8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pde8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pde8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pde8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pde8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pde8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pde8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pde8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pde8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pde8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pde8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pde0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pde0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pde0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pde0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pde0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pde0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pde0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pde0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pde0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pde0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pde0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pde0_0_proc0
// static void setup_read_read_pde0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pde0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pde0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdc_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pdc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pdc_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pdc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pdb8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pdb8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pdb8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdb8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pdb8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
static void setup_read_read_pdb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc1
// static void setup_read_read_pdb8_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdb8_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb8_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb8_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pdb8_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_2_common
// static void setup_read_read_pdb8_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb8_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pdb8_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pdb8_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb8_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb8_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pdb8_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_pdb8_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pdb8_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc1
// static void setup_read_read_pdb8_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdb8_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb6_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb6_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pdb6_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
// static void setup_read_read_pdb6_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pdb6_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pdb6_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdb6_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb6_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb6_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pdb6_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_pdb6_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pdb6_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pdb6_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdb6_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb6_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb6_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pdb6_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pdb6_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb6_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb6_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pdb6_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb6_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb6_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pdb6_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_2_common
// static void setup_read_read_pdb6_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb6_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pdb6_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pdb6_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb4_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pdb4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pdb4_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pdb4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc1
// static void setup_read_read_pdb4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdb4_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb4_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pdb4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pdb4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb4_0_proc0
// static void setup_read_read_pdb4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc1
// static void setup_read_read_pdb4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdb4_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pdb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pdf0_0_common
// static void setup_read_read_pdb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pdb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pdb0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pdb0_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pdb0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pdb0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pdb0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pdf0_1_common
// static void setup_read_read_pdb0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pdb0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pdb0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pdb0_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pda8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pda8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_pda8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pda8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
static void setup_read_read_pda8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pda8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pda8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pda8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pda8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_pda8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pda8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
static void setup_read_read_pda8_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pda8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pda8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pda0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pda0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pda0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
// static void setup_read_read_pda0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
static void setup_read_read_pda0_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pda0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pda0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pda0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pda0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pda0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_1_common
// static void setup_read_read_pda0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
static void setup_read_read_pda0_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pda0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pda0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static int test_read_read_pd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pd8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd78_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pd78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_1_common
static void setup_read_read_pd78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(23, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pd78_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd78_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd78_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd78_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pd78_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_3_common
// static void setup_read_read_pd78_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc0
// static void setup_read_read_pd78_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc1
// static void setup_read_read_pd78_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd78_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd76_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd76_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pd76_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pd76_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd76_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc1
// static void setup_read_read_pd76_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd76_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd76_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd76_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pd76_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pd76_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd76_0_proc0
// static void setup_read_read_pd76_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc1
// static void setup_read_read_pd76_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd76_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd74_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd74_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pd74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pd74_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(22, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pd74_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd74_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd74_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd74_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pd74_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pd74_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_0_proc0
// static void setup_read_read_pd74_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_0_proc1
// static void setup_read_read_pd74_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd74_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd74_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd74_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pd74_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pd74_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pd74_2_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd74_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd74_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd74_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd74_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pd74_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pd74_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc0
// static void setup_read_read_pd74_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd74_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pd74_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd74_4_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd74_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd74_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_2_common
static void setup_read_read_pd74_4_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd74_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd74_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd74_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd70_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd70_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_pd70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pdf0_0_common
// static void setup_read_read_pd70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd76_0_proc0
// static void setup_read_read_pd70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc1
// static void setup_read_read_pd70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd70_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd70_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd70_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pd70_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pd70_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd76_0_proc0
// static void setup_read_read_pd70_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd78_0_proc1
// static void setup_read_read_pd70_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd70_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd68_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pd68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
static void setup_read_read_pd68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd68_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd68_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd68_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd68_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pd68_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde8_1_common
static void setup_read_read_pd68_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd68_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd68_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pd68_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd60_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_pd60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
static void setup_read_read_pd60_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd60_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd60_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd60_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd60_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_pd60_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_1_common
static void setup_read_read_pd60_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd60_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd60_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pd60_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd4_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pd4_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_pd4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd4_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd38_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pd38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pd38_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pd38_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(23, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd38_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd38_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd38_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pd38_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pd38_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc0
// static void setup_read_read_pd38_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc1
// static void setup_read_read_pd38_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd38_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd36_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd36_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pd36_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
// static void setup_read_read_pd36_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc0
static void setup_read_read_pd36_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(23);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd36_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd36_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd36_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd36_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pd36_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pd36_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc0
// static void setup_read_read_pd36_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd36_0_proc1
// static void setup_read_read_pd36_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd36_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd34_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd34_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_0_common
static void setup_read_read_pd34_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
static void setup_read_read_pd34_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(22, 10);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(22);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd34_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd34_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd34_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd34_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd34_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd0_1_common
// static void setup_read_read_pd34_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd34_0_proc0
// static void setup_read_read_pd34_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd34_0_proc1
// static void setup_read_read_pd34_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd34_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd34_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd34_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd34_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_2_common
// static void setup_read_read_pd34_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd34_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd34_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd34_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd34_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd34_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd34_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_3_common
// static void setup_read_read_pd34_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd34_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd34_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pd34_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd30_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_pd30_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pd30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc0
// static void setup_read_read_pd30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd36_0_proc1
// static void setup_read_read_pd30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pd30_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd30_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd30_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pd30_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd70_1_common
// static void setup_read_read_pd30_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd38_0_proc0
// static void setup_read_read_pd30_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd36_0_proc1
// static void setup_read_read_pd30_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pd30_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd28_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd28_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_0_common
// static void setup_read_read_pd28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
static void setup_read_read_pd28_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd28_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd28_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd28_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd28_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pd28_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_1_common
// static void setup_read_read_pd28_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
static void setup_read_read_pd28_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd28_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pd28_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd20_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd20_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pd20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
// static void setup_read_read_pd20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
static void setup_read_read_pd20_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd20_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd20_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd20_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd20_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pd20_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_1_common
// static void setup_read_read_pd20_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
static void setup_read_read_pd20_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pd20_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pd20_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pd0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pd0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_2_common
// static void setup_read_read_pd0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcf_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcf_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pcf_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_pcf_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_0_proc0
// static void setup_read_read_pcf_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcf_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pcf_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcf_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcf_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pcf_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_1_common
// static void setup_read_read_pcf_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_1_proc0
// static void setup_read_read_pcf_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pcf_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pcf_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcf_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcf_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pcf_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_2_common
// static void setup_read_read_pcf_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(23, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_1_proc0
// static void setup_read_read_pcf_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pcf_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pcf_2_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcf_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcf_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pcf_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_3_common
// static void setup_read_read_pcf_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf8_0_proc0
// static void setup_read_read_pcf_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcf_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pcf_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcee_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcee_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_pcee_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pcee_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pcee_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pcee_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pcee_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcee_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcee_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_pcee_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pcee_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pcee_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pcee_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pcee_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcea_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcea_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pcea_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pcea_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf4_0_proc0
// static void setup_read_read_pcea_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc1
// static void setup_read_read_pcea_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pcea_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcea_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcea_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pcea_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcee_1_common
// static void setup_read_read_pcea_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf4_0_proc0
// static void setup_read_read_pcea_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfd0_0_proc1
// static void setup_read_read_pcea_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pcea_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pce4_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static int test_read_read_pce4_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(11, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 1);
  if (r < 0) return xerrno(r);
  return data[0];
}
static void setup_read_read_pce4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pce4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pce4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pce4_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pce4_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pce4_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pce4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 1);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pce4_0_1
static void setup_read_read_pce4_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pce4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(22, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_0_proc0
// static void setup_read_read_pce4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_2_proc1
// static void setup_read_read_pce4_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pce4_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pce4_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pce4_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pce4_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pce4_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_2_proc0
// static void setup_read_read_pce4_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pce4_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pce4_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pce4_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pce4_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pce4_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pce4_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdf6_2_proc0
// static void setup_read_read_pce4_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pce4_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pce4_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pce4_4_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pce4_4_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pce4_4_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pce4_2_common
// static void setup_read_read_pce4_4_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pce4_4_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pce4_4_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pce4_4_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcd_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcd_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pcd_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pcd_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pde8_0_proc0
// static void setup_read_read_pcd_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcd_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pcd_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcd_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcd_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pcd_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pcd_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pcd_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcd_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pcd_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcc0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcc0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pcc0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pcc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 11);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pde0_0_proc0
// static void setup_read_read_pcc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcc0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pcc0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pcc0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pcc0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pcc0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_pcc0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 10);
  if (r < 0) setup_error("dup2");
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pcc0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pcc0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pcc0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pc8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_pc8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pc8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc7_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc7_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pc7_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_pc7_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc7_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pc7_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc7_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc7_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc7_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pc7_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_1_common
// static void setup_read_read_pc7_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc7_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc1
// static void setup_read_read_pc7_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pc7_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc7_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc7_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pc7_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_3_common
// static void setup_read_read_pc7_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc7_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pc7_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pc7_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc7_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc7_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pc7_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_2_common
// static void setup_read_read_pc7_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc7_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(23, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pee_1_proc1
// static void setup_read_read_pc7_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pc7_3_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc6e_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc6e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pc6e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcee_0_common
// static void setup_read_read_pc6e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc6e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pc6e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pc6e_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc6e_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc6e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pc6e_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcee_1_common
// static void setup_read_read_pc6e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc6e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pc6e_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pc6e_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc6a_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc6a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pc6a_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcea_0_common
// static void setup_read_read_pc6a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb4_0_proc0
// static void setup_read_read_pc6a_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc1
// static void setup_read_read_pc6a_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pc6a_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc6a_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc6a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_pc6a_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 22);
  if (r != 22) setup_error("dup2");
  r = dup2(fds[1], 23);
  if (r != 23) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pc6a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb4_0_proc0
// static void setup_read_read_pc6a_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped0_0_proc1
// static void setup_read_read_pc6a_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pc6a_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc64_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static int test_read_read_pc64_0_1(void) {
  char *data = datavalbuf;
  ssize_t r = read(10, data, 4096);
  expect_result("r", r, 4096);
  expect_result("data[0]", data[0], 1);
  if (r < 0) return xerrno(r);
  return data[0];
}
// static void setup_read_read_pc64_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pce4_0_common
// static void setup_read_read_pc64_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc64_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pc64_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_final
// static void setup_read_read_pc64_0_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc64_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc64_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 1);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pc64_0_1
// static void setup_read_read_pc64_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 22);
//   if (r != 22) setup_error("dup2");
//   r = dup2(fds[1], 23);
//   if (r != 23) setup_error("dup2");
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pce4_1_common
// static void setup_read_read_pc64_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pdb8_1_proc0
// static void setup_read_read_pc64_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(22, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(23);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
//   r = dup(22);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_1_proc1
// static void setup_read_read_pc64_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_3_final
// static void setup_read_read_pc64_1_procfinal(void) {
//   close(20);
//   close(21);
//   close(22);
//   close(23);
// }
// ^ See setup_read_read_pfe_2_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc64_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc64_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pc64_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pce4_2_common
// static void setup_read_read_pc64_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc64_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc64_2_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc64_2_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc64_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc64_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pc64_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval1, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pce4_3_common
// static void setup_read_read_pc64_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc64_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc64_3_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pc64_3_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc5_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc5_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pc5_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcd_0_common
// static void setup_read_read_pc5_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc5_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pc5_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc5_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc5_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc5_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pc5_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcd_1_common
// static void setup_read_read_pc5_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc5_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_1_proc1
// static void setup_read_read_pc5_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pc5_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc40_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc40_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_pc40_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pc40_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc40_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda0_1_proc1
// static void setup_read_read_pc40_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pc40_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc40_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc40_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pc40_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcc0_0_common
// static void setup_read_read_pc40_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc40_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda0_0_proc1
// static void setup_read_read_pc40_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc40_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pc0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_pc0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pc0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_pc0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pc0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pc0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pc0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbe_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbe_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pbe_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pea_0_common
static void setup_read_read_pbe_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbe_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbe_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pbe_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbe_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbe_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_pbe_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pbe_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pbe_0_proc0
// static void setup_read_read_pbe_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbe_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pbe_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbd8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbd8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pbd8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_0_common
static void setup_read_read_pbd8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbd8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbd8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pbd8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbd8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbd8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_pbd8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_1_common
static void setup_read_read_pbd8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbd8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbd8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pbd8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbd0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbd0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pbd0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_0_common
static void setup_read_read_pbd0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbd0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pbd0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pbd0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbd0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbd0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pbd0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_1_common
static void setup_read_read_pbd0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbd0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_pbd0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_pbd0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbc_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbc_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_pbc_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcd_0_common
static void setup_read_read_pbc_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_pbc_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbc_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pbc_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pbc_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pbc_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pbc_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pbc_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pbc_0_proc0
// static void setup_read_read_pbc_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_pbc_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pbc_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pba_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pba_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pba_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_read_read_pba_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_read_read_pba_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
}
static void setup_read_read_pba_0_final(void) {
  unlink("__i0");
  unlink("__i1");
}
static void setup_read_read_pba_0_procfinal(void) {
  
}

/*
 * calls: read read
 */
// static int test_read_read_pba_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pba_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_pba_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
}
static void setup_read_read_pba_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pba_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
static void setup_read_read_pba_1_final(void) {
  unlink("__i0");
}
// static void setup_read_read_pba_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pba_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pba_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_pba_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
static void setup_read_read_pba_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pba_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pba_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pba_2_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pba_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pba_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pba_3_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
static void setup_read_read_pba_3_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pba_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pba_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pba_3_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pb8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pb8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pb8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_pb8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pb8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pb8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_pb8_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pb8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pb8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_pb8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_pb8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pb8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pb8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pb8_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pb0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pb0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_pb0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
// static void setup_read_read_pb0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_pb0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pb0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pb0_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pae_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pae_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pae_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pea_0_common
// static void setup_read_read_pae_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pae_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pae_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pae_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pae_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pae_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pae_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pbe_1_common
// static void setup_read_read_pae_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pae_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_pae_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pae_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pad8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pad8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_pad8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_0_common
// static void setup_read_read_pad8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda8_0_proc1
// static void setup_read_read_pad8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pad8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pad8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pad8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pad8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
static void setup_read_read_pad8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_pad8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda8_0_proc1
// static void setup_read_read_pad8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pad8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pad8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pad0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pad0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pad0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pda8_0_common
// static void setup_read_read_pad0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd28_0_proc1
// static void setup_read_read_pad0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pad0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pad0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pad0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pad0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_pad0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pad8_1_common
// static void setup_read_read_pad0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 155648, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd28_0_proc1
// static void setup_read_read_pad0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_pad0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pad0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pac_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pac_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pac_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pcd_0_common
// static void setup_read_read_pac_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pac_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pac_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_pac_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pac_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pac_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pac_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pbc_1_common
// static void setup_read_read_pac_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_pac_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_pac_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_pac_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_paa_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_paa_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_paa_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_read_read_paa_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_paa_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_paa_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_paa_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_paa_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_paa_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_paa_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
// static void setup_read_read_paa_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_paa_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_paa_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_paa_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_paa_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_paa_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_paa_2_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
// static void setup_read_read_paa_2_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_paa_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_paa_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_paa_2_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pa8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pa8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_pa8_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_read_read_pa8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_pa8_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pa8_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_pa8_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pa8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pa8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_pa8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_pb8_1_common
static void setup_read_read_pa8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
static void setup_read_read_pa8_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_pa8_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pa8_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_pa0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static int test_read_read_pa0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_pa0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
// static void setup_read_read_pa0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_pa0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_pa0_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_pa0_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9e_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_p9e_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pf8_0_common
// static void setup_read_read_p9e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(21, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pbe_0_proc0
// static void setup_read_read_p9e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9e_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p9e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9e_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_p9e_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_p9e_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p9e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9e_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_p9e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9d8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_p9d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
static void setup_read_read_p9d8_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p9d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p9d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9d8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
static void setup_read_read_p9d8_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  close(fds[0]);
  close(fds[1]);
}
static void setup_read_read_p9d8_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p9d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9d8_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_p9d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9d0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9d0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_p9d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
static void setup_read_read_p9d0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p9d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_p9d0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p9d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9d0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9d0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_p9d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_p9d8_1_common
static void setup_read_read_p9d0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 12288, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p9d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_p9d0_1_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_p9d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9c0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9c0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_p9c0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_p9c0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pbc_0_proc0
// static void setup_read_read_p9c0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9c0_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p9c0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9c0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9c0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_p9c0_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_p9c0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pbc_0_proc0
// static void setup_read_read_p9c0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p9c0_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_p9c0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9b0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9b0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
static void setup_read_read_p9b0_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_p9b0_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 10006528, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p9b0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p9b0_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_p9b0_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p9b0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p9b0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_p9b0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_pb8_1_common
static void setup_read_read_p9b0_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 20480, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 5087232, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p9b0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p9b0_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p9b0_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p990_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p990_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 1);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pce4_0_1
static void setup_read_read_p990_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_p990_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p990_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p990_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_p990_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p990_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p990_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
static void setup_read_read_p990_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_p990_1_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 24576, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p990_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p990_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p990_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p990_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p990_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 1);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pce4_0_1
static void setup_read_read_p990_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval1, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_p990_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p990_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p990_2_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p990_2_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p990_3_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p990_3_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_p990_3_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_read_read_p990_3_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p990_3_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p990_3_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p990_3_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p90_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p90_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_p90_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_read_read_p90_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p90_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p90_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p90_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8e_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8e_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static void setup_read_read_p8e_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_p8e_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_p8e_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_p8e_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_1_final
// static void setup_read_read_p8e_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8e_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8e_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
static void setup_read_read_p8e_1_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  r = pipe2(fds, O_NONBLOCK);
  if (r != 0) setup_error("pipe => %d", r);
  r = dup2(fds[0], 20);
  if (r != 20) setup_error("dup2");
  r = dup2(fds[1], 21);
  if (r != 21) setup_error("dup2");
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fds[1], dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fds[0]);
  close(fds[1]);
}
// static void setup_read_read_p8e_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_p8e_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_p8e_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p8e_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8d8_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8d8_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_p8d8_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
// static void setup_read_read_p8d8_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda0_0_proc1
// static void setup_read_read_p8d8_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p8d8_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p8d8_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8d8_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8d8_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_p8d8_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_1_common
// static void setup_read_read_p8d8_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pda0_0_proc1
// static void setup_read_read_p8d8_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p8d8_1_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_p8d8_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8d0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8d0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_p8d0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_1_common
// static void setup_read_read_p8d0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd20_0_proc1
// static void setup_read_read_p8d0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_p8d0_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_p8d0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8d0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8d0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_p8d0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pde0_0_common
// static void setup_read_read_p8d0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd20_0_proc1
// static void setup_read_read_p8d0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_p8d0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p8d0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8c0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8c0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p8c0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i1", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_p9c0_1_common
// static void setup_read_read_p8c0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_p8c0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p8c0_0_final(void) {
//   unlink("__i1");
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfa_1_final
// static void setup_read_read_p8c0_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8c0_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8c0_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p8c0_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_p9c0_0_common
// static void setup_read_read_p8c0_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pea_0_proc1
// static void setup_read_read_p8c0_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p8c0_1_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p8c0_1_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8a_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8a_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
static void setup_read_read_p8a_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
// static void setup_read_read_p8a_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_p8a_0_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i1", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31617024, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p8a_0_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_p8a_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p8a_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p8a_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_p8a_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p90_0_common
// static void setup_read_read_p8a_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_p8a_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 31621120, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p8a_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p8a_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p88_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p88_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p88_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p90_0_common
// static void setup_read_read_p88_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p88_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p88_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p88_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p88_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p88_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p88_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p990_3_common
// static void setup_read_read_p88_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
static void setup_read_read_p88_1_proc1(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 4096, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p88_1_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p88_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p88_2_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p88_2_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
static void setup_read_read_p88_2_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
  fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i0", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
  fd = open("__i1", O_CREAT | O_TRUNC | O_RDWR, 0666);
  if (fd < 0) setup_error("open");
  write(fd, "x", 1);
  close(fd);
  fd = open("__i1", O_TRUNC | O_RDWR);
  if (fd < 0) setup_error("open");
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  r = write(fd, dataval0, 4096);
  if (r != 4096) setup_error("write => %d", r);
  close(fd);
}
static void setup_read_read_p88_2_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 16384, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 10);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p88_2_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i1", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 12288, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pa8_0_proc1
// static void setup_read_read_p88_2_final(void) {
//   unlink("__i0");
//   unlink("__i1");
// }
// ^ See setup_read_read_pba_0_final
// static void setup_read_read_p88_2_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p80_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static int test_read_read_p80_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_p80_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p90_0_common
// static void setup_read_read_p80_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p80_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p80_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p80_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p78_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p78_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
// static void setup_read_read_p78_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
static void setup_read_read_p78_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(21, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p78_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p78_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p78_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p76_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p76_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd8_0_1
// static void setup_read_read_p76_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
static void setup_read_read_p76_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
  r = dup(21);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p76_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p76_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p76_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p74_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p74_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_p74_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_2_common
static void setup_read_read_p74_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  r = dup2(20, 11);
  if (r < 0) setup_error("dup2");
  r = dup(20);
  if (r < 0) setup_error("dup");
}
// static void setup_read_read_p74_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_p74_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p74_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p70_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p70_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_p70_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_p70_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 11);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_p76_0_proc0
// static void setup_read_read_p70_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p70_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p70_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p68_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p68_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfd0_0_1
// static void setup_read_read_p68_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
static void setup_read_read_p68_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 155648, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p68_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p68_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p68_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p60_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p60_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfc_0_1
// static void setup_read_read_p60_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p90_0_common
static void setup_read_read_p60_0_proc0(void) {
  int fd __attribute__((unused));
  int r __attribute__((unused));
  fd = open("__i0", O_RDWR);
  if (fd < 0) setup_error("open");
  r = lseek(fd, 0, SEEK_SET);
  if (fd >= 0 && r < 0) setup_error("lseek");
  r = dup2(fd, 11);
  if (fd >= 0 && r < 0) setup_error("dup2");
  close(fd);
}
// static void setup_read_read_p60_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p60_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p60_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p4_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p4_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(11, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_1
static void setup_read_read_p4_0_common(void) {
  int fd __attribute__((unused));
  int fds[2] __attribute__((unused));
  int r __attribute__((unused));
  char c __attribute__((unused));
}
// static void setup_read_read_p4_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p4_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p4_0_final(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal
// static void setup_read_read_p4_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p4_1_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p4_1_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_p4_1_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_read_read_p4_0_common
// static void setup_read_read_p4_1_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p4_1_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p4_1_final(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal
// static void setup_read_read_p4_1_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p38_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p38_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_p38_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfe_0_common
// static void setup_read_read_p38_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p38_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(21, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_4_proc0
// static void setup_read_read_p38_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p38_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p36_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p36_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(11);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped8_0_1
// static void setup_read_read_p36_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfd8_0_common
// static void setup_read_read_p36_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p36_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p36_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p36_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p34_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p34_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_p34_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pd74_2_common
// static void setup_read_read_p34_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_2_proc1
// static void setup_read_read_p34_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pd74_4_proc0
// static void setup_read_read_p34_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p34_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p30_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p30_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p30_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
//   r = pipe2(fds, O_NONBLOCK);
//   if (r != 0) setup_error("pipe => %d", r);
//   r = dup2(fds[0], 20);
//   if (r != 20) setup_error("dup2");
//   r = dup2(fds[1], 21);
//   if (r != 21) setup_error("dup2");
//   r = write(fds[1], dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fds[0]);
//   close(fds[1]);
// }
// ^ See setup_read_read_pfc_0_common
// static void setup_read_read_p30_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_pfe_0_proc1
// static void setup_read_read_p30_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   r = dup2(20, 10);
//   if (r < 0) setup_error("dup2");
//   r = dup(20);
//   if (r < 0) setup_error("dup");
//   r = dup(21);
//   if (r < 0) setup_error("dup");
// }
// ^ See setup_read_read_ped8_0_proc1
// static void setup_read_read_p30_0_final(void) {
//   unlink("__i0");
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_final
// static void setup_read_read_p30_0_procfinal(void) {
//   close(20);
//   close(21);
// }
// ^ See setup_read_read_pfe_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p28_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p28_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_ped0_0_1
// static void setup_read_read_p28_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   close(fd);
// }
// ^ See setup_read_read_pba_1_common
// static void setup_read_read_p28_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p28_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p28_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p28_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p20_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p20_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, 4096);
//   expect_result("data[0]", data[0], 0);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pec_0_1
// static void setup_read_read_p20_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
//   fd = open("__i0", O_CREAT | O_TRUNC | O_RDWR, 0666);
//   if (fd < 0) setup_error("open");
//   write(fd, "x", 1);
//   close(fd);
//   fd = open("__i0", O_TRUNC | O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = write(fd, dataval0, 4096);
//   if (r != 4096) setup_error("write => %d", r);
//   close(fd);
// }
// ^ See setup_read_read_p90_0_common
// static void setup_read_read_p20_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p20_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
//   fd = open("__i0", O_RDWR);
//   if (fd < 0) setup_error("open");
//   r = lseek(fd, 0, SEEK_SET);
//   if (fd >= 0 && r < 0) setup_error("lseek");
//   r = dup2(fd, 10);
//   if (fd >= 0 && r < 0) setup_error("dup2");
//   close(fd);
// }
// ^ See setup_read_read_pba_3_proc0
// static void setup_read_read_p20_0_final(void) {
//   unlink("__i0");
// }
// ^ See setup_read_read_pba_1_final
// static void setup_read_read_p20_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

/*
 * calls: read read
 */
// static int test_read_read_p0_0_0(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static int test_read_read_p0_0_1(void) {
//   char *data = datavalbuf;
//   ssize_t r = read(10, data, 4096);
//   expect_result("r", r, -1);
//   expect_errno(9);
//   if (r < 0) return xerrno(r);
//   return data[0];
// }
// ^ See test_read_read_pfe_0_0
// static void setup_read_read_p0_0_common(void) {
//   int fd __attribute__((unused));
//   int fds[2] __attribute__((unused));
//   int r __attribute__((unused));
//   char c __attribute__((unused));
// }
// ^ See setup_read_read_p4_0_common
// static void setup_read_read_p0_0_proc0(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p0_0_proc1(void) {
//   int fd __attribute__((unused));
//   int r __attribute__((unused));
// }
// ^ See setup_read_read_pba_0_proc1
// static void setup_read_read_p0_0_final(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal
// static void setup_read_read_p0_0_procfinal(void) {
//   
// }
// ^ See setup_read_read_pba_0_procfinal

//+++ common
static void cleanup(void) {
  unlink("__f0");
  unlink("__f1");
  unlink("__f2");
  unlink("__f3");
  unlink("__f4");
  unlink("__f5");
}

struct fstest fstests[] = {
//+++ tests
  { "fs-read_read_pfe_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfe_1",
    &setup_read_read_pfe_1_common,
    { { &setup_read_read_pfe_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfe_2",
    &setup_read_read_pfe_2_common,
    { { &setup_read_read_pfe_2_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfe_3",
    &setup_read_read_pfe_3_common,
    { { &setup_read_read_pfe_2_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfe_4",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd8_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pfd8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd8_1",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pfd8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd8_2",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_pfd8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd8_3",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pfd8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd0_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pfd0_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfd0_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pfd0_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfc_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_pfd8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfc_1",
    &setup_read_read_pfc_1_common,
    { { &setup_read_read_pfd8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfc_2",
    &setup_read_read_pfc_2_common,
    { { &setup_read_read_pfd8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfc_3",
    &setup_read_read_pfc_3_common,
    { { &setup_read_read_pfd8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfa_0",
    &setup_read_read_pfa_0_common,
    { { &setup_read_read_pfa_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pfa_1",
    &setup_read_read_pfa_1_common,
    { { &setup_read_read_pfa_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pf8_0",
    &setup_read_read_pf8_0_common,
    { { &setup_read_read_pf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pf8_1",
    &setup_read_read_pf8_1_common,
    { { &setup_read_read_pf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pf0_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pee_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pee_1",
    &setup_read_read_pfe_2_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pee_2",
    &setup_read_read_pfe_1_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pee_3",
    &setup_read_read_pfe_3_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped8_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped8_1",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped8_2",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped8_3",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped0_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_ped0_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_ped0_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_ped0_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pec_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pec_1",
    &setup_read_read_pfc_3_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pec_2",
    &setup_read_read_pfc_1_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pec_3",
    &setup_read_read_pfc_2_common,
    { { &setup_read_read_pee_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pea_0",
    &setup_read_read_pea_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pea_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pea_1",
    &setup_read_read_pea_1_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pea_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pe8_0",
    &setup_read_read_pf8_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pea_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pe8_1",
    &setup_read_read_pe8_1_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pea_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pe0_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_4_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdf8_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pdf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf8_1",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pdf8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf8_2",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pdf8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf8_3",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_pdf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf6_0",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf6_1",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf6_2",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pdf6_2_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf6_3",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_pdf6_2_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf6_4",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf4_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pdf4_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf4_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pdf4_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf0_0",
    &setup_read_read_pdf0_0_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdf0_1",
    &setup_read_read_pdf0_1_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pde8_0",
    &setup_read_read_pde8_0_common,
    { { &setup_read_read_pde8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pde8_1",
    &setup_read_read_pde8_1_common,
    { { &setup_read_read_pde8_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pde0_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_pde0_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pde0_1",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_pde0_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdc_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pdb8_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb8_1",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb8_2",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb8_3",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb6_0",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb6_1",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb6_2",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb6_3",
    &setup_read_read_pfd8_2_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb4_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pdb4_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb4_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pdb4_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb0_0",
    &setup_read_read_pdf0_0_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pdb0_1",
    &setup_read_read_pdf0_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pda8_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pda8_1",
    &setup_read_read_pda8_1_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda8_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pda0_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda0_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pda0_1",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda0_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd8_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped8_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd78_0",
    &setup_read_read_pfd8_1_common,
    { { &setup_read_read_pd78_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd78_1",
    &setup_read_read_pfd8_3_common,
    { { &setup_read_read_pd78_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd76_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pd76_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd76_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pd76_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd74_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pd74_0_proc0 }, { &setup_read_read_pd74_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd74_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pd74_0_proc0 }, { &setup_read_read_pd74_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd74_2",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_pd74_2_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd74_3",
    &setup_read_read_pd74_3_common,
    { { &setup_read_read_pd74_2_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd74_4",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd70_0",
    &setup_read_read_pdf0_0_common,
    { { &setup_read_read_pd76_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd70_1",
    &setup_read_read_pd70_1_common,
    { { &setup_read_read_pd76_0_proc0 }, { &setup_read_read_pd78_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd68_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pd68_0_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd68_1",
    &setup_read_read_pde8_1_common,
    { { &setup_read_read_pd68_1_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd60_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_pd60_0_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd60_1",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_pd60_1_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd4_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pd38_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd38_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd38_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd38_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd36_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd36_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd36_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd36_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd34_0",
    &setup_read_read_pfd0_0_common,
    { { &setup_read_read_pd34_0_proc0 }, { &setup_read_read_pd34_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd34_1",
    &setup_read_read_pfd0_1_common,
    { { &setup_read_read_pd34_0_proc0 }, { &setup_read_read_pd34_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd34_2",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd34_3",
    &setup_read_read_pd74_3_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd30_0",
    &setup_read_read_pd30_0_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd36_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd30_1",
    &setup_read_read_pd70_1_common,
    { { &setup_read_read_pd38_0_proc0 }, { &setup_read_read_pd36_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd28_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd28_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd28_1",
    &setup_read_read_pda8_1_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd28_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd20_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd20_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd20_1",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd20_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pd0_0",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_pd74_4_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pcf_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_pdf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcf_1",
    &setup_read_read_pfc_1_common,
    { { &setup_read_read_pdf8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcf_2",
    &setup_read_read_pfc_2_common,
    { { &setup_read_read_pdf8_1_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcf_3",
    &setup_read_read_pfc_3_common,
    { { &setup_read_read_pdf8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcee_0",
    &setup_read_read_pcee_0_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcee_1",
    &setup_read_read_pcee_1_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcea_0",
    &setup_read_read_pcea_0_common,
    { { &setup_read_read_pdf4_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcea_1",
    &setup_read_read_pcee_1_common,
    { { &setup_read_read_pdf4_0_proc0 }, { &setup_read_read_pfd0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pce4_0",
    &setup_read_read_pce4_0_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pce4_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pce4_1",
    &setup_read_read_pce4_1_common,
    { { &setup_read_read_pdf6_0_proc0 }, { &setup_read_read_pfe_2_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pce4_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pce4_2",
    &setup_read_read_pce4_2_common,
    { { &setup_read_read_pdf6_2_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pce4_3",
    &setup_read_read_pce4_3_common,
    { { &setup_read_read_pdf6_2_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pce4_4",
    &setup_read_read_pce4_2_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcd_0",
    &setup_read_read_pcd_0_common,
    { { &setup_read_read_pde8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcd_1",
    &setup_read_read_pcd_1_common,
    { { &setup_read_read_pcd_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcc0_0",
    &setup_read_read_pcc0_0_common,
    { { &setup_read_read_pde0_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pcc0_1",
    &setup_read_read_pcc0_1_common,
    { { &setup_read_read_pcc0_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pc8_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pc7_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc7_1",
    &setup_read_read_pfc_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc7_2",
    &setup_read_read_pfc_3_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc7_3",
    &setup_read_read_pfc_2_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_pee_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc6e_0",
    &setup_read_read_pcee_0_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc6e_1",
    &setup_read_read_pcee_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc6a_0",
    &setup_read_read_pcea_0_common,
    { { &setup_read_read_pdb4_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc6a_1",
    &setup_read_read_pc6a_1_common,
    { { &setup_read_read_pdb4_0_proc0 }, { &setup_read_read_ped0_0_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc64_0",
    &setup_read_read_pce4_0_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_2_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pc64_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc64_1",
    &setup_read_read_pce4_1_common,
    { { &setup_read_read_pdb8_1_proc0 }, { &setup_read_read_ped8_1_proc1 } },
    &setup_read_read_pfe_2_procfinal,
    &setup_read_read_pfe_3_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pc64_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc64_2",
    &setup_read_read_pce4_2_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc64_3",
    &setup_read_read_pce4_3_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc5_0",
    &setup_read_read_pcd_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pea_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc5_1",
    &setup_read_read_pcd_1_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pea_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc40_0",
    &setup_read_read_pc40_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda0_1_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc40_1",
    &setup_read_read_pcc0_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pda0_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pc0_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_ped8_0_proc1 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pbe_0",
    &setup_read_read_pea_0_common,
    { { &setup_read_read_pbe_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbe_1",
    &setup_read_read_pbe_1_common,
    { { &setup_read_read_pbe_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbd8_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_pbd8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbd8_1",
    &setup_read_read_pda8_1_common,
    { { &setup_read_read_pbd8_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbd0_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_pbd0_0_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbd0_1",
    &setup_read_read_pda8_1_common,
    { { &setup_read_read_pbd0_1_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbc_0",
    &setup_read_read_pcd_0_common,
    { { &setup_read_read_pbc_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pbc_1",
    &setup_read_read_pbc_1_common,
    { { &setup_read_read_pbc_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pba_0",
    &setup_read_read_pba_0_common,
    { { &setup_read_read_pba_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pba_1",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_1_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pba_2",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_2_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pba_3",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pb8_0",
    &setup_read_read_pb8_0_common,
    { { &setup_read_read_pb8_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pb8_1",
    &setup_read_read_pb8_1_common,
    { { &setup_read_read_pb8_1_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pb0_0",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_pae_0",
    &setup_read_read_pea_0_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pae_1",
    &setup_read_read_pbe_1_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_pad8_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_pda8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pad8_1",
    &setup_read_read_pad8_1_common,
    { { &setup_read_read_pda8_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pad0_0",
    &setup_read_read_pda8_0_common,
    { { &setup_read_read_pd28_0_proc1 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pad0_1",
    &setup_read_read_pad8_1_common,
    { { &setup_read_read_pd28_0_proc1 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pac_0",
    &setup_read_read_pcd_0_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pac_1",
    &setup_read_read_pbc_1_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_paa_0",
    &setup_read_read_paa_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_paa_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_paa_1",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_paa_1_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_paa_2",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_3_proc0 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pa8_0",
    &setup_read_read_pa8_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pa8_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pa8_1",
    &setup_read_read_pb8_1_common,
    { { &setup_read_read_pa8_1_proc0 }, { &setup_read_read_pa8_1_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_pa0_0",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_ped0_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_p9e_0",
    &setup_read_read_pf8_0_common,
    { { &setup_read_read_pbe_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9e_1",
    &setup_read_read_p9e_1_common,
    { { &setup_read_read_p9e_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9d8_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_p9d8_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9d8_1",
    &setup_read_read_p9d8_1_common,
    { { &setup_read_read_p9d8_1_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9d0_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_p9d0_0_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9d0_1",
    &setup_read_read_p9d8_1_common,
    { { &setup_read_read_p9d0_1_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9c0_0",
    &setup_read_read_p9c0_0_common,
    { { &setup_read_read_pbc_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9c0_1",
    &setup_read_read_p9c0_1_common,
    { { &setup_read_read_pbc_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9b0_0",
    &setup_read_read_p9b0_0_common,
    { { &setup_read_read_p9b0_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p9b0_1",
    &setup_read_read_pb8_1_common,
    { { &setup_read_read_p9b0_1_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p990_0",
    &setup_read_read_p990_0_common,
    { { &setup_read_read_p990_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pce4_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p990_1",
    &setup_read_read_p990_1_common,
    { { &setup_read_read_p990_1_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p990_2",
    &setup_read_read_p990_2_common,
    { { &setup_read_read_p990_2_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pce4_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p990_3",
    &setup_read_read_p990_3_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p90_0",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p8e_0",
    &setup_read_read_p8e_0_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8e_1",
    &setup_read_read_p8e_1_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8d8_0",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_pda0_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8d8_1",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_pda0_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8d0_0",
    &setup_read_read_pde0_1_common,
    { { &setup_read_read_pd20_0_proc1 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8d0_1",
    &setup_read_read_pde0_0_common,
    { { &setup_read_read_pd20_0_proc1 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8c0_0",
    &setup_read_read_p9c0_1_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfa_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8c0_1",
    &setup_read_read_p9c0_0_common,
    { { &setup_read_read_pea_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8a_0",
    &setup_read_read_p8a_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_p8a_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p8a_1",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_p8a_1_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p88_0",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_3_proc0 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p88_1",
    &setup_read_read_p990_3_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_p88_1_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p88_2",
    &setup_read_read_p88_2_common,
    { { &setup_read_read_p88_2_proc0 }, { &setup_read_read_pa8_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p80_0",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_pba_3_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pec_0_1, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_p78_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_p78_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p76_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_p76_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd8_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p74_0",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_p74_0_proc0 }, { &setup_read_read_pd74_2_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p70_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_p76_0_proc0 }, { &setup_read_read_pfe_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p68_0",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_p68_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfd0_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p60_0",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_p60_0_proc0 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfc_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p4_0",
    &setup_read_read_p4_0_common,
    { { &setup_read_read_pba_0_proc1 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_procfinal,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_1, 0, "read" } },
    &cleanup },
  { "fs-read_read_p4_1",
    &setup_read_read_p4_0_common,
    { { &setup_read_read_pba_0_proc1 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_procfinal,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 0, "read" } },
    &cleanup },
  { "fs-read_read_p38_0",
    &setup_read_read_pfe_0_common,
    { { &setup_read_read_pfe_0_proc1 }, { &setup_read_read_pfe_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
  { "fs-read_read_p36_0",
    &setup_read_read_pfd8_0_common,
    { { &setup_read_read_pfe_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped8_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p34_0",
    &setup_read_read_pd74_2_common,
    { { &setup_read_read_pd74_2_proc1 }, { &setup_read_read_pd74_4_proc0 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p30_0",
    &setup_read_read_pfc_0_common,
    { { &setup_read_read_pfe_0_proc1 }, { &setup_read_read_ped8_0_proc1 } },
    &setup_read_read_pfe_0_procfinal,
    &setup_read_read_pfe_0_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p28_0",
    &setup_read_read_pba_1_common,
    { { &setup_read_read_pba_0_proc1 }, { &setup_read_read_pba_3_proc0 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_ped0_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p20_0",
    &setup_read_read_p90_0_common,
    { { &setup_read_read_pba_0_proc1 }, { &setup_read_read_pba_3_proc0 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_1_final,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pec_0_1, 1, "read" } },
    &cleanup },
  { "fs-read_read_p0_0",
    &setup_read_read_p4_0_common,
    { { &setup_read_read_pba_0_proc1 }, { &setup_read_read_pba_0_proc1 } },
    &setup_read_read_pba_0_procfinal,
    &setup_read_read_pba_0_procfinal,
    { { &test_read_read_pfe_0_0, 0, "read" },
      { &test_read_read_pfe_0_0, 1, "read" } },
    &cleanup },
//+++ common
  {}
};
